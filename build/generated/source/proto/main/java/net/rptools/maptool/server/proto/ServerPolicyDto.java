// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_transfer_objects.proto

package net.rptools.maptool.server.proto;

/**
 * Protobuf type {@code maptool.ServerPolicyDto}
 */
public final class ServerPolicyDto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maptool.ServerPolicyDto)
    ServerPolicyDtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ServerPolicyDto.newBuilder() to construct.
  private ServerPolicyDto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ServerPolicyDto() {
    movementMetric_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ServerPolicyDto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ServerPolicyDto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            useStrictTokenManagement_ = input.readBool();
            break;
          }
          case 16: {

            isMovementLocked_ = input.readBool();
            break;
          }
          case 24: {

            isTokenEditorLocked_ = input.readBool();
            break;
          }
          case 32: {

            playersCanRevealVision_ = input.readBool();
            break;
          }
          case 40: {

            gmRevealsVisionForUnownedTokens_ = input.readBool();
            break;
          }
          case 48: {

            useIndividualViews_ = input.readBool();
            break;
          }
          case 56: {

            restrictedImpersonation_ = input.readBool();
            break;
          }
          case 64: {

            playersReceiveCampaignMacros_ = input.readBool();
            break;
          }
          case 72: {

            useToolTipsForDefaultRollFormat_ = input.readBool();
            break;
          }
          case 80: {

            useIndividualFOW_ = input.readBool();
            break;
          }
          case 88: {

            isAutoRevealOnMovement_ = input.readBool();
            break;
          }
          case 96: {

            includeOwnedNPCs_ = input.readBool();
            break;
          }
          case 104: {
            int rawValue = input.readEnum();

            movementMetric_ = rawValue;
            break;
          }
          case 112: {

            usingAstarPathfinding_ = input.readBool();
            break;
          }
          case 120: {

            vblBlocksMove_ = input.readBool();
            break;
          }
          case 128: {

            hideMapSelectUi_ = input.readBool();
            break;
          }
          case 136: {

            lockPlayerLibrary_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_ServerPolicyDto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_ServerPolicyDto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            net.rptools.maptool.server.proto.ServerPolicyDto.class, net.rptools.maptool.server.proto.ServerPolicyDto.Builder.class);
  }

  public static final int USE_STRICT_TOKEN_MANAGEMENT_FIELD_NUMBER = 1;
  private boolean useStrictTokenManagement_;
  /**
   * <code>bool use_strict_token_management = 1;</code>
   * @return The useStrictTokenManagement.
   */
  @java.lang.Override
  public boolean getUseStrictTokenManagement() {
    return useStrictTokenManagement_;
  }

  public static final int IS_MOVEMENT_LOCKED_FIELD_NUMBER = 2;
  private boolean isMovementLocked_;
  /**
   * <code>bool is_movement_locked = 2;</code>
   * @return The isMovementLocked.
   */
  @java.lang.Override
  public boolean getIsMovementLocked() {
    return isMovementLocked_;
  }

  public static final int IS_TOKEN_EDITOR_LOCKED_FIELD_NUMBER = 3;
  private boolean isTokenEditorLocked_;
  /**
   * <code>bool is_token_editor_locked = 3;</code>
   * @return The isTokenEditorLocked.
   */
  @java.lang.Override
  public boolean getIsTokenEditorLocked() {
    return isTokenEditorLocked_;
  }

  public static final int PLAYERS_CAN_REVEAL_VISION_FIELD_NUMBER = 4;
  private boolean playersCanRevealVision_;
  /**
   * <code>bool players_can_reveal_vision = 4;</code>
   * @return The playersCanRevealVision.
   */
  @java.lang.Override
  public boolean getPlayersCanRevealVision() {
    return playersCanRevealVision_;
  }

  public static final int GM_REVEALS_VISION_FOR_UNOWNED_TOKENS_FIELD_NUMBER = 5;
  private boolean gmRevealsVisionForUnownedTokens_;
  /**
   * <code>bool gm_reveals_vision_for_unowned_tokens = 5;</code>
   * @return The gmRevealsVisionForUnownedTokens.
   */
  @java.lang.Override
  public boolean getGmRevealsVisionForUnownedTokens() {
    return gmRevealsVisionForUnownedTokens_;
  }

  public static final int USE_INDIVIDUAL_VIEWS_FIELD_NUMBER = 6;
  private boolean useIndividualViews_;
  /**
   * <code>bool use_individual_views = 6;</code>
   * @return The useIndividualViews.
   */
  @java.lang.Override
  public boolean getUseIndividualViews() {
    return useIndividualViews_;
  }

  public static final int RESTRICTED_IMPERSONATION_FIELD_NUMBER = 7;
  private boolean restrictedImpersonation_;
  /**
   * <code>bool restricted_impersonation = 7;</code>
   * @return The restrictedImpersonation.
   */
  @java.lang.Override
  public boolean getRestrictedImpersonation() {
    return restrictedImpersonation_;
  }

  public static final int PLAYERS_RECEIVE_CAMPAIGN_MACROS_FIELD_NUMBER = 8;
  private boolean playersReceiveCampaignMacros_;
  /**
   * <code>bool players_receive_campaign_macros = 8;</code>
   * @return The playersReceiveCampaignMacros.
   */
  @java.lang.Override
  public boolean getPlayersReceiveCampaignMacros() {
    return playersReceiveCampaignMacros_;
  }

  public static final int USE_TOOL_TIPS_FOR_DEFAULT_ROLL_FORMAT_FIELD_NUMBER = 9;
  private boolean useToolTipsForDefaultRollFormat_;
  /**
   * <code>bool use_tool_tips_for_default_roll_format = 9;</code>
   * @return The useToolTipsForDefaultRollFormat.
   */
  @java.lang.Override
  public boolean getUseToolTipsForDefaultRollFormat() {
    return useToolTipsForDefaultRollFormat_;
  }

  public static final int USE_INDIVIDUAL_FOW_FIELD_NUMBER = 10;
  private boolean useIndividualFOW_;
  /**
   * <code>bool use_individual_FOW = 10;</code>
   * @return The useIndividualFOW.
   */
  @java.lang.Override
  public boolean getUseIndividualFOW() {
    return useIndividualFOW_;
  }

  public static final int IS_AUTO_REVEAL_ON_MOVEMENT_FIELD_NUMBER = 11;
  private boolean isAutoRevealOnMovement_;
  /**
   * <code>bool is_auto_reveal_on_movement = 11;</code>
   * @return The isAutoRevealOnMovement.
   */
  @java.lang.Override
  public boolean getIsAutoRevealOnMovement() {
    return isAutoRevealOnMovement_;
  }

  public static final int INCLUDE_OWNED_NPCS_FIELD_NUMBER = 12;
  private boolean includeOwnedNPCs_;
  /**
   * <code>bool include_owned_NPCs = 12;</code>
   * @return The includeOwnedNPCs.
   */
  @java.lang.Override
  public boolean getIncludeOwnedNPCs() {
    return includeOwnedNPCs_;
  }

  public static final int MOVEMENT_METRIC_FIELD_NUMBER = 13;
  private int movementMetric_;
  /**
   * <code>.maptool.WalkerMetricDto movement_metric = 13;</code>
   * @return The enum numeric value on the wire for movementMetric.
   */
  @java.lang.Override public int getMovementMetricValue() {
    return movementMetric_;
  }
  /**
   * <code>.maptool.WalkerMetricDto movement_metric = 13;</code>
   * @return The movementMetric.
   */
  @java.lang.Override public net.rptools.maptool.server.proto.WalkerMetricDto getMovementMetric() {
    @SuppressWarnings("deprecation")
    net.rptools.maptool.server.proto.WalkerMetricDto result = net.rptools.maptool.server.proto.WalkerMetricDto.valueOf(movementMetric_);
    return result == null ? net.rptools.maptool.server.proto.WalkerMetricDto.UNRECOGNIZED : result;
  }

  public static final int USING_ASTAR_PATHFINDING_FIELD_NUMBER = 14;
  private boolean usingAstarPathfinding_;
  /**
   * <code>bool using_astar_pathfinding = 14;</code>
   * @return The usingAstarPathfinding.
   */
  @java.lang.Override
  public boolean getUsingAstarPathfinding() {
    return usingAstarPathfinding_;
  }

  public static final int VBL_BLOCKS_MOVE_FIELD_NUMBER = 15;
  private boolean vblBlocksMove_;
  /**
   * <code>bool vbl_blocks_move = 15;</code>
   * @return The vblBlocksMove.
   */
  @java.lang.Override
  public boolean getVblBlocksMove() {
    return vblBlocksMove_;
  }

  public static final int HIDE_MAP_SELECT_UI_FIELD_NUMBER = 16;
  private boolean hideMapSelectUi_;
  /**
   * <code>bool hide_map_select_ui = 16;</code>
   * @return The hideMapSelectUi.
   */
  @java.lang.Override
  public boolean getHideMapSelectUi() {
    return hideMapSelectUi_;
  }

  public static final int LOCK_PLAYER_LIBRARY_FIELD_NUMBER = 17;
  private boolean lockPlayerLibrary_;
  /**
   * <code>bool lock_player_library = 17;</code>
   * @return The lockPlayerLibrary.
   */
  @java.lang.Override
  public boolean getLockPlayerLibrary() {
    return lockPlayerLibrary_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (useStrictTokenManagement_ != false) {
      output.writeBool(1, useStrictTokenManagement_);
    }
    if (isMovementLocked_ != false) {
      output.writeBool(2, isMovementLocked_);
    }
    if (isTokenEditorLocked_ != false) {
      output.writeBool(3, isTokenEditorLocked_);
    }
    if (playersCanRevealVision_ != false) {
      output.writeBool(4, playersCanRevealVision_);
    }
    if (gmRevealsVisionForUnownedTokens_ != false) {
      output.writeBool(5, gmRevealsVisionForUnownedTokens_);
    }
    if (useIndividualViews_ != false) {
      output.writeBool(6, useIndividualViews_);
    }
    if (restrictedImpersonation_ != false) {
      output.writeBool(7, restrictedImpersonation_);
    }
    if (playersReceiveCampaignMacros_ != false) {
      output.writeBool(8, playersReceiveCampaignMacros_);
    }
    if (useToolTipsForDefaultRollFormat_ != false) {
      output.writeBool(9, useToolTipsForDefaultRollFormat_);
    }
    if (useIndividualFOW_ != false) {
      output.writeBool(10, useIndividualFOW_);
    }
    if (isAutoRevealOnMovement_ != false) {
      output.writeBool(11, isAutoRevealOnMovement_);
    }
    if (includeOwnedNPCs_ != false) {
      output.writeBool(12, includeOwnedNPCs_);
    }
    if (movementMetric_ != net.rptools.maptool.server.proto.WalkerMetricDto.NO_DIAGONALS.getNumber()) {
      output.writeEnum(13, movementMetric_);
    }
    if (usingAstarPathfinding_ != false) {
      output.writeBool(14, usingAstarPathfinding_);
    }
    if (vblBlocksMove_ != false) {
      output.writeBool(15, vblBlocksMove_);
    }
    if (hideMapSelectUi_ != false) {
      output.writeBool(16, hideMapSelectUi_);
    }
    if (lockPlayerLibrary_ != false) {
      output.writeBool(17, lockPlayerLibrary_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (useStrictTokenManagement_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, useStrictTokenManagement_);
    }
    if (isMovementLocked_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, isMovementLocked_);
    }
    if (isTokenEditorLocked_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, isTokenEditorLocked_);
    }
    if (playersCanRevealVision_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, playersCanRevealVision_);
    }
    if (gmRevealsVisionForUnownedTokens_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, gmRevealsVisionForUnownedTokens_);
    }
    if (useIndividualViews_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, useIndividualViews_);
    }
    if (restrictedImpersonation_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, restrictedImpersonation_);
    }
    if (playersReceiveCampaignMacros_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, playersReceiveCampaignMacros_);
    }
    if (useToolTipsForDefaultRollFormat_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, useToolTipsForDefaultRollFormat_);
    }
    if (useIndividualFOW_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, useIndividualFOW_);
    }
    if (isAutoRevealOnMovement_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(11, isAutoRevealOnMovement_);
    }
    if (includeOwnedNPCs_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(12, includeOwnedNPCs_);
    }
    if (movementMetric_ != net.rptools.maptool.server.proto.WalkerMetricDto.NO_DIAGONALS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(13, movementMetric_);
    }
    if (usingAstarPathfinding_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(14, usingAstarPathfinding_);
    }
    if (vblBlocksMove_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(15, vblBlocksMove_);
    }
    if (hideMapSelectUi_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(16, hideMapSelectUi_);
    }
    if (lockPlayerLibrary_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(17, lockPlayerLibrary_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof net.rptools.maptool.server.proto.ServerPolicyDto)) {
      return super.equals(obj);
    }
    net.rptools.maptool.server.proto.ServerPolicyDto other = (net.rptools.maptool.server.proto.ServerPolicyDto) obj;

    if (getUseStrictTokenManagement()
        != other.getUseStrictTokenManagement()) return false;
    if (getIsMovementLocked()
        != other.getIsMovementLocked()) return false;
    if (getIsTokenEditorLocked()
        != other.getIsTokenEditorLocked()) return false;
    if (getPlayersCanRevealVision()
        != other.getPlayersCanRevealVision()) return false;
    if (getGmRevealsVisionForUnownedTokens()
        != other.getGmRevealsVisionForUnownedTokens()) return false;
    if (getUseIndividualViews()
        != other.getUseIndividualViews()) return false;
    if (getRestrictedImpersonation()
        != other.getRestrictedImpersonation()) return false;
    if (getPlayersReceiveCampaignMacros()
        != other.getPlayersReceiveCampaignMacros()) return false;
    if (getUseToolTipsForDefaultRollFormat()
        != other.getUseToolTipsForDefaultRollFormat()) return false;
    if (getUseIndividualFOW()
        != other.getUseIndividualFOW()) return false;
    if (getIsAutoRevealOnMovement()
        != other.getIsAutoRevealOnMovement()) return false;
    if (getIncludeOwnedNPCs()
        != other.getIncludeOwnedNPCs()) return false;
    if (movementMetric_ != other.movementMetric_) return false;
    if (getUsingAstarPathfinding()
        != other.getUsingAstarPathfinding()) return false;
    if (getVblBlocksMove()
        != other.getVblBlocksMove()) return false;
    if (getHideMapSelectUi()
        != other.getHideMapSelectUi()) return false;
    if (getLockPlayerLibrary()
        != other.getLockPlayerLibrary()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + USE_STRICT_TOKEN_MANAGEMENT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseStrictTokenManagement());
    hash = (37 * hash) + IS_MOVEMENT_LOCKED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsMovementLocked());
    hash = (37 * hash) + IS_TOKEN_EDITOR_LOCKED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsTokenEditorLocked());
    hash = (37 * hash) + PLAYERS_CAN_REVEAL_VISION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPlayersCanRevealVision());
    hash = (37 * hash) + GM_REVEALS_VISION_FOR_UNOWNED_TOKENS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getGmRevealsVisionForUnownedTokens());
    hash = (37 * hash) + USE_INDIVIDUAL_VIEWS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseIndividualViews());
    hash = (37 * hash) + RESTRICTED_IMPERSONATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRestrictedImpersonation());
    hash = (37 * hash) + PLAYERS_RECEIVE_CAMPAIGN_MACROS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPlayersReceiveCampaignMacros());
    hash = (37 * hash) + USE_TOOL_TIPS_FOR_DEFAULT_ROLL_FORMAT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseToolTipsForDefaultRollFormat());
    hash = (37 * hash) + USE_INDIVIDUAL_FOW_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseIndividualFOW());
    hash = (37 * hash) + IS_AUTO_REVEAL_ON_MOVEMENT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsAutoRevealOnMovement());
    hash = (37 * hash) + INCLUDE_OWNED_NPCS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIncludeOwnedNPCs());
    hash = (37 * hash) + MOVEMENT_METRIC_FIELD_NUMBER;
    hash = (53 * hash) + movementMetric_;
    hash = (37 * hash) + USING_ASTAR_PATHFINDING_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUsingAstarPathfinding());
    hash = (37 * hash) + VBL_BLOCKS_MOVE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getVblBlocksMove());
    hash = (37 * hash) + HIDE_MAP_SELECT_UI_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getHideMapSelectUi());
    hash = (37 * hash) + LOCK_PLAYER_LIBRARY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getLockPlayerLibrary());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static net.rptools.maptool.server.proto.ServerPolicyDto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.ServerPolicyDto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.ServerPolicyDto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.ServerPolicyDto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.ServerPolicyDto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.ServerPolicyDto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.ServerPolicyDto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.ServerPolicyDto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.ServerPolicyDto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.ServerPolicyDto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.ServerPolicyDto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.ServerPolicyDto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(net.rptools.maptool.server.proto.ServerPolicyDto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code maptool.ServerPolicyDto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maptool.ServerPolicyDto)
      net.rptools.maptool.server.proto.ServerPolicyDtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_ServerPolicyDto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_ServerPolicyDto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.rptools.maptool.server.proto.ServerPolicyDto.class, net.rptools.maptool.server.proto.ServerPolicyDto.Builder.class);
    }

    // Construct using net.rptools.maptool.server.proto.ServerPolicyDto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      useStrictTokenManagement_ = false;

      isMovementLocked_ = false;

      isTokenEditorLocked_ = false;

      playersCanRevealVision_ = false;

      gmRevealsVisionForUnownedTokens_ = false;

      useIndividualViews_ = false;

      restrictedImpersonation_ = false;

      playersReceiveCampaignMacros_ = false;

      useToolTipsForDefaultRollFormat_ = false;

      useIndividualFOW_ = false;

      isAutoRevealOnMovement_ = false;

      includeOwnedNPCs_ = false;

      movementMetric_ = 0;

      usingAstarPathfinding_ = false;

      vblBlocksMove_ = false;

      hideMapSelectUi_ = false;

      lockPlayerLibrary_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_ServerPolicyDto_descriptor;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.ServerPolicyDto getDefaultInstanceForType() {
      return net.rptools.maptool.server.proto.ServerPolicyDto.getDefaultInstance();
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.ServerPolicyDto build() {
      net.rptools.maptool.server.proto.ServerPolicyDto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.ServerPolicyDto buildPartial() {
      net.rptools.maptool.server.proto.ServerPolicyDto result = new net.rptools.maptool.server.proto.ServerPolicyDto(this);
      result.useStrictTokenManagement_ = useStrictTokenManagement_;
      result.isMovementLocked_ = isMovementLocked_;
      result.isTokenEditorLocked_ = isTokenEditorLocked_;
      result.playersCanRevealVision_ = playersCanRevealVision_;
      result.gmRevealsVisionForUnownedTokens_ = gmRevealsVisionForUnownedTokens_;
      result.useIndividualViews_ = useIndividualViews_;
      result.restrictedImpersonation_ = restrictedImpersonation_;
      result.playersReceiveCampaignMacros_ = playersReceiveCampaignMacros_;
      result.useToolTipsForDefaultRollFormat_ = useToolTipsForDefaultRollFormat_;
      result.useIndividualFOW_ = useIndividualFOW_;
      result.isAutoRevealOnMovement_ = isAutoRevealOnMovement_;
      result.includeOwnedNPCs_ = includeOwnedNPCs_;
      result.movementMetric_ = movementMetric_;
      result.usingAstarPathfinding_ = usingAstarPathfinding_;
      result.vblBlocksMove_ = vblBlocksMove_;
      result.hideMapSelectUi_ = hideMapSelectUi_;
      result.lockPlayerLibrary_ = lockPlayerLibrary_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof net.rptools.maptool.server.proto.ServerPolicyDto) {
        return mergeFrom((net.rptools.maptool.server.proto.ServerPolicyDto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(net.rptools.maptool.server.proto.ServerPolicyDto other) {
      if (other == net.rptools.maptool.server.proto.ServerPolicyDto.getDefaultInstance()) return this;
      if (other.getUseStrictTokenManagement() != false) {
        setUseStrictTokenManagement(other.getUseStrictTokenManagement());
      }
      if (other.getIsMovementLocked() != false) {
        setIsMovementLocked(other.getIsMovementLocked());
      }
      if (other.getIsTokenEditorLocked() != false) {
        setIsTokenEditorLocked(other.getIsTokenEditorLocked());
      }
      if (other.getPlayersCanRevealVision() != false) {
        setPlayersCanRevealVision(other.getPlayersCanRevealVision());
      }
      if (other.getGmRevealsVisionForUnownedTokens() != false) {
        setGmRevealsVisionForUnownedTokens(other.getGmRevealsVisionForUnownedTokens());
      }
      if (other.getUseIndividualViews() != false) {
        setUseIndividualViews(other.getUseIndividualViews());
      }
      if (other.getRestrictedImpersonation() != false) {
        setRestrictedImpersonation(other.getRestrictedImpersonation());
      }
      if (other.getPlayersReceiveCampaignMacros() != false) {
        setPlayersReceiveCampaignMacros(other.getPlayersReceiveCampaignMacros());
      }
      if (other.getUseToolTipsForDefaultRollFormat() != false) {
        setUseToolTipsForDefaultRollFormat(other.getUseToolTipsForDefaultRollFormat());
      }
      if (other.getUseIndividualFOW() != false) {
        setUseIndividualFOW(other.getUseIndividualFOW());
      }
      if (other.getIsAutoRevealOnMovement() != false) {
        setIsAutoRevealOnMovement(other.getIsAutoRevealOnMovement());
      }
      if (other.getIncludeOwnedNPCs() != false) {
        setIncludeOwnedNPCs(other.getIncludeOwnedNPCs());
      }
      if (other.movementMetric_ != 0) {
        setMovementMetricValue(other.getMovementMetricValue());
      }
      if (other.getUsingAstarPathfinding() != false) {
        setUsingAstarPathfinding(other.getUsingAstarPathfinding());
      }
      if (other.getVblBlocksMove() != false) {
        setVblBlocksMove(other.getVblBlocksMove());
      }
      if (other.getHideMapSelectUi() != false) {
        setHideMapSelectUi(other.getHideMapSelectUi());
      }
      if (other.getLockPlayerLibrary() != false) {
        setLockPlayerLibrary(other.getLockPlayerLibrary());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      net.rptools.maptool.server.proto.ServerPolicyDto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (net.rptools.maptool.server.proto.ServerPolicyDto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private boolean useStrictTokenManagement_ ;
    /**
     * <code>bool use_strict_token_management = 1;</code>
     * @return The useStrictTokenManagement.
     */
    @java.lang.Override
    public boolean getUseStrictTokenManagement() {
      return useStrictTokenManagement_;
    }
    /**
     * <code>bool use_strict_token_management = 1;</code>
     * @param value The useStrictTokenManagement to set.
     * @return This builder for chaining.
     */
    public Builder setUseStrictTokenManagement(boolean value) {
      
      useStrictTokenManagement_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool use_strict_token_management = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseStrictTokenManagement() {
      
      useStrictTokenManagement_ = false;
      onChanged();
      return this;
    }

    private boolean isMovementLocked_ ;
    /**
     * <code>bool is_movement_locked = 2;</code>
     * @return The isMovementLocked.
     */
    @java.lang.Override
    public boolean getIsMovementLocked() {
      return isMovementLocked_;
    }
    /**
     * <code>bool is_movement_locked = 2;</code>
     * @param value The isMovementLocked to set.
     * @return This builder for chaining.
     */
    public Builder setIsMovementLocked(boolean value) {
      
      isMovementLocked_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool is_movement_locked = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsMovementLocked() {
      
      isMovementLocked_ = false;
      onChanged();
      return this;
    }

    private boolean isTokenEditorLocked_ ;
    /**
     * <code>bool is_token_editor_locked = 3;</code>
     * @return The isTokenEditorLocked.
     */
    @java.lang.Override
    public boolean getIsTokenEditorLocked() {
      return isTokenEditorLocked_;
    }
    /**
     * <code>bool is_token_editor_locked = 3;</code>
     * @param value The isTokenEditorLocked to set.
     * @return This builder for chaining.
     */
    public Builder setIsTokenEditorLocked(boolean value) {
      
      isTokenEditorLocked_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool is_token_editor_locked = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsTokenEditorLocked() {
      
      isTokenEditorLocked_ = false;
      onChanged();
      return this;
    }

    private boolean playersCanRevealVision_ ;
    /**
     * <code>bool players_can_reveal_vision = 4;</code>
     * @return The playersCanRevealVision.
     */
    @java.lang.Override
    public boolean getPlayersCanRevealVision() {
      return playersCanRevealVision_;
    }
    /**
     * <code>bool players_can_reveal_vision = 4;</code>
     * @param value The playersCanRevealVision to set.
     * @return This builder for chaining.
     */
    public Builder setPlayersCanRevealVision(boolean value) {
      
      playersCanRevealVision_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool players_can_reveal_vision = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPlayersCanRevealVision() {
      
      playersCanRevealVision_ = false;
      onChanged();
      return this;
    }

    private boolean gmRevealsVisionForUnownedTokens_ ;
    /**
     * <code>bool gm_reveals_vision_for_unowned_tokens = 5;</code>
     * @return The gmRevealsVisionForUnownedTokens.
     */
    @java.lang.Override
    public boolean getGmRevealsVisionForUnownedTokens() {
      return gmRevealsVisionForUnownedTokens_;
    }
    /**
     * <code>bool gm_reveals_vision_for_unowned_tokens = 5;</code>
     * @param value The gmRevealsVisionForUnownedTokens to set.
     * @return This builder for chaining.
     */
    public Builder setGmRevealsVisionForUnownedTokens(boolean value) {
      
      gmRevealsVisionForUnownedTokens_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool gm_reveals_vision_for_unowned_tokens = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearGmRevealsVisionForUnownedTokens() {
      
      gmRevealsVisionForUnownedTokens_ = false;
      onChanged();
      return this;
    }

    private boolean useIndividualViews_ ;
    /**
     * <code>bool use_individual_views = 6;</code>
     * @return The useIndividualViews.
     */
    @java.lang.Override
    public boolean getUseIndividualViews() {
      return useIndividualViews_;
    }
    /**
     * <code>bool use_individual_views = 6;</code>
     * @param value The useIndividualViews to set.
     * @return This builder for chaining.
     */
    public Builder setUseIndividualViews(boolean value) {
      
      useIndividualViews_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool use_individual_views = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseIndividualViews() {
      
      useIndividualViews_ = false;
      onChanged();
      return this;
    }

    private boolean restrictedImpersonation_ ;
    /**
     * <code>bool restricted_impersonation = 7;</code>
     * @return The restrictedImpersonation.
     */
    @java.lang.Override
    public boolean getRestrictedImpersonation() {
      return restrictedImpersonation_;
    }
    /**
     * <code>bool restricted_impersonation = 7;</code>
     * @param value The restrictedImpersonation to set.
     * @return This builder for chaining.
     */
    public Builder setRestrictedImpersonation(boolean value) {
      
      restrictedImpersonation_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool restricted_impersonation = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearRestrictedImpersonation() {
      
      restrictedImpersonation_ = false;
      onChanged();
      return this;
    }

    private boolean playersReceiveCampaignMacros_ ;
    /**
     * <code>bool players_receive_campaign_macros = 8;</code>
     * @return The playersReceiveCampaignMacros.
     */
    @java.lang.Override
    public boolean getPlayersReceiveCampaignMacros() {
      return playersReceiveCampaignMacros_;
    }
    /**
     * <code>bool players_receive_campaign_macros = 8;</code>
     * @param value The playersReceiveCampaignMacros to set.
     * @return This builder for chaining.
     */
    public Builder setPlayersReceiveCampaignMacros(boolean value) {
      
      playersReceiveCampaignMacros_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool players_receive_campaign_macros = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearPlayersReceiveCampaignMacros() {
      
      playersReceiveCampaignMacros_ = false;
      onChanged();
      return this;
    }

    private boolean useToolTipsForDefaultRollFormat_ ;
    /**
     * <code>bool use_tool_tips_for_default_roll_format = 9;</code>
     * @return The useToolTipsForDefaultRollFormat.
     */
    @java.lang.Override
    public boolean getUseToolTipsForDefaultRollFormat() {
      return useToolTipsForDefaultRollFormat_;
    }
    /**
     * <code>bool use_tool_tips_for_default_roll_format = 9;</code>
     * @param value The useToolTipsForDefaultRollFormat to set.
     * @return This builder for chaining.
     */
    public Builder setUseToolTipsForDefaultRollFormat(boolean value) {
      
      useToolTipsForDefaultRollFormat_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool use_tool_tips_for_default_roll_format = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseToolTipsForDefaultRollFormat() {
      
      useToolTipsForDefaultRollFormat_ = false;
      onChanged();
      return this;
    }

    private boolean useIndividualFOW_ ;
    /**
     * <code>bool use_individual_FOW = 10;</code>
     * @return The useIndividualFOW.
     */
    @java.lang.Override
    public boolean getUseIndividualFOW() {
      return useIndividualFOW_;
    }
    /**
     * <code>bool use_individual_FOW = 10;</code>
     * @param value The useIndividualFOW to set.
     * @return This builder for chaining.
     */
    public Builder setUseIndividualFOW(boolean value) {
      
      useIndividualFOW_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool use_individual_FOW = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseIndividualFOW() {
      
      useIndividualFOW_ = false;
      onChanged();
      return this;
    }

    private boolean isAutoRevealOnMovement_ ;
    /**
     * <code>bool is_auto_reveal_on_movement = 11;</code>
     * @return The isAutoRevealOnMovement.
     */
    @java.lang.Override
    public boolean getIsAutoRevealOnMovement() {
      return isAutoRevealOnMovement_;
    }
    /**
     * <code>bool is_auto_reveal_on_movement = 11;</code>
     * @param value The isAutoRevealOnMovement to set.
     * @return This builder for chaining.
     */
    public Builder setIsAutoRevealOnMovement(boolean value) {
      
      isAutoRevealOnMovement_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool is_auto_reveal_on_movement = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsAutoRevealOnMovement() {
      
      isAutoRevealOnMovement_ = false;
      onChanged();
      return this;
    }

    private boolean includeOwnedNPCs_ ;
    /**
     * <code>bool include_owned_NPCs = 12;</code>
     * @return The includeOwnedNPCs.
     */
    @java.lang.Override
    public boolean getIncludeOwnedNPCs() {
      return includeOwnedNPCs_;
    }
    /**
     * <code>bool include_owned_NPCs = 12;</code>
     * @param value The includeOwnedNPCs to set.
     * @return This builder for chaining.
     */
    public Builder setIncludeOwnedNPCs(boolean value) {
      
      includeOwnedNPCs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool include_owned_NPCs = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearIncludeOwnedNPCs() {
      
      includeOwnedNPCs_ = false;
      onChanged();
      return this;
    }

    private int movementMetric_ = 0;
    /**
     * <code>.maptool.WalkerMetricDto movement_metric = 13;</code>
     * @return The enum numeric value on the wire for movementMetric.
     */
    @java.lang.Override public int getMovementMetricValue() {
      return movementMetric_;
    }
    /**
     * <code>.maptool.WalkerMetricDto movement_metric = 13;</code>
     * @param value The enum numeric value on the wire for movementMetric to set.
     * @return This builder for chaining.
     */
    public Builder setMovementMetricValue(int value) {
      
      movementMetric_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.WalkerMetricDto movement_metric = 13;</code>
     * @return The movementMetric.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.WalkerMetricDto getMovementMetric() {
      @SuppressWarnings("deprecation")
      net.rptools.maptool.server.proto.WalkerMetricDto result = net.rptools.maptool.server.proto.WalkerMetricDto.valueOf(movementMetric_);
      return result == null ? net.rptools.maptool.server.proto.WalkerMetricDto.UNRECOGNIZED : result;
    }
    /**
     * <code>.maptool.WalkerMetricDto movement_metric = 13;</code>
     * @param value The movementMetric to set.
     * @return This builder for chaining.
     */
    public Builder setMovementMetric(net.rptools.maptool.server.proto.WalkerMetricDto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      movementMetric_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.WalkerMetricDto movement_metric = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearMovementMetric() {
      
      movementMetric_ = 0;
      onChanged();
      return this;
    }

    private boolean usingAstarPathfinding_ ;
    /**
     * <code>bool using_astar_pathfinding = 14;</code>
     * @return The usingAstarPathfinding.
     */
    @java.lang.Override
    public boolean getUsingAstarPathfinding() {
      return usingAstarPathfinding_;
    }
    /**
     * <code>bool using_astar_pathfinding = 14;</code>
     * @param value The usingAstarPathfinding to set.
     * @return This builder for chaining.
     */
    public Builder setUsingAstarPathfinding(boolean value) {
      
      usingAstarPathfinding_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool using_astar_pathfinding = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearUsingAstarPathfinding() {
      
      usingAstarPathfinding_ = false;
      onChanged();
      return this;
    }

    private boolean vblBlocksMove_ ;
    /**
     * <code>bool vbl_blocks_move = 15;</code>
     * @return The vblBlocksMove.
     */
    @java.lang.Override
    public boolean getVblBlocksMove() {
      return vblBlocksMove_;
    }
    /**
     * <code>bool vbl_blocks_move = 15;</code>
     * @param value The vblBlocksMove to set.
     * @return This builder for chaining.
     */
    public Builder setVblBlocksMove(boolean value) {
      
      vblBlocksMove_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool vbl_blocks_move = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearVblBlocksMove() {
      
      vblBlocksMove_ = false;
      onChanged();
      return this;
    }

    private boolean hideMapSelectUi_ ;
    /**
     * <code>bool hide_map_select_ui = 16;</code>
     * @return The hideMapSelectUi.
     */
    @java.lang.Override
    public boolean getHideMapSelectUi() {
      return hideMapSelectUi_;
    }
    /**
     * <code>bool hide_map_select_ui = 16;</code>
     * @param value The hideMapSelectUi to set.
     * @return This builder for chaining.
     */
    public Builder setHideMapSelectUi(boolean value) {
      
      hideMapSelectUi_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool hide_map_select_ui = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearHideMapSelectUi() {
      
      hideMapSelectUi_ = false;
      onChanged();
      return this;
    }

    private boolean lockPlayerLibrary_ ;
    /**
     * <code>bool lock_player_library = 17;</code>
     * @return The lockPlayerLibrary.
     */
    @java.lang.Override
    public boolean getLockPlayerLibrary() {
      return lockPlayerLibrary_;
    }
    /**
     * <code>bool lock_player_library = 17;</code>
     * @param value The lockPlayerLibrary to set.
     * @return This builder for chaining.
     */
    public Builder setLockPlayerLibrary(boolean value) {
      
      lockPlayerLibrary_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool lock_player_library = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearLockPlayerLibrary() {
      
      lockPlayerLibrary_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maptool.ServerPolicyDto)
  }

  // @@protoc_insertion_point(class_scope:maptool.ServerPolicyDto)
  private static final net.rptools.maptool.server.proto.ServerPolicyDto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new net.rptools.maptool.server.proto.ServerPolicyDto();
  }

  public static net.rptools.maptool.server.proto.ServerPolicyDto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ServerPolicyDto>
      PARSER = new com.google.protobuf.AbstractParser<ServerPolicyDto>() {
    @java.lang.Override
    public ServerPolicyDto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ServerPolicyDto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ServerPolicyDto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ServerPolicyDto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public net.rptools.maptool.server.proto.ServerPolicyDto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

