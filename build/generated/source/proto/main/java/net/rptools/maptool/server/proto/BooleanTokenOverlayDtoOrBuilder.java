// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_transfer_objects.proto

package net.rptools.maptool.server.proto;

public interface BooleanTokenOverlayDtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:maptool.BooleanTokenOverlayDto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.maptool.TokenOverlayDto common = 1;</code>
   * @return Whether the common field is set.
   */
  boolean hasCommon();
  /**
   * <code>.maptool.TokenOverlayDto common = 1;</code>
   * @return The common.
   */
  net.rptools.maptool.server.proto.TokenOverlayDto getCommon();
  /**
   * <code>.maptool.TokenOverlayDto common = 1;</code>
   */
  net.rptools.maptool.server.proto.TokenOverlayDtoOrBuilder getCommonOrBuilder();

  /**
   * <code>int32 color = 2;</code>
   * @return The color.
   */
  int getColor();

  /**
   * <code>.maptool.StrokeDto stroke = 3;</code>
   * @return Whether the stroke field is set.
   */
  boolean hasStroke();
  /**
   * <code>.maptool.StrokeDto stroke = 3;</code>
   * @return The stroke.
   */
  net.rptools.maptool.server.proto.StrokeDto getStroke();
  /**
   * <code>.maptool.StrokeDto stroke = 3;</code>
   */
  net.rptools.maptool.server.proto.StrokeDtoOrBuilder getStrokeOrBuilder();

  /**
   * <code>.maptool.QuadrantDto quadrant = 4;</code>
   * @return The enum numeric value on the wire for quadrant.
   */
  int getQuadrantValue();
  /**
   * <code>.maptool.QuadrantDto quadrant = 4;</code>
   * @return The quadrant.
   */
  net.rptools.maptool.server.proto.QuadrantDto getQuadrant();

  /**
   * <code>int32 grid_size = 5;</code>
   * @return The gridSize.
   */
  int getGridSize();

  /**
   * <code>string asset_id = 6;</code>
   * @return The assetId.
   */
  java.lang.String getAssetId();
  /**
   * <code>string asset_id = 6;</code>
   * @return The bytes for assetId.
   */
  com.google.protobuf.ByteString
      getAssetIdBytes();

  /**
   * <code>.maptool.BooleanTokenOverlayDto.BooleanTokenOverlayTypeDto type = 7;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <code>.maptool.BooleanTokenOverlayDto.BooleanTokenOverlayTypeDto type = 7;</code>
   * @return The type.
   */
  net.rptools.maptool.server.proto.BooleanTokenOverlayDto.BooleanTokenOverlayTypeDto getType();
}
