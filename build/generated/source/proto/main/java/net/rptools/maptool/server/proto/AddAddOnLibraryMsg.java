// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_types.proto

package net.rptools.maptool.server.proto;

/**
 * Protobuf type {@code maptool.AddAddOnLibraryMsg}
 */
public final class AddAddOnLibraryMsg extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maptool.AddAddOnLibraryMsg)
    AddAddOnLibraryMsgOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AddAddOnLibraryMsg.newBuilder() to construct.
  private AddAddOnLibraryMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AddAddOnLibraryMsg() {
    addOns_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AddAddOnLibraryMsg();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AddAddOnLibraryMsg(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              addOns_ = new java.util.ArrayList<net.rptools.maptool.server.proto.TransferableAddOnLibraryDto>();
              mutable_bitField0_ |= 0x00000001;
            }
            addOns_.add(
                input.readMessage(net.rptools.maptool.server.proto.TransferableAddOnLibraryDto.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        addOns_ = java.util.Collections.unmodifiableList(addOns_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return net.rptools.maptool.server.proto.MessageTypeProtos.internal_static_maptool_AddAddOnLibraryMsg_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return net.rptools.maptool.server.proto.MessageTypeProtos.internal_static_maptool_AddAddOnLibraryMsg_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            net.rptools.maptool.server.proto.AddAddOnLibraryMsg.class, net.rptools.maptool.server.proto.AddAddOnLibraryMsg.Builder.class);
  }

  public static final int ADD_ONS_FIELD_NUMBER = 1;
  private java.util.List<net.rptools.maptool.server.proto.TransferableAddOnLibraryDto> addOns_;
  /**
   * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.TransferableAddOnLibraryDto> getAddOnsList() {
    return addOns_;
  }
  /**
   * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.TransferableAddOnLibraryDtoOrBuilder> 
      getAddOnsOrBuilderList() {
    return addOns_;
  }
  /**
   * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
   */
  @java.lang.Override
  public int getAddOnsCount() {
    return addOns_.size();
  }
  /**
   * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.TransferableAddOnLibraryDto getAddOns(int index) {
    return addOns_.get(index);
  }
  /**
   * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.TransferableAddOnLibraryDtoOrBuilder getAddOnsOrBuilder(
      int index) {
    return addOns_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < addOns_.size(); i++) {
      output.writeMessage(1, addOns_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < addOns_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, addOns_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof net.rptools.maptool.server.proto.AddAddOnLibraryMsg)) {
      return super.equals(obj);
    }
    net.rptools.maptool.server.proto.AddAddOnLibraryMsg other = (net.rptools.maptool.server.proto.AddAddOnLibraryMsg) obj;

    if (!getAddOnsList()
        .equals(other.getAddOnsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getAddOnsCount() > 0) {
      hash = (37 * hash) + ADD_ONS_FIELD_NUMBER;
      hash = (53 * hash) + getAddOnsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static net.rptools.maptool.server.proto.AddAddOnLibraryMsg parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.AddAddOnLibraryMsg parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.AddAddOnLibraryMsg parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.AddAddOnLibraryMsg parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.AddAddOnLibraryMsg parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.AddAddOnLibraryMsg parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.AddAddOnLibraryMsg parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.AddAddOnLibraryMsg parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.AddAddOnLibraryMsg parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.AddAddOnLibraryMsg parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.AddAddOnLibraryMsg parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.AddAddOnLibraryMsg parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(net.rptools.maptool.server.proto.AddAddOnLibraryMsg prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code maptool.AddAddOnLibraryMsg}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maptool.AddAddOnLibraryMsg)
      net.rptools.maptool.server.proto.AddAddOnLibraryMsgOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.MessageTypeProtos.internal_static_maptool_AddAddOnLibraryMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.rptools.maptool.server.proto.MessageTypeProtos.internal_static_maptool_AddAddOnLibraryMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.rptools.maptool.server.proto.AddAddOnLibraryMsg.class, net.rptools.maptool.server.proto.AddAddOnLibraryMsg.Builder.class);
    }

    // Construct using net.rptools.maptool.server.proto.AddAddOnLibraryMsg.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getAddOnsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (addOnsBuilder_ == null) {
        addOns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        addOnsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return net.rptools.maptool.server.proto.MessageTypeProtos.internal_static_maptool_AddAddOnLibraryMsg_descriptor;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.AddAddOnLibraryMsg getDefaultInstanceForType() {
      return net.rptools.maptool.server.proto.AddAddOnLibraryMsg.getDefaultInstance();
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.AddAddOnLibraryMsg build() {
      net.rptools.maptool.server.proto.AddAddOnLibraryMsg result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.AddAddOnLibraryMsg buildPartial() {
      net.rptools.maptool.server.proto.AddAddOnLibraryMsg result = new net.rptools.maptool.server.proto.AddAddOnLibraryMsg(this);
      int from_bitField0_ = bitField0_;
      if (addOnsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          addOns_ = java.util.Collections.unmodifiableList(addOns_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.addOns_ = addOns_;
      } else {
        result.addOns_ = addOnsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof net.rptools.maptool.server.proto.AddAddOnLibraryMsg) {
        return mergeFrom((net.rptools.maptool.server.proto.AddAddOnLibraryMsg)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(net.rptools.maptool.server.proto.AddAddOnLibraryMsg other) {
      if (other == net.rptools.maptool.server.proto.AddAddOnLibraryMsg.getDefaultInstance()) return this;
      if (addOnsBuilder_ == null) {
        if (!other.addOns_.isEmpty()) {
          if (addOns_.isEmpty()) {
            addOns_ = other.addOns_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAddOnsIsMutable();
            addOns_.addAll(other.addOns_);
          }
          onChanged();
        }
      } else {
        if (!other.addOns_.isEmpty()) {
          if (addOnsBuilder_.isEmpty()) {
            addOnsBuilder_.dispose();
            addOnsBuilder_ = null;
            addOns_ = other.addOns_;
            bitField0_ = (bitField0_ & ~0x00000001);
            addOnsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAddOnsFieldBuilder() : null;
          } else {
            addOnsBuilder_.addAllMessages(other.addOns_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      net.rptools.maptool.server.proto.AddAddOnLibraryMsg parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (net.rptools.maptool.server.proto.AddAddOnLibraryMsg) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<net.rptools.maptool.server.proto.TransferableAddOnLibraryDto> addOns_ =
      java.util.Collections.emptyList();
    private void ensureAddOnsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        addOns_ = new java.util.ArrayList<net.rptools.maptool.server.proto.TransferableAddOnLibraryDto>(addOns_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.TransferableAddOnLibraryDto, net.rptools.maptool.server.proto.TransferableAddOnLibraryDto.Builder, net.rptools.maptool.server.proto.TransferableAddOnLibraryDtoOrBuilder> addOnsBuilder_;

    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.TransferableAddOnLibraryDto> getAddOnsList() {
      if (addOnsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(addOns_);
      } else {
        return addOnsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public int getAddOnsCount() {
      if (addOnsBuilder_ == null) {
        return addOns_.size();
      } else {
        return addOnsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public net.rptools.maptool.server.proto.TransferableAddOnLibraryDto getAddOns(int index) {
      if (addOnsBuilder_ == null) {
        return addOns_.get(index);
      } else {
        return addOnsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public Builder setAddOns(
        int index, net.rptools.maptool.server.proto.TransferableAddOnLibraryDto value) {
      if (addOnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAddOnsIsMutable();
        addOns_.set(index, value);
        onChanged();
      } else {
        addOnsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public Builder setAddOns(
        int index, net.rptools.maptool.server.proto.TransferableAddOnLibraryDto.Builder builderForValue) {
      if (addOnsBuilder_ == null) {
        ensureAddOnsIsMutable();
        addOns_.set(index, builderForValue.build());
        onChanged();
      } else {
        addOnsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public Builder addAddOns(net.rptools.maptool.server.proto.TransferableAddOnLibraryDto value) {
      if (addOnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAddOnsIsMutable();
        addOns_.add(value);
        onChanged();
      } else {
        addOnsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public Builder addAddOns(
        int index, net.rptools.maptool.server.proto.TransferableAddOnLibraryDto value) {
      if (addOnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAddOnsIsMutable();
        addOns_.add(index, value);
        onChanged();
      } else {
        addOnsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public Builder addAddOns(
        net.rptools.maptool.server.proto.TransferableAddOnLibraryDto.Builder builderForValue) {
      if (addOnsBuilder_ == null) {
        ensureAddOnsIsMutable();
        addOns_.add(builderForValue.build());
        onChanged();
      } else {
        addOnsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public Builder addAddOns(
        int index, net.rptools.maptool.server.proto.TransferableAddOnLibraryDto.Builder builderForValue) {
      if (addOnsBuilder_ == null) {
        ensureAddOnsIsMutable();
        addOns_.add(index, builderForValue.build());
        onChanged();
      } else {
        addOnsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public Builder addAllAddOns(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.TransferableAddOnLibraryDto> values) {
      if (addOnsBuilder_ == null) {
        ensureAddOnsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, addOns_);
        onChanged();
      } else {
        addOnsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public Builder clearAddOns() {
      if (addOnsBuilder_ == null) {
        addOns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        addOnsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public Builder removeAddOns(int index) {
      if (addOnsBuilder_ == null) {
        ensureAddOnsIsMutable();
        addOns_.remove(index);
        onChanged();
      } else {
        addOnsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public net.rptools.maptool.server.proto.TransferableAddOnLibraryDto.Builder getAddOnsBuilder(
        int index) {
      return getAddOnsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public net.rptools.maptool.server.proto.TransferableAddOnLibraryDtoOrBuilder getAddOnsOrBuilder(
        int index) {
      if (addOnsBuilder_ == null) {
        return addOns_.get(index);  } else {
        return addOnsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.TransferableAddOnLibraryDtoOrBuilder> 
         getAddOnsOrBuilderList() {
      if (addOnsBuilder_ != null) {
        return addOnsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(addOns_);
      }
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public net.rptools.maptool.server.proto.TransferableAddOnLibraryDto.Builder addAddOnsBuilder() {
      return getAddOnsFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.TransferableAddOnLibraryDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public net.rptools.maptool.server.proto.TransferableAddOnLibraryDto.Builder addAddOnsBuilder(
        int index) {
      return getAddOnsFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.TransferableAddOnLibraryDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.TransferableAddOnLibraryDto add_ons = 1;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.TransferableAddOnLibraryDto.Builder> 
         getAddOnsBuilderList() {
      return getAddOnsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.TransferableAddOnLibraryDto, net.rptools.maptool.server.proto.TransferableAddOnLibraryDto.Builder, net.rptools.maptool.server.proto.TransferableAddOnLibraryDtoOrBuilder> 
        getAddOnsFieldBuilder() {
      if (addOnsBuilder_ == null) {
        addOnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.TransferableAddOnLibraryDto, net.rptools.maptool.server.proto.TransferableAddOnLibraryDto.Builder, net.rptools.maptool.server.proto.TransferableAddOnLibraryDtoOrBuilder>(
                addOns_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        addOns_ = null;
      }
      return addOnsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maptool.AddAddOnLibraryMsg)
  }

  // @@protoc_insertion_point(class_scope:maptool.AddAddOnLibraryMsg)
  private static final net.rptools.maptool.server.proto.AddAddOnLibraryMsg DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new net.rptools.maptool.server.proto.AddAddOnLibraryMsg();
  }

  public static net.rptools.maptool.server.proto.AddAddOnLibraryMsg getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AddAddOnLibraryMsg>
      PARSER = new com.google.protobuf.AbstractParser<AddAddOnLibraryMsg>() {
    @java.lang.Override
    public AddAddOnLibraryMsg parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AddAddOnLibraryMsg(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AddAddOnLibraryMsg> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AddAddOnLibraryMsg> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public net.rptools.maptool.server.proto.AddAddOnLibraryMsg getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

