// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_transfer_objects.proto

package net.rptools.maptool.server.proto;

/**
 * Protobuf type {@code maptool.ZoneDto}
 */
public final class ZoneDto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maptool.ZoneDto)
    ZoneDtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ZoneDto.newBuilder() to construct.
  private ZoneDto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ZoneDto() {
    id_ = "";
    aStarRounding_ = 0;
    topologyTypes_ = java.util.Collections.emptyList();
    drawables_ = java.util.Collections.emptyList();
    gmDrawables_ = java.util.Collections.emptyList();
    objectDrawables_ = java.util.Collections.emptyList();
    backgroundDrawables_ = java.util.Collections.emptyList();
    labels_ = java.util.Collections.emptyList();
    tokens_ = java.util.Collections.emptyList();
    name_ = "";
    visionType_ = 0;
    lightingStyle_ = 0;
    tokenSelection_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ZoneDto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ZoneDto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            creationTime_ = input.readInt64();
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 26: {
            net.rptools.maptool.server.proto.GridDto.Builder subBuilder = null;
            if (grid_ != null) {
              subBuilder = grid_.toBuilder();
            }
            grid_ = input.readMessage(net.rptools.maptool.server.proto.GridDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(grid_);
              grid_ = subBuilder.buildPartial();
            }

            break;
          }
          case 32: {

            gridColor_ = input.readInt32();
            break;
          }
          case 45: {

            imageScaleX_ = input.readFloat();
            break;
          }
          case 53: {

            imageScaleY_ = input.readFloat();
            break;
          }
          case 56: {

            tokenVisionDistance_ = input.readInt32();
            break;
          }
          case 65: {

            unitsPerCell_ = input.readDouble();
            break;
          }
          case 72: {
            int rawValue = input.readEnum();

            aStarRounding_ = rawValue;
            break;
          }
          case 80: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              topologyTypes_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000001;
            }
            topologyTypes_.add(rawValue);
            break;
          }
          case 82: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                topologyTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              topologyTypes_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          case 90: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              drawables_ = new java.util.ArrayList<net.rptools.maptool.server.proto.drawing.DrawnElementDto>();
              mutable_bitField0_ |= 0x00000002;
            }
            drawables_.add(
                input.readMessage(net.rptools.maptool.server.proto.drawing.DrawnElementDto.parser(), extensionRegistry));
            break;
          }
          case 98: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              gmDrawables_ = new java.util.ArrayList<net.rptools.maptool.server.proto.drawing.DrawnElementDto>();
              mutable_bitField0_ |= 0x00000004;
            }
            gmDrawables_.add(
                input.readMessage(net.rptools.maptool.server.proto.drawing.DrawnElementDto.parser(), extensionRegistry));
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              objectDrawables_ = new java.util.ArrayList<net.rptools.maptool.server.proto.drawing.DrawnElementDto>();
              mutable_bitField0_ |= 0x00000008;
            }
            objectDrawables_.add(
                input.readMessage(net.rptools.maptool.server.proto.drawing.DrawnElementDto.parser(), extensionRegistry));
            break;
          }
          case 114: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              backgroundDrawables_ = new java.util.ArrayList<net.rptools.maptool.server.proto.drawing.DrawnElementDto>();
              mutable_bitField0_ |= 0x00000010;
            }
            backgroundDrawables_.add(
                input.readMessage(net.rptools.maptool.server.proto.drawing.DrawnElementDto.parser(), extensionRegistry));
            break;
          }
          case 122: {
            if (!((mutable_bitField0_ & 0x00000020) != 0)) {
              labels_ = new java.util.ArrayList<net.rptools.maptool.server.proto.LabelDto>();
              mutable_bitField0_ |= 0x00000020;
            }
            labels_.add(
                input.readMessage(net.rptools.maptool.server.proto.LabelDto.parser(), extensionRegistry));
            break;
          }
          case 130: {
            if (!((mutable_bitField0_ & 0x00000040) != 0)) {
              tokens_ = new java.util.ArrayList<net.rptools.maptool.server.proto.TokenDto>();
              mutable_bitField0_ |= 0x00000040;
            }
            tokens_.add(
                input.readMessage(net.rptools.maptool.server.proto.TokenDto.parser(), extensionRegistry));
            break;
          }
          case 138: {
            if (!((mutable_bitField0_ & 0x00000080) != 0)) {
              exposedAreaMeta_ = com.google.protobuf.MapField.newMapField(
                  ExposedAreaMetaDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000080;
            }
            com.google.protobuf.MapEntry<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto>
            exposedAreaMeta__ = input.readMessage(
                ExposedAreaMetaDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            exposedAreaMeta_.getMutableMap().put(
                exposedAreaMeta__.getKey(), exposedAreaMeta__.getValue());
            break;
          }
          case 146: {
            net.rptools.maptool.server.proto.InitiativeListDto.Builder subBuilder = null;
            if (initiative_ != null) {
              subBuilder = initiative_.toBuilder();
            }
            initiative_ = input.readMessage(net.rptools.maptool.server.proto.InitiativeListDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(initiative_);
              initiative_ = subBuilder.buildPartial();
            }

            break;
          }
          case 154: {
            net.rptools.maptool.server.proto.drawing.AreaDto.Builder subBuilder = null;
            if (exposedArea_ != null) {
              subBuilder = exposedArea_.toBuilder();
            }
            exposedArea_ = input.readMessage(net.rptools.maptool.server.proto.drawing.AreaDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(exposedArea_);
              exposedArea_ = subBuilder.buildPartial();
            }

            break;
          }
          case 160: {

            hasFog_ = input.readBool();
            break;
          }
          case 170: {
            net.rptools.maptool.server.proto.drawing.DrawablePaintDto.Builder subBuilder = null;
            if (fogPaint_ != null) {
              subBuilder = fogPaint_.toBuilder();
            }
            fogPaint_ = input.readMessage(net.rptools.maptool.server.proto.drawing.DrawablePaintDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(fogPaint_);
              fogPaint_ = subBuilder.buildPartial();
            }

            break;
          }
          case 178: {
            net.rptools.maptool.server.proto.drawing.AreaDto.Builder subBuilder = null;
            if (topology_ != null) {
              subBuilder = topology_.toBuilder();
            }
            topology_ = input.readMessage(net.rptools.maptool.server.proto.drawing.AreaDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(topology_);
              topology_ = subBuilder.buildPartial();
            }

            break;
          }
          case 186: {
            net.rptools.maptool.server.proto.drawing.AreaDto.Builder subBuilder = null;
            if (hillVbl_ != null) {
              subBuilder = hillVbl_.toBuilder();
            }
            hillVbl_ = input.readMessage(net.rptools.maptool.server.proto.drawing.AreaDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(hillVbl_);
              hillVbl_ = subBuilder.buildPartial();
            }

            break;
          }
          case 194: {
            net.rptools.maptool.server.proto.drawing.AreaDto.Builder subBuilder = null;
            if (pitVbl_ != null) {
              subBuilder = pitVbl_.toBuilder();
            }
            pitVbl_ = input.readMessage(net.rptools.maptool.server.proto.drawing.AreaDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(pitVbl_);
              pitVbl_ = subBuilder.buildPartial();
            }

            break;
          }
          case 202: {
            net.rptools.maptool.server.proto.drawing.AreaDto.Builder subBuilder = null;
            if (topologyTerrain_ != null) {
              subBuilder = topologyTerrain_.toBuilder();
            }
            topologyTerrain_ = input.readMessage(net.rptools.maptool.server.proto.drawing.AreaDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(topologyTerrain_);
              topologyTerrain_ = subBuilder.buildPartial();
            }

            break;
          }
          case 210: {
            net.rptools.maptool.server.proto.drawing.DrawablePaintDto.Builder subBuilder = null;
            if (backgroundPaint_ != null) {
              subBuilder = backgroundPaint_.toBuilder();
            }
            backgroundPaint_ = input.readMessage(net.rptools.maptool.server.proto.drawing.DrawablePaintDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(backgroundPaint_);
              backgroundPaint_ = subBuilder.buildPartial();
            }

            break;
          }
          case 218: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (mapAsset_ != null) {
              subBuilder = mapAsset_.toBuilder();
            }
            mapAsset_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(mapAsset_);
              mapAsset_ = subBuilder.buildPartial();
            }

            break;
          }
          case 226: {
            net.rptools.maptool.server.proto.drawing.IntPointDto.Builder subBuilder = null;
            if (boardPosition_ != null) {
              subBuilder = boardPosition_.toBuilder();
            }
            boardPosition_ = input.readMessage(net.rptools.maptool.server.proto.drawing.IntPointDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(boardPosition_);
              boardPosition_ = subBuilder.buildPartial();
            }

            break;
          }
          case 232: {

            drawBoard_ = input.readBool();
            break;
          }
          case 240: {

            boardChanged_ = input.readBool();
            break;
          }
          case 250: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 258: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (playerAlias_ != null) {
              subBuilder = playerAlias_.toBuilder();
            }
            playerAlias_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(playerAlias_);
              playerAlias_ = subBuilder.buildPartial();
            }

            break;
          }
          case 264: {

            isVisible_ = input.readBool();
            break;
          }
          case 272: {
            int rawValue = input.readEnum();

            visionType_ = rawValue;
            break;
          }
          case 280: {
            int rawValue = input.readEnum();

            lightingStyle_ = rawValue;
            break;
          }
          case 288: {
            int rawValue = input.readEnum();

            tokenSelection_ = rawValue;
            break;
          }
          case 296: {

            height_ = input.readInt32();
            break;
          }
          case 304: {

            width_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        topologyTypes_ = java.util.Collections.unmodifiableList(topologyTypes_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        drawables_ = java.util.Collections.unmodifiableList(drawables_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        gmDrawables_ = java.util.Collections.unmodifiableList(gmDrawables_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        objectDrawables_ = java.util.Collections.unmodifiableList(objectDrawables_);
      }
      if (((mutable_bitField0_ & 0x00000010) != 0)) {
        backgroundDrawables_ = java.util.Collections.unmodifiableList(backgroundDrawables_);
      }
      if (((mutable_bitField0_ & 0x00000020) != 0)) {
        labels_ = java.util.Collections.unmodifiableList(labels_);
      }
      if (((mutable_bitField0_ & 0x00000040) != 0)) {
        tokens_ = java.util.Collections.unmodifiableList(tokens_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_ZoneDto_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 17:
        return internalGetExposedAreaMeta();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_ZoneDto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            net.rptools.maptool.server.proto.ZoneDto.class, net.rptools.maptool.server.proto.ZoneDto.Builder.class);
  }

  /**
   * Protobuf enum {@code maptool.ZoneDto.TokenSelectionDto}
   */
  public enum TokenSelectionDto
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PC = 0;</code>
     */
    PC(0),
    /**
     * <code>NPC = 1;</code>
     */
    NPC(1),
    /**
     * <code>ALL = 2;</code>
     */
    ALL(2),
    /**
     * <code>GM = 3;</code>
     */
    GM(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PC = 0;</code>
     */
    public static final int PC_VALUE = 0;
    /**
     * <code>NPC = 1;</code>
     */
    public static final int NPC_VALUE = 1;
    /**
     * <code>ALL = 2;</code>
     */
    public static final int ALL_VALUE = 2;
    /**
     * <code>GM = 3;</code>
     */
    public static final int GM_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TokenSelectionDto valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TokenSelectionDto forNumber(int value) {
      switch (value) {
        case 0: return PC;
        case 1: return NPC;
        case 2: return ALL;
        case 3: return GM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TokenSelectionDto>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TokenSelectionDto> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TokenSelectionDto>() {
            public TokenSelectionDto findValueByNumber(int number) {
              return TokenSelectionDto.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.ZoneDto.getDescriptor().getEnumTypes().get(0);
    }

    private static final TokenSelectionDto[] VALUES = values();

    public static TokenSelectionDto valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TokenSelectionDto(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maptool.ZoneDto.TokenSelectionDto)
  }

  /**
   * Protobuf enum {@code maptool.ZoneDto.VisionTypeDto}
   */
  public enum VisionTypeDto
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFF = 0;</code>
     */
    OFF(0),
    /**
     * <code>DAY = 1;</code>
     */
    DAY(1),
    /**
     * <code>NIGHT = 2;</code>
     */
    NIGHT(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OFF = 0;</code>
     */
    public static final int OFF_VALUE = 0;
    /**
     * <code>DAY = 1;</code>
     */
    public static final int DAY_VALUE = 1;
    /**
     * <code>NIGHT = 2;</code>
     */
    public static final int NIGHT_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VisionTypeDto valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VisionTypeDto forNumber(int value) {
      switch (value) {
        case 0: return OFF;
        case 1: return DAY;
        case 2: return NIGHT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VisionTypeDto>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VisionTypeDto> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VisionTypeDto>() {
            public VisionTypeDto findValueByNumber(int number) {
              return VisionTypeDto.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.ZoneDto.getDescriptor().getEnumTypes().get(1);
    }

    private static final VisionTypeDto[] VALUES = values();

    public static VisionTypeDto valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VisionTypeDto(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maptool.ZoneDto.VisionTypeDto)
  }

  /**
   * Protobuf enum {@code maptool.ZoneDto.LightingStyleDto}
   */
  public enum LightingStyleDto
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ENVIRONMENTAL = 0;</code>
     */
    ENVIRONMENTAL(0),
    /**
     * <code>OVERTOP = 1;</code>
     */
    OVERTOP(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ENVIRONMENTAL = 0;</code>
     */
    public static final int ENVIRONMENTAL_VALUE = 0;
    /**
     * <code>OVERTOP = 1;</code>
     */
    public static final int OVERTOP_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LightingStyleDto valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LightingStyleDto forNumber(int value) {
      switch (value) {
        case 0: return ENVIRONMENTAL;
        case 1: return OVERTOP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LightingStyleDto>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LightingStyleDto> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LightingStyleDto>() {
            public LightingStyleDto findValueByNumber(int number) {
              return LightingStyleDto.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.ZoneDto.getDescriptor().getEnumTypes().get(2);
    }

    private static final LightingStyleDto[] VALUES = values();

    public static LightingStyleDto valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LightingStyleDto(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maptool.ZoneDto.LightingStyleDto)
  }

  /**
   * Protobuf enum {@code maptool.ZoneDto.AStarRoundingOptionsDto}
   */
  public enum AStarRoundingOptionsDto
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>CELL_UNIT = 1;</code>
     */
    CELL_UNIT(1),
    /**
     * <code>INTEGER = 2;</code>
     */
    INTEGER(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>CELL_UNIT = 1;</code>
     */
    public static final int CELL_UNIT_VALUE = 1;
    /**
     * <code>INTEGER = 2;</code>
     */
    public static final int INTEGER_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AStarRoundingOptionsDto valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AStarRoundingOptionsDto forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return CELL_UNIT;
        case 2: return INTEGER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AStarRoundingOptionsDto>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AStarRoundingOptionsDto> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AStarRoundingOptionsDto>() {
            public AStarRoundingOptionsDto findValueByNumber(int number) {
              return AStarRoundingOptionsDto.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.ZoneDto.getDescriptor().getEnumTypes().get(3);
    }

    private static final AStarRoundingOptionsDto[] VALUES = values();

    public static AStarRoundingOptionsDto valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AStarRoundingOptionsDto(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maptool.ZoneDto.AStarRoundingOptionsDto)
  }

  public static final int CREATION_TIME_FIELD_NUMBER = 1;
  private long creationTime_;
  /**
   * <code>int64 creation_time = 1;</code>
   * @return The creationTime.
   */
  @java.lang.Override
  public long getCreationTime() {
    return creationTime_;
  }

  public static final int ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object id_;
  /**
   * <code>string id = 2;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <code>string id = 2;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GRID_FIELD_NUMBER = 3;
  private net.rptools.maptool.server.proto.GridDto grid_;
  /**
   * <code>.maptool.GridDto grid = 3;</code>
   * @return Whether the grid field is set.
   */
  @java.lang.Override
  public boolean hasGrid() {
    return grid_ != null;
  }
  /**
   * <code>.maptool.GridDto grid = 3;</code>
   * @return The grid.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.GridDto getGrid() {
    return grid_ == null ? net.rptools.maptool.server.proto.GridDto.getDefaultInstance() : grid_;
  }
  /**
   * <code>.maptool.GridDto grid = 3;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.GridDtoOrBuilder getGridOrBuilder() {
    return getGrid();
  }

  public static final int GRID_COLOR_FIELD_NUMBER = 4;
  private int gridColor_;
  /**
   * <code>int32 grid_color = 4;</code>
   * @return The gridColor.
   */
  @java.lang.Override
  public int getGridColor() {
    return gridColor_;
  }

  public static final int IMAGE_SCALE_X_FIELD_NUMBER = 5;
  private float imageScaleX_;
  /**
   * <code>float image_scale_x = 5;</code>
   * @return The imageScaleX.
   */
  @java.lang.Override
  public float getImageScaleX() {
    return imageScaleX_;
  }

  public static final int IMAGE_SCALE_Y_FIELD_NUMBER = 6;
  private float imageScaleY_;
  /**
   * <code>float image_scale_y = 6;</code>
   * @return The imageScaleY.
   */
  @java.lang.Override
  public float getImageScaleY() {
    return imageScaleY_;
  }

  public static final int TOKEN_VISION_DISTANCE_FIELD_NUMBER = 7;
  private int tokenVisionDistance_;
  /**
   * <code>int32 token_vision_distance = 7;</code>
   * @return The tokenVisionDistance.
   */
  @java.lang.Override
  public int getTokenVisionDistance() {
    return tokenVisionDistance_;
  }

  public static final int UNITS_PER_CELL_FIELD_NUMBER = 8;
  private double unitsPerCell_;
  /**
   * <code>double units_per_cell = 8;</code>
   * @return The unitsPerCell.
   */
  @java.lang.Override
  public double getUnitsPerCell() {
    return unitsPerCell_;
  }

  public static final int A_STAR_ROUNDING_FIELD_NUMBER = 9;
  private int aStarRounding_;
  /**
   * <code>.maptool.ZoneDto.AStarRoundingOptionsDto a_star_rounding = 9;</code>
   * @return The enum numeric value on the wire for aStarRounding.
   */
  @java.lang.Override public int getAStarRoundingValue() {
    return aStarRounding_;
  }
  /**
   * <code>.maptool.ZoneDto.AStarRoundingOptionsDto a_star_rounding = 9;</code>
   * @return The aStarRounding.
   */
  @java.lang.Override public net.rptools.maptool.server.proto.ZoneDto.AStarRoundingOptionsDto getAStarRounding() {
    @SuppressWarnings("deprecation")
    net.rptools.maptool.server.proto.ZoneDto.AStarRoundingOptionsDto result = net.rptools.maptool.server.proto.ZoneDto.AStarRoundingOptionsDto.valueOf(aStarRounding_);
    return result == null ? net.rptools.maptool.server.proto.ZoneDto.AStarRoundingOptionsDto.UNRECOGNIZED : result;
  }

  public static final int TOPOLOGYTYPES_FIELD_NUMBER = 10;
  private java.util.List<java.lang.Integer> topologyTypes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, net.rptools.maptool.server.proto.TopologyTypeDto> topologyTypes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, net.rptools.maptool.server.proto.TopologyTypeDto>() {
            public net.rptools.maptool.server.proto.TopologyTypeDto convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              net.rptools.maptool.server.proto.TopologyTypeDto result = net.rptools.maptool.server.proto.TopologyTypeDto.valueOf(from);
              return result == null ? net.rptools.maptool.server.proto.TopologyTypeDto.UNRECOGNIZED : result;
            }
          };
  /**
   * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
   * @return A list containing the topologyTypes.
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.TopologyTypeDto> getTopologyTypesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, net.rptools.maptool.server.proto.TopologyTypeDto>(topologyTypes_, topologyTypes_converter_);
  }
  /**
   * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
   * @return The count of topologyTypes.
   */
  @java.lang.Override
  public int getTopologyTypesCount() {
    return topologyTypes_.size();
  }
  /**
   * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
   * @param index The index of the element to return.
   * @return The topologyTypes at the given index.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.TopologyTypeDto getTopologyTypes(int index) {
    return topologyTypes_converter_.convert(topologyTypes_.get(index));
  }
  /**
   * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
   * @return A list containing the enum numeric values on the wire for topologyTypes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getTopologyTypesValueList() {
    return topologyTypes_;
  }
  /**
   * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of topologyTypes at the given index.
   */
  @java.lang.Override
  public int getTopologyTypesValue(int index) {
    return topologyTypes_.get(index);
  }
  private int topologyTypesMemoizedSerializedSize;

  public static final int DRAWABLES_FIELD_NUMBER = 11;
  private java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> drawables_;
  /**
   * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> getDrawablesList() {
    return drawables_;
  }
  /**
   * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> 
      getDrawablesOrBuilderList() {
    return drawables_;
  }
  /**
   * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
   */
  @java.lang.Override
  public int getDrawablesCount() {
    return drawables_.size();
  }
  /**
   * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.DrawnElementDto getDrawables(int index) {
    return drawables_.get(index);
  }
  /**
   * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder getDrawablesOrBuilder(
      int index) {
    return drawables_.get(index);
  }

  public static final int GM_DRAWABLES_FIELD_NUMBER = 12;
  private java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> gmDrawables_;
  /**
   * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> getGmDrawablesList() {
    return gmDrawables_;
  }
  /**
   * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> 
      getGmDrawablesOrBuilderList() {
    return gmDrawables_;
  }
  /**
   * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
   */
  @java.lang.Override
  public int getGmDrawablesCount() {
    return gmDrawables_.size();
  }
  /**
   * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.DrawnElementDto getGmDrawables(int index) {
    return gmDrawables_.get(index);
  }
  /**
   * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder getGmDrawablesOrBuilder(
      int index) {
    return gmDrawables_.get(index);
  }

  public static final int OBJECT_DRAWABLES_FIELD_NUMBER = 13;
  private java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> objectDrawables_;
  /**
   * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> getObjectDrawablesList() {
    return objectDrawables_;
  }
  /**
   * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> 
      getObjectDrawablesOrBuilderList() {
    return objectDrawables_;
  }
  /**
   * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
   */
  @java.lang.Override
  public int getObjectDrawablesCount() {
    return objectDrawables_.size();
  }
  /**
   * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.DrawnElementDto getObjectDrawables(int index) {
    return objectDrawables_.get(index);
  }
  /**
   * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder getObjectDrawablesOrBuilder(
      int index) {
    return objectDrawables_.get(index);
  }

  public static final int BACKGROUND_DRAWABLES_FIELD_NUMBER = 14;
  private java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> backgroundDrawables_;
  /**
   * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> getBackgroundDrawablesList() {
    return backgroundDrawables_;
  }
  /**
   * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> 
      getBackgroundDrawablesOrBuilderList() {
    return backgroundDrawables_;
  }
  /**
   * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
   */
  @java.lang.Override
  public int getBackgroundDrawablesCount() {
    return backgroundDrawables_.size();
  }
  /**
   * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.DrawnElementDto getBackgroundDrawables(int index) {
    return backgroundDrawables_.get(index);
  }
  /**
   * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder getBackgroundDrawablesOrBuilder(
      int index) {
    return backgroundDrawables_.get(index);
  }

  public static final int LABELS_FIELD_NUMBER = 15;
  private java.util.List<net.rptools.maptool.server.proto.LabelDto> labels_;
  /**
   * <code>repeated .maptool.LabelDto labels = 15;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.LabelDto> getLabelsList() {
    return labels_;
  }
  /**
   * <code>repeated .maptool.LabelDto labels = 15;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.LabelDtoOrBuilder> 
      getLabelsOrBuilderList() {
    return labels_;
  }
  /**
   * <code>repeated .maptool.LabelDto labels = 15;</code>
   */
  @java.lang.Override
  public int getLabelsCount() {
    return labels_.size();
  }
  /**
   * <code>repeated .maptool.LabelDto labels = 15;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.LabelDto getLabels(int index) {
    return labels_.get(index);
  }
  /**
   * <code>repeated .maptool.LabelDto labels = 15;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.LabelDtoOrBuilder getLabelsOrBuilder(
      int index) {
    return labels_.get(index);
  }

  public static final int TOKENS_FIELD_NUMBER = 16;
  private java.util.List<net.rptools.maptool.server.proto.TokenDto> tokens_;
  /**
   * <code>repeated .maptool.TokenDto tokens = 16;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.TokenDto> getTokensList() {
    return tokens_;
  }
  /**
   * <code>repeated .maptool.TokenDto tokens = 16;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.TokenDtoOrBuilder> 
      getTokensOrBuilderList() {
    return tokens_;
  }
  /**
   * <code>repeated .maptool.TokenDto tokens = 16;</code>
   */
  @java.lang.Override
  public int getTokensCount() {
    return tokens_.size();
  }
  /**
   * <code>repeated .maptool.TokenDto tokens = 16;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.TokenDto getTokens(int index) {
    return tokens_.get(index);
  }
  /**
   * <code>repeated .maptool.TokenDto tokens = 16;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.TokenDtoOrBuilder getTokensOrBuilder(
      int index) {
    return tokens_.get(index);
  }

  public static final int EXPOSED_AREA_META_FIELD_NUMBER = 17;
  private static final class ExposedAreaMetaDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto>newDefaultInstance(
                net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_ZoneDto_ExposedAreaMetaEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto> exposedAreaMeta_;
  private com.google.protobuf.MapField<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto>
  internalGetExposedAreaMeta() {
    if (exposedAreaMeta_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ExposedAreaMetaDefaultEntryHolder.defaultEntry);
    }
    return exposedAreaMeta_;
  }

  public int getExposedAreaMetaCount() {
    return internalGetExposedAreaMeta().getMap().size();
  }
  /**
   * <code>map&lt;string, .maptool.AreaDto&gt; exposed_area_meta = 17;</code>
   */

  @java.lang.Override
  public boolean containsExposedAreaMeta(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetExposedAreaMeta().getMap().containsKey(key);
  }
  /**
   * Use {@link #getExposedAreaMetaMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto> getExposedAreaMeta() {
    return getExposedAreaMetaMap();
  }
  /**
   * <code>map&lt;string, .maptool.AreaDto&gt; exposed_area_meta = 17;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto> getExposedAreaMetaMap() {
    return internalGetExposedAreaMeta().getMap();
  }
  /**
   * <code>map&lt;string, .maptool.AreaDto&gt; exposed_area_meta = 17;</code>
   */
  @java.lang.Override

  public net.rptools.maptool.server.proto.drawing.AreaDto getExposedAreaMetaOrDefault(
      java.lang.String key,
      net.rptools.maptool.server.proto.drawing.AreaDto defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto> map =
        internalGetExposedAreaMeta().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .maptool.AreaDto&gt; exposed_area_meta = 17;</code>
   */
  @java.lang.Override

  public net.rptools.maptool.server.proto.drawing.AreaDto getExposedAreaMetaOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto> map =
        internalGetExposedAreaMeta().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int INITIATIVE_FIELD_NUMBER = 18;
  private net.rptools.maptool.server.proto.InitiativeListDto initiative_;
  /**
   * <code>.maptool.InitiativeListDto initiative = 18;</code>
   * @return Whether the initiative field is set.
   */
  @java.lang.Override
  public boolean hasInitiative() {
    return initiative_ != null;
  }
  /**
   * <code>.maptool.InitiativeListDto initiative = 18;</code>
   * @return The initiative.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.InitiativeListDto getInitiative() {
    return initiative_ == null ? net.rptools.maptool.server.proto.InitiativeListDto.getDefaultInstance() : initiative_;
  }
  /**
   * <code>.maptool.InitiativeListDto initiative = 18;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.InitiativeListDtoOrBuilder getInitiativeOrBuilder() {
    return getInitiative();
  }

  public static final int EXPOSED_AREA_FIELD_NUMBER = 19;
  private net.rptools.maptool.server.proto.drawing.AreaDto exposedArea_;
  /**
   * <code>.maptool.AreaDto exposed_area = 19;</code>
   * @return Whether the exposedArea field is set.
   */
  @java.lang.Override
  public boolean hasExposedArea() {
    return exposedArea_ != null;
  }
  /**
   * <code>.maptool.AreaDto exposed_area = 19;</code>
   * @return The exposedArea.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.AreaDto getExposedArea() {
    return exposedArea_ == null ? net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : exposedArea_;
  }
  /**
   * <code>.maptool.AreaDto exposed_area = 19;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder getExposedAreaOrBuilder() {
    return getExposedArea();
  }

  public static final int HAS_FOG_FIELD_NUMBER = 20;
  private boolean hasFog_;
  /**
   * <code>bool has_fog = 20;</code>
   * @return The hasFog.
   */
  @java.lang.Override
  public boolean getHasFog() {
    return hasFog_;
  }

  public static final int FOG_PAINT_FIELD_NUMBER = 21;
  private net.rptools.maptool.server.proto.drawing.DrawablePaintDto fogPaint_;
  /**
   * <code>.maptool.DrawablePaintDto fog_paint = 21;</code>
   * @return Whether the fogPaint field is set.
   */
  @java.lang.Override
  public boolean hasFogPaint() {
    return fogPaint_ != null;
  }
  /**
   * <code>.maptool.DrawablePaintDto fog_paint = 21;</code>
   * @return The fogPaint.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.DrawablePaintDto getFogPaint() {
    return fogPaint_ == null ? net.rptools.maptool.server.proto.drawing.DrawablePaintDto.getDefaultInstance() : fogPaint_;
  }
  /**
   * <code>.maptool.DrawablePaintDto fog_paint = 21;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.DrawablePaintDtoOrBuilder getFogPaintOrBuilder() {
    return getFogPaint();
  }

  public static final int TOPOLOGY_FIELD_NUMBER = 22;
  private net.rptools.maptool.server.proto.drawing.AreaDto topology_;
  /**
   * <code>.maptool.AreaDto topology = 22;</code>
   * @return Whether the topology field is set.
   */
  @java.lang.Override
  public boolean hasTopology() {
    return topology_ != null;
  }
  /**
   * <code>.maptool.AreaDto topology = 22;</code>
   * @return The topology.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.AreaDto getTopology() {
    return topology_ == null ? net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : topology_;
  }
  /**
   * <code>.maptool.AreaDto topology = 22;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder getTopologyOrBuilder() {
    return getTopology();
  }

  public static final int HILL_VBL_FIELD_NUMBER = 23;
  private net.rptools.maptool.server.proto.drawing.AreaDto hillVbl_;
  /**
   * <code>.maptool.AreaDto hill_vbl = 23;</code>
   * @return Whether the hillVbl field is set.
   */
  @java.lang.Override
  public boolean hasHillVbl() {
    return hillVbl_ != null;
  }
  /**
   * <code>.maptool.AreaDto hill_vbl = 23;</code>
   * @return The hillVbl.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.AreaDto getHillVbl() {
    return hillVbl_ == null ? net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : hillVbl_;
  }
  /**
   * <code>.maptool.AreaDto hill_vbl = 23;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder getHillVblOrBuilder() {
    return getHillVbl();
  }

  public static final int PIT_VBL_FIELD_NUMBER = 24;
  private net.rptools.maptool.server.proto.drawing.AreaDto pitVbl_;
  /**
   * <code>.maptool.AreaDto pit_vbl = 24;</code>
   * @return Whether the pitVbl field is set.
   */
  @java.lang.Override
  public boolean hasPitVbl() {
    return pitVbl_ != null;
  }
  /**
   * <code>.maptool.AreaDto pit_vbl = 24;</code>
   * @return The pitVbl.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.AreaDto getPitVbl() {
    return pitVbl_ == null ? net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : pitVbl_;
  }
  /**
   * <code>.maptool.AreaDto pit_vbl = 24;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder getPitVblOrBuilder() {
    return getPitVbl();
  }

  public static final int TOPOLOGY_TERRAIN_FIELD_NUMBER = 25;
  private net.rptools.maptool.server.proto.drawing.AreaDto topologyTerrain_;
  /**
   * <code>.maptool.AreaDto topology_terrain = 25;</code>
   * @return Whether the topologyTerrain field is set.
   */
  @java.lang.Override
  public boolean hasTopologyTerrain() {
    return topologyTerrain_ != null;
  }
  /**
   * <code>.maptool.AreaDto topology_terrain = 25;</code>
   * @return The topologyTerrain.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.AreaDto getTopologyTerrain() {
    return topologyTerrain_ == null ? net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : topologyTerrain_;
  }
  /**
   * <code>.maptool.AreaDto topology_terrain = 25;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder getTopologyTerrainOrBuilder() {
    return getTopologyTerrain();
  }

  public static final int BACKGROUND_PAINT_FIELD_NUMBER = 26;
  private net.rptools.maptool.server.proto.drawing.DrawablePaintDto backgroundPaint_;
  /**
   * <code>.maptool.DrawablePaintDto background_paint = 26;</code>
   * @return Whether the backgroundPaint field is set.
   */
  @java.lang.Override
  public boolean hasBackgroundPaint() {
    return backgroundPaint_ != null;
  }
  /**
   * <code>.maptool.DrawablePaintDto background_paint = 26;</code>
   * @return The backgroundPaint.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.DrawablePaintDto getBackgroundPaint() {
    return backgroundPaint_ == null ? net.rptools.maptool.server.proto.drawing.DrawablePaintDto.getDefaultInstance() : backgroundPaint_;
  }
  /**
   * <code>.maptool.DrawablePaintDto background_paint = 26;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.DrawablePaintDtoOrBuilder getBackgroundPaintOrBuilder() {
    return getBackgroundPaint();
  }

  public static final int MAP_ASSET_FIELD_NUMBER = 27;
  private com.google.protobuf.StringValue mapAsset_;
  /**
   * <code>.google.protobuf.StringValue map_asset = 27;</code>
   * @return Whether the mapAsset field is set.
   */
  @java.lang.Override
  public boolean hasMapAsset() {
    return mapAsset_ != null;
  }
  /**
   * <code>.google.protobuf.StringValue map_asset = 27;</code>
   * @return The mapAsset.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getMapAsset() {
    return mapAsset_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : mapAsset_;
  }
  /**
   * <code>.google.protobuf.StringValue map_asset = 27;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getMapAssetOrBuilder() {
    return getMapAsset();
  }

  public static final int BOARDPOSITION_FIELD_NUMBER = 28;
  private net.rptools.maptool.server.proto.drawing.IntPointDto boardPosition_;
  /**
   * <code>.maptool.IntPointDto boardPosition = 28;</code>
   * @return Whether the boardPosition field is set.
   */
  @java.lang.Override
  public boolean hasBoardPosition() {
    return boardPosition_ != null;
  }
  /**
   * <code>.maptool.IntPointDto boardPosition = 28;</code>
   * @return The boardPosition.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.IntPointDto getBoardPosition() {
    return boardPosition_ == null ? net.rptools.maptool.server.proto.drawing.IntPointDto.getDefaultInstance() : boardPosition_;
  }
  /**
   * <code>.maptool.IntPointDto boardPosition = 28;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder getBoardPositionOrBuilder() {
    return getBoardPosition();
  }

  public static final int DRAW_BOARD_FIELD_NUMBER = 29;
  private boolean drawBoard_;
  /**
   * <code>bool draw_board = 29;</code>
   * @return The drawBoard.
   */
  @java.lang.Override
  public boolean getDrawBoard() {
    return drawBoard_;
  }

  public static final int BOARDCHANGED_FIELD_NUMBER = 30;
  private boolean boardChanged_;
  /**
   * <code>bool boardChanged = 30;</code>
   * @return The boardChanged.
   */
  @java.lang.Override
  public boolean getBoardChanged() {
    return boardChanged_;
  }

  public static final int NAME_FIELD_NUMBER = 31;
  private volatile java.lang.Object name_;
  /**
   * <code>string name = 31;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>string name = 31;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PLAYER_ALIAS_FIELD_NUMBER = 32;
  private com.google.protobuf.StringValue playerAlias_;
  /**
   * <code>.google.protobuf.StringValue player_alias = 32;</code>
   * @return Whether the playerAlias field is set.
   */
  @java.lang.Override
  public boolean hasPlayerAlias() {
    return playerAlias_ != null;
  }
  /**
   * <code>.google.protobuf.StringValue player_alias = 32;</code>
   * @return The playerAlias.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getPlayerAlias() {
    return playerAlias_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : playerAlias_;
  }
  /**
   * <code>.google.protobuf.StringValue player_alias = 32;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getPlayerAliasOrBuilder() {
    return getPlayerAlias();
  }

  public static final int IS_VISIBLE_FIELD_NUMBER = 33;
  private boolean isVisible_;
  /**
   * <code>bool is_visible = 33;</code>
   * @return The isVisible.
   */
  @java.lang.Override
  public boolean getIsVisible() {
    return isVisible_;
  }

  public static final int VISION_TYPE_FIELD_NUMBER = 34;
  private int visionType_;
  /**
   * <code>.maptool.ZoneDto.VisionTypeDto vision_type = 34;</code>
   * @return The enum numeric value on the wire for visionType.
   */
  @java.lang.Override public int getVisionTypeValue() {
    return visionType_;
  }
  /**
   * <code>.maptool.ZoneDto.VisionTypeDto vision_type = 34;</code>
   * @return The visionType.
   */
  @java.lang.Override public net.rptools.maptool.server.proto.ZoneDto.VisionTypeDto getVisionType() {
    @SuppressWarnings("deprecation")
    net.rptools.maptool.server.proto.ZoneDto.VisionTypeDto result = net.rptools.maptool.server.proto.ZoneDto.VisionTypeDto.valueOf(visionType_);
    return result == null ? net.rptools.maptool.server.proto.ZoneDto.VisionTypeDto.UNRECOGNIZED : result;
  }

  public static final int LIGHTING_STYLE_FIELD_NUMBER = 35;
  private int lightingStyle_;
  /**
   * <code>.maptool.ZoneDto.LightingStyleDto lighting_style = 35;</code>
   * @return The enum numeric value on the wire for lightingStyle.
   */
  @java.lang.Override public int getLightingStyleValue() {
    return lightingStyle_;
  }
  /**
   * <code>.maptool.ZoneDto.LightingStyleDto lighting_style = 35;</code>
   * @return The lightingStyle.
   */
  @java.lang.Override public net.rptools.maptool.server.proto.ZoneDto.LightingStyleDto getLightingStyle() {
    @SuppressWarnings("deprecation")
    net.rptools.maptool.server.proto.ZoneDto.LightingStyleDto result = net.rptools.maptool.server.proto.ZoneDto.LightingStyleDto.valueOf(lightingStyle_);
    return result == null ? net.rptools.maptool.server.proto.ZoneDto.LightingStyleDto.UNRECOGNIZED : result;
  }

  public static final int TOKEN_SELECTION_FIELD_NUMBER = 36;
  private int tokenSelection_;
  /**
   * <code>.maptool.ZoneDto.TokenSelectionDto token_selection = 36;</code>
   * @return The enum numeric value on the wire for tokenSelection.
   */
  @java.lang.Override public int getTokenSelectionValue() {
    return tokenSelection_;
  }
  /**
   * <code>.maptool.ZoneDto.TokenSelectionDto token_selection = 36;</code>
   * @return The tokenSelection.
   */
  @java.lang.Override public net.rptools.maptool.server.proto.ZoneDto.TokenSelectionDto getTokenSelection() {
    @SuppressWarnings("deprecation")
    net.rptools.maptool.server.proto.ZoneDto.TokenSelectionDto result = net.rptools.maptool.server.proto.ZoneDto.TokenSelectionDto.valueOf(tokenSelection_);
    return result == null ? net.rptools.maptool.server.proto.ZoneDto.TokenSelectionDto.UNRECOGNIZED : result;
  }

  public static final int HEIGHT_FIELD_NUMBER = 37;
  private int height_;
  /**
   * <code>int32 height = 37;</code>
   * @return The height.
   */
  @java.lang.Override
  public int getHeight() {
    return height_;
  }

  public static final int WIDTH_FIELD_NUMBER = 38;
  private int width_;
  /**
   * <code>int32 width = 38;</code>
   * @return The width.
   */
  @java.lang.Override
  public int getWidth() {
    return width_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (creationTime_ != 0L) {
      output.writeInt64(1, creationTime_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
    }
    if (grid_ != null) {
      output.writeMessage(3, getGrid());
    }
    if (gridColor_ != 0) {
      output.writeInt32(4, gridColor_);
    }
    if (java.lang.Float.floatToRawIntBits(imageScaleX_) != 0) {
      output.writeFloat(5, imageScaleX_);
    }
    if (java.lang.Float.floatToRawIntBits(imageScaleY_) != 0) {
      output.writeFloat(6, imageScaleY_);
    }
    if (tokenVisionDistance_ != 0) {
      output.writeInt32(7, tokenVisionDistance_);
    }
    if (java.lang.Double.doubleToRawLongBits(unitsPerCell_) != 0) {
      output.writeDouble(8, unitsPerCell_);
    }
    if (aStarRounding_ != net.rptools.maptool.server.proto.ZoneDto.AStarRoundingOptionsDto.NONE.getNumber()) {
      output.writeEnum(9, aStarRounding_);
    }
    if (getTopologyTypesList().size() > 0) {
      output.writeUInt32NoTag(82);
      output.writeUInt32NoTag(topologyTypesMemoizedSerializedSize);
    }
    for (int i = 0; i < topologyTypes_.size(); i++) {
      output.writeEnumNoTag(topologyTypes_.get(i));
    }
    for (int i = 0; i < drawables_.size(); i++) {
      output.writeMessage(11, drawables_.get(i));
    }
    for (int i = 0; i < gmDrawables_.size(); i++) {
      output.writeMessage(12, gmDrawables_.get(i));
    }
    for (int i = 0; i < objectDrawables_.size(); i++) {
      output.writeMessage(13, objectDrawables_.get(i));
    }
    for (int i = 0; i < backgroundDrawables_.size(); i++) {
      output.writeMessage(14, backgroundDrawables_.get(i));
    }
    for (int i = 0; i < labels_.size(); i++) {
      output.writeMessage(15, labels_.get(i));
    }
    for (int i = 0; i < tokens_.size(); i++) {
      output.writeMessage(16, tokens_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetExposedAreaMeta(),
        ExposedAreaMetaDefaultEntryHolder.defaultEntry,
        17);
    if (initiative_ != null) {
      output.writeMessage(18, getInitiative());
    }
    if (exposedArea_ != null) {
      output.writeMessage(19, getExposedArea());
    }
    if (hasFog_ != false) {
      output.writeBool(20, hasFog_);
    }
    if (fogPaint_ != null) {
      output.writeMessage(21, getFogPaint());
    }
    if (topology_ != null) {
      output.writeMessage(22, getTopology());
    }
    if (hillVbl_ != null) {
      output.writeMessage(23, getHillVbl());
    }
    if (pitVbl_ != null) {
      output.writeMessage(24, getPitVbl());
    }
    if (topologyTerrain_ != null) {
      output.writeMessage(25, getTopologyTerrain());
    }
    if (backgroundPaint_ != null) {
      output.writeMessage(26, getBackgroundPaint());
    }
    if (mapAsset_ != null) {
      output.writeMessage(27, getMapAsset());
    }
    if (boardPosition_ != null) {
      output.writeMessage(28, getBoardPosition());
    }
    if (drawBoard_ != false) {
      output.writeBool(29, drawBoard_);
    }
    if (boardChanged_ != false) {
      output.writeBool(30, boardChanged_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 31, name_);
    }
    if (playerAlias_ != null) {
      output.writeMessage(32, getPlayerAlias());
    }
    if (isVisible_ != false) {
      output.writeBool(33, isVisible_);
    }
    if (visionType_ != net.rptools.maptool.server.proto.ZoneDto.VisionTypeDto.OFF.getNumber()) {
      output.writeEnum(34, visionType_);
    }
    if (lightingStyle_ != net.rptools.maptool.server.proto.ZoneDto.LightingStyleDto.ENVIRONMENTAL.getNumber()) {
      output.writeEnum(35, lightingStyle_);
    }
    if (tokenSelection_ != net.rptools.maptool.server.proto.ZoneDto.TokenSelectionDto.PC.getNumber()) {
      output.writeEnum(36, tokenSelection_);
    }
    if (height_ != 0) {
      output.writeInt32(37, height_);
    }
    if (width_ != 0) {
      output.writeInt32(38, width_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (creationTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, creationTime_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
    }
    if (grid_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getGrid());
    }
    if (gridColor_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, gridColor_);
    }
    if (java.lang.Float.floatToRawIntBits(imageScaleX_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(5, imageScaleX_);
    }
    if (java.lang.Float.floatToRawIntBits(imageScaleY_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(6, imageScaleY_);
    }
    if (tokenVisionDistance_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, tokenVisionDistance_);
    }
    if (java.lang.Double.doubleToRawLongBits(unitsPerCell_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(8, unitsPerCell_);
    }
    if (aStarRounding_ != net.rptools.maptool.server.proto.ZoneDto.AStarRoundingOptionsDto.NONE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(9, aStarRounding_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < topologyTypes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(topologyTypes_.get(i));
      }
      size += dataSize;
      if (!getTopologyTypesList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }topologyTypesMemoizedSerializedSize = dataSize;
    }
    for (int i = 0; i < drawables_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, drawables_.get(i));
    }
    for (int i = 0; i < gmDrawables_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, gmDrawables_.get(i));
    }
    for (int i = 0; i < objectDrawables_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, objectDrawables_.get(i));
    }
    for (int i = 0; i < backgroundDrawables_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, backgroundDrawables_.get(i));
    }
    for (int i = 0; i < labels_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, labels_.get(i));
    }
    for (int i = 0; i < tokens_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, tokens_.get(i));
    }
    for (java.util.Map.Entry<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto> entry
         : internalGetExposedAreaMeta().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto>
      exposedAreaMeta__ = ExposedAreaMetaDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, exposedAreaMeta__);
    }
    if (initiative_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, getInitiative());
    }
    if (exposedArea_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, getExposedArea());
    }
    if (hasFog_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(20, hasFog_);
    }
    if (fogPaint_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(21, getFogPaint());
    }
    if (topology_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(22, getTopology());
    }
    if (hillVbl_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(23, getHillVbl());
    }
    if (pitVbl_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(24, getPitVbl());
    }
    if (topologyTerrain_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(25, getTopologyTerrain());
    }
    if (backgroundPaint_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(26, getBackgroundPaint());
    }
    if (mapAsset_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(27, getMapAsset());
    }
    if (boardPosition_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(28, getBoardPosition());
    }
    if (drawBoard_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(29, drawBoard_);
    }
    if (boardChanged_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(30, boardChanged_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(31, name_);
    }
    if (playerAlias_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(32, getPlayerAlias());
    }
    if (isVisible_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(33, isVisible_);
    }
    if (visionType_ != net.rptools.maptool.server.proto.ZoneDto.VisionTypeDto.OFF.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(34, visionType_);
    }
    if (lightingStyle_ != net.rptools.maptool.server.proto.ZoneDto.LightingStyleDto.ENVIRONMENTAL.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(35, lightingStyle_);
    }
    if (tokenSelection_ != net.rptools.maptool.server.proto.ZoneDto.TokenSelectionDto.PC.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(36, tokenSelection_);
    }
    if (height_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(37, height_);
    }
    if (width_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(38, width_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof net.rptools.maptool.server.proto.ZoneDto)) {
      return super.equals(obj);
    }
    net.rptools.maptool.server.proto.ZoneDto other = (net.rptools.maptool.server.proto.ZoneDto) obj;

    if (getCreationTime()
        != other.getCreationTime()) return false;
    if (!getId()
        .equals(other.getId())) return false;
    if (hasGrid() != other.hasGrid()) return false;
    if (hasGrid()) {
      if (!getGrid()
          .equals(other.getGrid())) return false;
    }
    if (getGridColor()
        != other.getGridColor()) return false;
    if (java.lang.Float.floatToIntBits(getImageScaleX())
        != java.lang.Float.floatToIntBits(
            other.getImageScaleX())) return false;
    if (java.lang.Float.floatToIntBits(getImageScaleY())
        != java.lang.Float.floatToIntBits(
            other.getImageScaleY())) return false;
    if (getTokenVisionDistance()
        != other.getTokenVisionDistance()) return false;
    if (java.lang.Double.doubleToLongBits(getUnitsPerCell())
        != java.lang.Double.doubleToLongBits(
            other.getUnitsPerCell())) return false;
    if (aStarRounding_ != other.aStarRounding_) return false;
    if (!topologyTypes_.equals(other.topologyTypes_)) return false;
    if (!getDrawablesList()
        .equals(other.getDrawablesList())) return false;
    if (!getGmDrawablesList()
        .equals(other.getGmDrawablesList())) return false;
    if (!getObjectDrawablesList()
        .equals(other.getObjectDrawablesList())) return false;
    if (!getBackgroundDrawablesList()
        .equals(other.getBackgroundDrawablesList())) return false;
    if (!getLabelsList()
        .equals(other.getLabelsList())) return false;
    if (!getTokensList()
        .equals(other.getTokensList())) return false;
    if (!internalGetExposedAreaMeta().equals(
        other.internalGetExposedAreaMeta())) return false;
    if (hasInitiative() != other.hasInitiative()) return false;
    if (hasInitiative()) {
      if (!getInitiative()
          .equals(other.getInitiative())) return false;
    }
    if (hasExposedArea() != other.hasExposedArea()) return false;
    if (hasExposedArea()) {
      if (!getExposedArea()
          .equals(other.getExposedArea())) return false;
    }
    if (getHasFog()
        != other.getHasFog()) return false;
    if (hasFogPaint() != other.hasFogPaint()) return false;
    if (hasFogPaint()) {
      if (!getFogPaint()
          .equals(other.getFogPaint())) return false;
    }
    if (hasTopology() != other.hasTopology()) return false;
    if (hasTopology()) {
      if (!getTopology()
          .equals(other.getTopology())) return false;
    }
    if (hasHillVbl() != other.hasHillVbl()) return false;
    if (hasHillVbl()) {
      if (!getHillVbl()
          .equals(other.getHillVbl())) return false;
    }
    if (hasPitVbl() != other.hasPitVbl()) return false;
    if (hasPitVbl()) {
      if (!getPitVbl()
          .equals(other.getPitVbl())) return false;
    }
    if (hasTopologyTerrain() != other.hasTopologyTerrain()) return false;
    if (hasTopologyTerrain()) {
      if (!getTopologyTerrain()
          .equals(other.getTopologyTerrain())) return false;
    }
    if (hasBackgroundPaint() != other.hasBackgroundPaint()) return false;
    if (hasBackgroundPaint()) {
      if (!getBackgroundPaint()
          .equals(other.getBackgroundPaint())) return false;
    }
    if (hasMapAsset() != other.hasMapAsset()) return false;
    if (hasMapAsset()) {
      if (!getMapAsset()
          .equals(other.getMapAsset())) return false;
    }
    if (hasBoardPosition() != other.hasBoardPosition()) return false;
    if (hasBoardPosition()) {
      if (!getBoardPosition()
          .equals(other.getBoardPosition())) return false;
    }
    if (getDrawBoard()
        != other.getDrawBoard()) return false;
    if (getBoardChanged()
        != other.getBoardChanged()) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (hasPlayerAlias() != other.hasPlayerAlias()) return false;
    if (hasPlayerAlias()) {
      if (!getPlayerAlias()
          .equals(other.getPlayerAlias())) return false;
    }
    if (getIsVisible()
        != other.getIsVisible()) return false;
    if (visionType_ != other.visionType_) return false;
    if (lightingStyle_ != other.lightingStyle_) return false;
    if (tokenSelection_ != other.tokenSelection_) return false;
    if (getHeight()
        != other.getHeight()) return false;
    if (getWidth()
        != other.getWidth()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CREATION_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCreationTime());
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    if (hasGrid()) {
      hash = (37 * hash) + GRID_FIELD_NUMBER;
      hash = (53 * hash) + getGrid().hashCode();
    }
    hash = (37 * hash) + GRID_COLOR_FIELD_NUMBER;
    hash = (53 * hash) + getGridColor();
    hash = (37 * hash) + IMAGE_SCALE_X_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getImageScaleX());
    hash = (37 * hash) + IMAGE_SCALE_Y_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getImageScaleY());
    hash = (37 * hash) + TOKEN_VISION_DISTANCE_FIELD_NUMBER;
    hash = (53 * hash) + getTokenVisionDistance();
    hash = (37 * hash) + UNITS_PER_CELL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getUnitsPerCell()));
    hash = (37 * hash) + A_STAR_ROUNDING_FIELD_NUMBER;
    hash = (53 * hash) + aStarRounding_;
    if (getTopologyTypesCount() > 0) {
      hash = (37 * hash) + TOPOLOGYTYPES_FIELD_NUMBER;
      hash = (53 * hash) + topologyTypes_.hashCode();
    }
    if (getDrawablesCount() > 0) {
      hash = (37 * hash) + DRAWABLES_FIELD_NUMBER;
      hash = (53 * hash) + getDrawablesList().hashCode();
    }
    if (getGmDrawablesCount() > 0) {
      hash = (37 * hash) + GM_DRAWABLES_FIELD_NUMBER;
      hash = (53 * hash) + getGmDrawablesList().hashCode();
    }
    if (getObjectDrawablesCount() > 0) {
      hash = (37 * hash) + OBJECT_DRAWABLES_FIELD_NUMBER;
      hash = (53 * hash) + getObjectDrawablesList().hashCode();
    }
    if (getBackgroundDrawablesCount() > 0) {
      hash = (37 * hash) + BACKGROUND_DRAWABLES_FIELD_NUMBER;
      hash = (53 * hash) + getBackgroundDrawablesList().hashCode();
    }
    if (getLabelsCount() > 0) {
      hash = (37 * hash) + LABELS_FIELD_NUMBER;
      hash = (53 * hash) + getLabelsList().hashCode();
    }
    if (getTokensCount() > 0) {
      hash = (37 * hash) + TOKENS_FIELD_NUMBER;
      hash = (53 * hash) + getTokensList().hashCode();
    }
    if (!internalGetExposedAreaMeta().getMap().isEmpty()) {
      hash = (37 * hash) + EXPOSED_AREA_META_FIELD_NUMBER;
      hash = (53 * hash) + internalGetExposedAreaMeta().hashCode();
    }
    if (hasInitiative()) {
      hash = (37 * hash) + INITIATIVE_FIELD_NUMBER;
      hash = (53 * hash) + getInitiative().hashCode();
    }
    if (hasExposedArea()) {
      hash = (37 * hash) + EXPOSED_AREA_FIELD_NUMBER;
      hash = (53 * hash) + getExposedArea().hashCode();
    }
    hash = (37 * hash) + HAS_FOG_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getHasFog());
    if (hasFogPaint()) {
      hash = (37 * hash) + FOG_PAINT_FIELD_NUMBER;
      hash = (53 * hash) + getFogPaint().hashCode();
    }
    if (hasTopology()) {
      hash = (37 * hash) + TOPOLOGY_FIELD_NUMBER;
      hash = (53 * hash) + getTopology().hashCode();
    }
    if (hasHillVbl()) {
      hash = (37 * hash) + HILL_VBL_FIELD_NUMBER;
      hash = (53 * hash) + getHillVbl().hashCode();
    }
    if (hasPitVbl()) {
      hash = (37 * hash) + PIT_VBL_FIELD_NUMBER;
      hash = (53 * hash) + getPitVbl().hashCode();
    }
    if (hasTopologyTerrain()) {
      hash = (37 * hash) + TOPOLOGY_TERRAIN_FIELD_NUMBER;
      hash = (53 * hash) + getTopologyTerrain().hashCode();
    }
    if (hasBackgroundPaint()) {
      hash = (37 * hash) + BACKGROUND_PAINT_FIELD_NUMBER;
      hash = (53 * hash) + getBackgroundPaint().hashCode();
    }
    if (hasMapAsset()) {
      hash = (37 * hash) + MAP_ASSET_FIELD_NUMBER;
      hash = (53 * hash) + getMapAsset().hashCode();
    }
    if (hasBoardPosition()) {
      hash = (37 * hash) + BOARDPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getBoardPosition().hashCode();
    }
    hash = (37 * hash) + DRAW_BOARD_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDrawBoard());
    hash = (37 * hash) + BOARDCHANGED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getBoardChanged());
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasPlayerAlias()) {
      hash = (37 * hash) + PLAYER_ALIAS_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerAlias().hashCode();
    }
    hash = (37 * hash) + IS_VISIBLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsVisible());
    hash = (37 * hash) + VISION_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + visionType_;
    hash = (37 * hash) + LIGHTING_STYLE_FIELD_NUMBER;
    hash = (53 * hash) + lightingStyle_;
    hash = (37 * hash) + TOKEN_SELECTION_FIELD_NUMBER;
    hash = (53 * hash) + tokenSelection_;
    hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
    hash = (53 * hash) + getHeight();
    hash = (37 * hash) + WIDTH_FIELD_NUMBER;
    hash = (53 * hash) + getWidth();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static net.rptools.maptool.server.proto.ZoneDto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.ZoneDto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.ZoneDto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.ZoneDto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.ZoneDto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.ZoneDto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.ZoneDto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.ZoneDto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.ZoneDto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.ZoneDto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.ZoneDto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.ZoneDto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(net.rptools.maptool.server.proto.ZoneDto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code maptool.ZoneDto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maptool.ZoneDto)
      net.rptools.maptool.server.proto.ZoneDtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_ZoneDto_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 17:
          return internalGetExposedAreaMeta();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 17:
          return internalGetMutableExposedAreaMeta();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_ZoneDto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.rptools.maptool.server.proto.ZoneDto.class, net.rptools.maptool.server.proto.ZoneDto.Builder.class);
    }

    // Construct using net.rptools.maptool.server.proto.ZoneDto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDrawablesFieldBuilder();
        getGmDrawablesFieldBuilder();
        getObjectDrawablesFieldBuilder();
        getBackgroundDrawablesFieldBuilder();
        getLabelsFieldBuilder();
        getTokensFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      creationTime_ = 0L;

      id_ = "";

      if (gridBuilder_ == null) {
        grid_ = null;
      } else {
        grid_ = null;
        gridBuilder_ = null;
      }
      gridColor_ = 0;

      imageScaleX_ = 0F;

      imageScaleY_ = 0F;

      tokenVisionDistance_ = 0;

      unitsPerCell_ = 0D;

      aStarRounding_ = 0;

      topologyTypes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      if (drawablesBuilder_ == null) {
        drawables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        drawablesBuilder_.clear();
      }
      if (gmDrawablesBuilder_ == null) {
        gmDrawables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        gmDrawablesBuilder_.clear();
      }
      if (objectDrawablesBuilder_ == null) {
        objectDrawables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        objectDrawablesBuilder_.clear();
      }
      if (backgroundDrawablesBuilder_ == null) {
        backgroundDrawables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        backgroundDrawablesBuilder_.clear();
      }
      if (labelsBuilder_ == null) {
        labels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        labelsBuilder_.clear();
      }
      if (tokensBuilder_ == null) {
        tokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        tokensBuilder_.clear();
      }
      internalGetMutableExposedAreaMeta().clear();
      if (initiativeBuilder_ == null) {
        initiative_ = null;
      } else {
        initiative_ = null;
        initiativeBuilder_ = null;
      }
      if (exposedAreaBuilder_ == null) {
        exposedArea_ = null;
      } else {
        exposedArea_ = null;
        exposedAreaBuilder_ = null;
      }
      hasFog_ = false;

      if (fogPaintBuilder_ == null) {
        fogPaint_ = null;
      } else {
        fogPaint_ = null;
        fogPaintBuilder_ = null;
      }
      if (topologyBuilder_ == null) {
        topology_ = null;
      } else {
        topology_ = null;
        topologyBuilder_ = null;
      }
      if (hillVblBuilder_ == null) {
        hillVbl_ = null;
      } else {
        hillVbl_ = null;
        hillVblBuilder_ = null;
      }
      if (pitVblBuilder_ == null) {
        pitVbl_ = null;
      } else {
        pitVbl_ = null;
        pitVblBuilder_ = null;
      }
      if (topologyTerrainBuilder_ == null) {
        topologyTerrain_ = null;
      } else {
        topologyTerrain_ = null;
        topologyTerrainBuilder_ = null;
      }
      if (backgroundPaintBuilder_ == null) {
        backgroundPaint_ = null;
      } else {
        backgroundPaint_ = null;
        backgroundPaintBuilder_ = null;
      }
      if (mapAssetBuilder_ == null) {
        mapAsset_ = null;
      } else {
        mapAsset_ = null;
        mapAssetBuilder_ = null;
      }
      if (boardPositionBuilder_ == null) {
        boardPosition_ = null;
      } else {
        boardPosition_ = null;
        boardPositionBuilder_ = null;
      }
      drawBoard_ = false;

      boardChanged_ = false;

      name_ = "";

      if (playerAliasBuilder_ == null) {
        playerAlias_ = null;
      } else {
        playerAlias_ = null;
        playerAliasBuilder_ = null;
      }
      isVisible_ = false;

      visionType_ = 0;

      lightingStyle_ = 0;

      tokenSelection_ = 0;

      height_ = 0;

      width_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_ZoneDto_descriptor;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.ZoneDto getDefaultInstanceForType() {
      return net.rptools.maptool.server.proto.ZoneDto.getDefaultInstance();
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.ZoneDto build() {
      net.rptools.maptool.server.proto.ZoneDto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.ZoneDto buildPartial() {
      net.rptools.maptool.server.proto.ZoneDto result = new net.rptools.maptool.server.proto.ZoneDto(this);
      int from_bitField0_ = bitField0_;
      result.creationTime_ = creationTime_;
      result.id_ = id_;
      if (gridBuilder_ == null) {
        result.grid_ = grid_;
      } else {
        result.grid_ = gridBuilder_.build();
      }
      result.gridColor_ = gridColor_;
      result.imageScaleX_ = imageScaleX_;
      result.imageScaleY_ = imageScaleY_;
      result.tokenVisionDistance_ = tokenVisionDistance_;
      result.unitsPerCell_ = unitsPerCell_;
      result.aStarRounding_ = aStarRounding_;
      if (((bitField0_ & 0x00000001) != 0)) {
        topologyTypes_ = java.util.Collections.unmodifiableList(topologyTypes_);
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.topologyTypes_ = topologyTypes_;
      if (drawablesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          drawables_ = java.util.Collections.unmodifiableList(drawables_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.drawables_ = drawables_;
      } else {
        result.drawables_ = drawablesBuilder_.build();
      }
      if (gmDrawablesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          gmDrawables_ = java.util.Collections.unmodifiableList(gmDrawables_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.gmDrawables_ = gmDrawables_;
      } else {
        result.gmDrawables_ = gmDrawablesBuilder_.build();
      }
      if (objectDrawablesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          objectDrawables_ = java.util.Collections.unmodifiableList(objectDrawables_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.objectDrawables_ = objectDrawables_;
      } else {
        result.objectDrawables_ = objectDrawablesBuilder_.build();
      }
      if (backgroundDrawablesBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          backgroundDrawables_ = java.util.Collections.unmodifiableList(backgroundDrawables_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.backgroundDrawables_ = backgroundDrawables_;
      } else {
        result.backgroundDrawables_ = backgroundDrawablesBuilder_.build();
      }
      if (labelsBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          labels_ = java.util.Collections.unmodifiableList(labels_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.labels_ = labels_;
      } else {
        result.labels_ = labelsBuilder_.build();
      }
      if (tokensBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          tokens_ = java.util.Collections.unmodifiableList(tokens_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.tokens_ = tokens_;
      } else {
        result.tokens_ = tokensBuilder_.build();
      }
      result.exposedAreaMeta_ = internalGetExposedAreaMeta();
      result.exposedAreaMeta_.makeImmutable();
      if (initiativeBuilder_ == null) {
        result.initiative_ = initiative_;
      } else {
        result.initiative_ = initiativeBuilder_.build();
      }
      if (exposedAreaBuilder_ == null) {
        result.exposedArea_ = exposedArea_;
      } else {
        result.exposedArea_ = exposedAreaBuilder_.build();
      }
      result.hasFog_ = hasFog_;
      if (fogPaintBuilder_ == null) {
        result.fogPaint_ = fogPaint_;
      } else {
        result.fogPaint_ = fogPaintBuilder_.build();
      }
      if (topologyBuilder_ == null) {
        result.topology_ = topology_;
      } else {
        result.topology_ = topologyBuilder_.build();
      }
      if (hillVblBuilder_ == null) {
        result.hillVbl_ = hillVbl_;
      } else {
        result.hillVbl_ = hillVblBuilder_.build();
      }
      if (pitVblBuilder_ == null) {
        result.pitVbl_ = pitVbl_;
      } else {
        result.pitVbl_ = pitVblBuilder_.build();
      }
      if (topologyTerrainBuilder_ == null) {
        result.topologyTerrain_ = topologyTerrain_;
      } else {
        result.topologyTerrain_ = topologyTerrainBuilder_.build();
      }
      if (backgroundPaintBuilder_ == null) {
        result.backgroundPaint_ = backgroundPaint_;
      } else {
        result.backgroundPaint_ = backgroundPaintBuilder_.build();
      }
      if (mapAssetBuilder_ == null) {
        result.mapAsset_ = mapAsset_;
      } else {
        result.mapAsset_ = mapAssetBuilder_.build();
      }
      if (boardPositionBuilder_ == null) {
        result.boardPosition_ = boardPosition_;
      } else {
        result.boardPosition_ = boardPositionBuilder_.build();
      }
      result.drawBoard_ = drawBoard_;
      result.boardChanged_ = boardChanged_;
      result.name_ = name_;
      if (playerAliasBuilder_ == null) {
        result.playerAlias_ = playerAlias_;
      } else {
        result.playerAlias_ = playerAliasBuilder_.build();
      }
      result.isVisible_ = isVisible_;
      result.visionType_ = visionType_;
      result.lightingStyle_ = lightingStyle_;
      result.tokenSelection_ = tokenSelection_;
      result.height_ = height_;
      result.width_ = width_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof net.rptools.maptool.server.proto.ZoneDto) {
        return mergeFrom((net.rptools.maptool.server.proto.ZoneDto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(net.rptools.maptool.server.proto.ZoneDto other) {
      if (other == net.rptools.maptool.server.proto.ZoneDto.getDefaultInstance()) return this;
      if (other.getCreationTime() != 0L) {
        setCreationTime(other.getCreationTime());
      }
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (other.hasGrid()) {
        mergeGrid(other.getGrid());
      }
      if (other.getGridColor() != 0) {
        setGridColor(other.getGridColor());
      }
      if (other.getImageScaleX() != 0F) {
        setImageScaleX(other.getImageScaleX());
      }
      if (other.getImageScaleY() != 0F) {
        setImageScaleY(other.getImageScaleY());
      }
      if (other.getTokenVisionDistance() != 0) {
        setTokenVisionDistance(other.getTokenVisionDistance());
      }
      if (other.getUnitsPerCell() != 0D) {
        setUnitsPerCell(other.getUnitsPerCell());
      }
      if (other.aStarRounding_ != 0) {
        setAStarRoundingValue(other.getAStarRoundingValue());
      }
      if (!other.topologyTypes_.isEmpty()) {
        if (topologyTypes_.isEmpty()) {
          topologyTypes_ = other.topologyTypes_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureTopologyTypesIsMutable();
          topologyTypes_.addAll(other.topologyTypes_);
        }
        onChanged();
      }
      if (drawablesBuilder_ == null) {
        if (!other.drawables_.isEmpty()) {
          if (drawables_.isEmpty()) {
            drawables_ = other.drawables_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDrawablesIsMutable();
            drawables_.addAll(other.drawables_);
          }
          onChanged();
        }
      } else {
        if (!other.drawables_.isEmpty()) {
          if (drawablesBuilder_.isEmpty()) {
            drawablesBuilder_.dispose();
            drawablesBuilder_ = null;
            drawables_ = other.drawables_;
            bitField0_ = (bitField0_ & ~0x00000002);
            drawablesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDrawablesFieldBuilder() : null;
          } else {
            drawablesBuilder_.addAllMessages(other.drawables_);
          }
        }
      }
      if (gmDrawablesBuilder_ == null) {
        if (!other.gmDrawables_.isEmpty()) {
          if (gmDrawables_.isEmpty()) {
            gmDrawables_ = other.gmDrawables_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureGmDrawablesIsMutable();
            gmDrawables_.addAll(other.gmDrawables_);
          }
          onChanged();
        }
      } else {
        if (!other.gmDrawables_.isEmpty()) {
          if (gmDrawablesBuilder_.isEmpty()) {
            gmDrawablesBuilder_.dispose();
            gmDrawablesBuilder_ = null;
            gmDrawables_ = other.gmDrawables_;
            bitField0_ = (bitField0_ & ~0x00000004);
            gmDrawablesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGmDrawablesFieldBuilder() : null;
          } else {
            gmDrawablesBuilder_.addAllMessages(other.gmDrawables_);
          }
        }
      }
      if (objectDrawablesBuilder_ == null) {
        if (!other.objectDrawables_.isEmpty()) {
          if (objectDrawables_.isEmpty()) {
            objectDrawables_ = other.objectDrawables_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureObjectDrawablesIsMutable();
            objectDrawables_.addAll(other.objectDrawables_);
          }
          onChanged();
        }
      } else {
        if (!other.objectDrawables_.isEmpty()) {
          if (objectDrawablesBuilder_.isEmpty()) {
            objectDrawablesBuilder_.dispose();
            objectDrawablesBuilder_ = null;
            objectDrawables_ = other.objectDrawables_;
            bitField0_ = (bitField0_ & ~0x00000008);
            objectDrawablesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getObjectDrawablesFieldBuilder() : null;
          } else {
            objectDrawablesBuilder_.addAllMessages(other.objectDrawables_);
          }
        }
      }
      if (backgroundDrawablesBuilder_ == null) {
        if (!other.backgroundDrawables_.isEmpty()) {
          if (backgroundDrawables_.isEmpty()) {
            backgroundDrawables_ = other.backgroundDrawables_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureBackgroundDrawablesIsMutable();
            backgroundDrawables_.addAll(other.backgroundDrawables_);
          }
          onChanged();
        }
      } else {
        if (!other.backgroundDrawables_.isEmpty()) {
          if (backgroundDrawablesBuilder_.isEmpty()) {
            backgroundDrawablesBuilder_.dispose();
            backgroundDrawablesBuilder_ = null;
            backgroundDrawables_ = other.backgroundDrawables_;
            bitField0_ = (bitField0_ & ~0x00000010);
            backgroundDrawablesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBackgroundDrawablesFieldBuilder() : null;
          } else {
            backgroundDrawablesBuilder_.addAllMessages(other.backgroundDrawables_);
          }
        }
      }
      if (labelsBuilder_ == null) {
        if (!other.labels_.isEmpty()) {
          if (labels_.isEmpty()) {
            labels_ = other.labels_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureLabelsIsMutable();
            labels_.addAll(other.labels_);
          }
          onChanged();
        }
      } else {
        if (!other.labels_.isEmpty()) {
          if (labelsBuilder_.isEmpty()) {
            labelsBuilder_.dispose();
            labelsBuilder_ = null;
            labels_ = other.labels_;
            bitField0_ = (bitField0_ & ~0x00000020);
            labelsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLabelsFieldBuilder() : null;
          } else {
            labelsBuilder_.addAllMessages(other.labels_);
          }
        }
      }
      if (tokensBuilder_ == null) {
        if (!other.tokens_.isEmpty()) {
          if (tokens_.isEmpty()) {
            tokens_ = other.tokens_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureTokensIsMutable();
            tokens_.addAll(other.tokens_);
          }
          onChanged();
        }
      } else {
        if (!other.tokens_.isEmpty()) {
          if (tokensBuilder_.isEmpty()) {
            tokensBuilder_.dispose();
            tokensBuilder_ = null;
            tokens_ = other.tokens_;
            bitField0_ = (bitField0_ & ~0x00000040);
            tokensBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTokensFieldBuilder() : null;
          } else {
            tokensBuilder_.addAllMessages(other.tokens_);
          }
        }
      }
      internalGetMutableExposedAreaMeta().mergeFrom(
          other.internalGetExposedAreaMeta());
      if (other.hasInitiative()) {
        mergeInitiative(other.getInitiative());
      }
      if (other.hasExposedArea()) {
        mergeExposedArea(other.getExposedArea());
      }
      if (other.getHasFog() != false) {
        setHasFog(other.getHasFog());
      }
      if (other.hasFogPaint()) {
        mergeFogPaint(other.getFogPaint());
      }
      if (other.hasTopology()) {
        mergeTopology(other.getTopology());
      }
      if (other.hasHillVbl()) {
        mergeHillVbl(other.getHillVbl());
      }
      if (other.hasPitVbl()) {
        mergePitVbl(other.getPitVbl());
      }
      if (other.hasTopologyTerrain()) {
        mergeTopologyTerrain(other.getTopologyTerrain());
      }
      if (other.hasBackgroundPaint()) {
        mergeBackgroundPaint(other.getBackgroundPaint());
      }
      if (other.hasMapAsset()) {
        mergeMapAsset(other.getMapAsset());
      }
      if (other.hasBoardPosition()) {
        mergeBoardPosition(other.getBoardPosition());
      }
      if (other.getDrawBoard() != false) {
        setDrawBoard(other.getDrawBoard());
      }
      if (other.getBoardChanged() != false) {
        setBoardChanged(other.getBoardChanged());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.hasPlayerAlias()) {
        mergePlayerAlias(other.getPlayerAlias());
      }
      if (other.getIsVisible() != false) {
        setIsVisible(other.getIsVisible());
      }
      if (other.visionType_ != 0) {
        setVisionTypeValue(other.getVisionTypeValue());
      }
      if (other.lightingStyle_ != 0) {
        setLightingStyleValue(other.getLightingStyleValue());
      }
      if (other.tokenSelection_ != 0) {
        setTokenSelectionValue(other.getTokenSelectionValue());
      }
      if (other.getHeight() != 0) {
        setHeight(other.getHeight());
      }
      if (other.getWidth() != 0) {
        setWidth(other.getWidth());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      net.rptools.maptool.server.proto.ZoneDto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (net.rptools.maptool.server.proto.ZoneDto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long creationTime_ ;
    /**
     * <code>int64 creation_time = 1;</code>
     * @return The creationTime.
     */
    @java.lang.Override
    public long getCreationTime() {
      return creationTime_;
    }
    /**
     * <code>int64 creation_time = 1;</code>
     * @param value The creationTime to set.
     * @return This builder for chaining.
     */
    public Builder setCreationTime(long value) {
      
      creationTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 creation_time = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCreationTime() {
      
      creationTime_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     * <code>string id = 2;</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string id = 2;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string id = 2;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <code>string id = 2;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private net.rptools.maptool.server.proto.GridDto grid_;
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.GridDto, net.rptools.maptool.server.proto.GridDto.Builder, net.rptools.maptool.server.proto.GridDtoOrBuilder> gridBuilder_;
    /**
     * <code>.maptool.GridDto grid = 3;</code>
     * @return Whether the grid field is set.
     */
    public boolean hasGrid() {
      return gridBuilder_ != null || grid_ != null;
    }
    /**
     * <code>.maptool.GridDto grid = 3;</code>
     * @return The grid.
     */
    public net.rptools.maptool.server.proto.GridDto getGrid() {
      if (gridBuilder_ == null) {
        return grid_ == null ? net.rptools.maptool.server.proto.GridDto.getDefaultInstance() : grid_;
      } else {
        return gridBuilder_.getMessage();
      }
    }
    /**
     * <code>.maptool.GridDto grid = 3;</code>
     */
    public Builder setGrid(net.rptools.maptool.server.proto.GridDto value) {
      if (gridBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        grid_ = value;
        onChanged();
      } else {
        gridBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.maptool.GridDto grid = 3;</code>
     */
    public Builder setGrid(
        net.rptools.maptool.server.proto.GridDto.Builder builderForValue) {
      if (gridBuilder_ == null) {
        grid_ = builderForValue.build();
        onChanged();
      } else {
        gridBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.maptool.GridDto grid = 3;</code>
     */
    public Builder mergeGrid(net.rptools.maptool.server.proto.GridDto value) {
      if (gridBuilder_ == null) {
        if (grid_ != null) {
          grid_ =
            net.rptools.maptool.server.proto.GridDto.newBuilder(grid_).mergeFrom(value).buildPartial();
        } else {
          grid_ = value;
        }
        onChanged();
      } else {
        gridBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.maptool.GridDto grid = 3;</code>
     */
    public Builder clearGrid() {
      if (gridBuilder_ == null) {
        grid_ = null;
        onChanged();
      } else {
        grid_ = null;
        gridBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.maptool.GridDto grid = 3;</code>
     */
    public net.rptools.maptool.server.proto.GridDto.Builder getGridBuilder() {
      
      onChanged();
      return getGridFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.GridDto grid = 3;</code>
     */
    public net.rptools.maptool.server.proto.GridDtoOrBuilder getGridOrBuilder() {
      if (gridBuilder_ != null) {
        return gridBuilder_.getMessageOrBuilder();
      } else {
        return grid_ == null ?
            net.rptools.maptool.server.proto.GridDto.getDefaultInstance() : grid_;
      }
    }
    /**
     * <code>.maptool.GridDto grid = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.GridDto, net.rptools.maptool.server.proto.GridDto.Builder, net.rptools.maptool.server.proto.GridDtoOrBuilder> 
        getGridFieldBuilder() {
      if (gridBuilder_ == null) {
        gridBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.GridDto, net.rptools.maptool.server.proto.GridDto.Builder, net.rptools.maptool.server.proto.GridDtoOrBuilder>(
                getGrid(),
                getParentForChildren(),
                isClean());
        grid_ = null;
      }
      return gridBuilder_;
    }

    private int gridColor_ ;
    /**
     * <code>int32 grid_color = 4;</code>
     * @return The gridColor.
     */
    @java.lang.Override
    public int getGridColor() {
      return gridColor_;
    }
    /**
     * <code>int32 grid_color = 4;</code>
     * @param value The gridColor to set.
     * @return This builder for chaining.
     */
    public Builder setGridColor(int value) {
      
      gridColor_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 grid_color = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearGridColor() {
      
      gridColor_ = 0;
      onChanged();
      return this;
    }

    private float imageScaleX_ ;
    /**
     * <code>float image_scale_x = 5;</code>
     * @return The imageScaleX.
     */
    @java.lang.Override
    public float getImageScaleX() {
      return imageScaleX_;
    }
    /**
     * <code>float image_scale_x = 5;</code>
     * @param value The imageScaleX to set.
     * @return This builder for chaining.
     */
    public Builder setImageScaleX(float value) {
      
      imageScaleX_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float image_scale_x = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearImageScaleX() {
      
      imageScaleX_ = 0F;
      onChanged();
      return this;
    }

    private float imageScaleY_ ;
    /**
     * <code>float image_scale_y = 6;</code>
     * @return The imageScaleY.
     */
    @java.lang.Override
    public float getImageScaleY() {
      return imageScaleY_;
    }
    /**
     * <code>float image_scale_y = 6;</code>
     * @param value The imageScaleY to set.
     * @return This builder for chaining.
     */
    public Builder setImageScaleY(float value) {
      
      imageScaleY_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float image_scale_y = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearImageScaleY() {
      
      imageScaleY_ = 0F;
      onChanged();
      return this;
    }

    private int tokenVisionDistance_ ;
    /**
     * <code>int32 token_vision_distance = 7;</code>
     * @return The tokenVisionDistance.
     */
    @java.lang.Override
    public int getTokenVisionDistance() {
      return tokenVisionDistance_;
    }
    /**
     * <code>int32 token_vision_distance = 7;</code>
     * @param value The tokenVisionDistance to set.
     * @return This builder for chaining.
     */
    public Builder setTokenVisionDistance(int value) {
      
      tokenVisionDistance_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 token_vision_distance = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearTokenVisionDistance() {
      
      tokenVisionDistance_ = 0;
      onChanged();
      return this;
    }

    private double unitsPerCell_ ;
    /**
     * <code>double units_per_cell = 8;</code>
     * @return The unitsPerCell.
     */
    @java.lang.Override
    public double getUnitsPerCell() {
      return unitsPerCell_;
    }
    /**
     * <code>double units_per_cell = 8;</code>
     * @param value The unitsPerCell to set.
     * @return This builder for chaining.
     */
    public Builder setUnitsPerCell(double value) {
      
      unitsPerCell_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double units_per_cell = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearUnitsPerCell() {
      
      unitsPerCell_ = 0D;
      onChanged();
      return this;
    }

    private int aStarRounding_ = 0;
    /**
     * <code>.maptool.ZoneDto.AStarRoundingOptionsDto a_star_rounding = 9;</code>
     * @return The enum numeric value on the wire for aStarRounding.
     */
    @java.lang.Override public int getAStarRoundingValue() {
      return aStarRounding_;
    }
    /**
     * <code>.maptool.ZoneDto.AStarRoundingOptionsDto a_star_rounding = 9;</code>
     * @param value The enum numeric value on the wire for aStarRounding to set.
     * @return This builder for chaining.
     */
    public Builder setAStarRoundingValue(int value) {
      
      aStarRounding_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.ZoneDto.AStarRoundingOptionsDto a_star_rounding = 9;</code>
     * @return The aStarRounding.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.ZoneDto.AStarRoundingOptionsDto getAStarRounding() {
      @SuppressWarnings("deprecation")
      net.rptools.maptool.server.proto.ZoneDto.AStarRoundingOptionsDto result = net.rptools.maptool.server.proto.ZoneDto.AStarRoundingOptionsDto.valueOf(aStarRounding_);
      return result == null ? net.rptools.maptool.server.proto.ZoneDto.AStarRoundingOptionsDto.UNRECOGNIZED : result;
    }
    /**
     * <code>.maptool.ZoneDto.AStarRoundingOptionsDto a_star_rounding = 9;</code>
     * @param value The aStarRounding to set.
     * @return This builder for chaining.
     */
    public Builder setAStarRounding(net.rptools.maptool.server.proto.ZoneDto.AStarRoundingOptionsDto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      aStarRounding_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.ZoneDto.AStarRoundingOptionsDto a_star_rounding = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearAStarRounding() {
      
      aStarRounding_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> topologyTypes_ =
      java.util.Collections.emptyList();
    private void ensureTopologyTypesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        topologyTypes_ = new java.util.ArrayList<java.lang.Integer>(topologyTypes_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
     * @return A list containing the topologyTypes.
     */
    public java.util.List<net.rptools.maptool.server.proto.TopologyTypeDto> getTopologyTypesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, net.rptools.maptool.server.proto.TopologyTypeDto>(topologyTypes_, topologyTypes_converter_);
    }
    /**
     * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
     * @return The count of topologyTypes.
     */
    public int getTopologyTypesCount() {
      return topologyTypes_.size();
    }
    /**
     * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
     * @param index The index of the element to return.
     * @return The topologyTypes at the given index.
     */
    public net.rptools.maptool.server.proto.TopologyTypeDto getTopologyTypes(int index) {
      return topologyTypes_converter_.convert(topologyTypes_.get(index));
    }
    /**
     * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
     * @param index The index to set the value at.
     * @param value The topologyTypes to set.
     * @return This builder for chaining.
     */
    public Builder setTopologyTypes(
        int index, net.rptools.maptool.server.proto.TopologyTypeDto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTopologyTypesIsMutable();
      topologyTypes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
     * @param value The topologyTypes to add.
     * @return This builder for chaining.
     */
    public Builder addTopologyTypes(net.rptools.maptool.server.proto.TopologyTypeDto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTopologyTypesIsMutable();
      topologyTypes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
     * @param values The topologyTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllTopologyTypes(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.TopologyTypeDto> values) {
      ensureTopologyTypesIsMutable();
      for (net.rptools.maptool.server.proto.TopologyTypeDto value : values) {
        topologyTypes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearTopologyTypes() {
      topologyTypes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
     * @return A list containing the enum numeric values on the wire for topologyTypes.
     */
    public java.util.List<java.lang.Integer>
    getTopologyTypesValueList() {
      return java.util.Collections.unmodifiableList(topologyTypes_);
    }
    /**
     * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of topologyTypes at the given index.
     */
    public int getTopologyTypesValue(int index) {
      return topologyTypes_.get(index);
    }
    /**
     * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of topologyTypes at the given index.
     * @return This builder for chaining.
     */
    public Builder setTopologyTypesValue(
        int index, int value) {
      ensureTopologyTypesIsMutable();
      topologyTypes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
     * @param value The enum numeric value on the wire for topologyTypes to add.
     * @return This builder for chaining.
     */
    public Builder addTopologyTypesValue(int value) {
      ensureTopologyTypesIsMutable();
      topologyTypes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .maptool.TopologyTypeDto topologyTypes = 10;</code>
     * @param values The enum numeric values on the wire for topologyTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllTopologyTypesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureTopologyTypesIsMutable();
      for (int value : values) {
        topologyTypes_.add(value);
      }
      onChanged();
      return this;
    }

    private java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> drawables_ =
      java.util.Collections.emptyList();
    private void ensureDrawablesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        drawables_ = new java.util.ArrayList<net.rptools.maptool.server.proto.drawing.DrawnElementDto>(drawables_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.DrawnElementDto, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder, net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> drawablesBuilder_;

    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> getDrawablesList() {
      if (drawablesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(drawables_);
      } else {
        return drawablesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public int getDrawablesCount() {
      if (drawablesBuilder_ == null) {
        return drawables_.size();
      } else {
        return drawablesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto getDrawables(int index) {
      if (drawablesBuilder_ == null) {
        return drawables_.get(index);
      } else {
        return drawablesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public Builder setDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto value) {
      if (drawablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDrawablesIsMutable();
        drawables_.set(index, value);
        onChanged();
      } else {
        drawablesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public Builder setDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder builderForValue) {
      if (drawablesBuilder_ == null) {
        ensureDrawablesIsMutable();
        drawables_.set(index, builderForValue.build());
        onChanged();
      } else {
        drawablesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public Builder addDrawables(net.rptools.maptool.server.proto.drawing.DrawnElementDto value) {
      if (drawablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDrawablesIsMutable();
        drawables_.add(value);
        onChanged();
      } else {
        drawablesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public Builder addDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto value) {
      if (drawablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDrawablesIsMutable();
        drawables_.add(index, value);
        onChanged();
      } else {
        drawablesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public Builder addDrawables(
        net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder builderForValue) {
      if (drawablesBuilder_ == null) {
        ensureDrawablesIsMutable();
        drawables_.add(builderForValue.build());
        onChanged();
      } else {
        drawablesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public Builder addDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder builderForValue) {
      if (drawablesBuilder_ == null) {
        ensureDrawablesIsMutable();
        drawables_.add(index, builderForValue.build());
        onChanged();
      } else {
        drawablesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public Builder addAllDrawables(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.drawing.DrawnElementDto> values) {
      if (drawablesBuilder_ == null) {
        ensureDrawablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, drawables_);
        onChanged();
      } else {
        drawablesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public Builder clearDrawables() {
      if (drawablesBuilder_ == null) {
        drawables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        drawablesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public Builder removeDrawables(int index) {
      if (drawablesBuilder_ == null) {
        ensureDrawablesIsMutable();
        drawables_.remove(index);
        onChanged();
      } else {
        drawablesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder getDrawablesBuilder(
        int index) {
      return getDrawablesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder getDrawablesOrBuilder(
        int index) {
      if (drawablesBuilder_ == null) {
        return drawables_.get(index);  } else {
        return drawablesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> 
         getDrawablesOrBuilderList() {
      if (drawablesBuilder_ != null) {
        return drawablesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(drawables_);
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder addDrawablesBuilder() {
      return getDrawablesFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.drawing.DrawnElementDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder addDrawablesBuilder(
        int index) {
      return getDrawablesFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.drawing.DrawnElementDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.DrawnElementDto drawables = 11;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder> 
         getDrawablesBuilderList() {
      return getDrawablesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.DrawnElementDto, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder, net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> 
        getDrawablesFieldBuilder() {
      if (drawablesBuilder_ == null) {
        drawablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.DrawnElementDto, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder, net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder>(
                drawables_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        drawables_ = null;
      }
      return drawablesBuilder_;
    }

    private java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> gmDrawables_ =
      java.util.Collections.emptyList();
    private void ensureGmDrawablesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        gmDrawables_ = new java.util.ArrayList<net.rptools.maptool.server.proto.drawing.DrawnElementDto>(gmDrawables_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.DrawnElementDto, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder, net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> gmDrawablesBuilder_;

    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> getGmDrawablesList() {
      if (gmDrawablesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(gmDrawables_);
      } else {
        return gmDrawablesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public int getGmDrawablesCount() {
      if (gmDrawablesBuilder_ == null) {
        return gmDrawables_.size();
      } else {
        return gmDrawablesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto getGmDrawables(int index) {
      if (gmDrawablesBuilder_ == null) {
        return gmDrawables_.get(index);
      } else {
        return gmDrawablesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public Builder setGmDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto value) {
      if (gmDrawablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGmDrawablesIsMutable();
        gmDrawables_.set(index, value);
        onChanged();
      } else {
        gmDrawablesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public Builder setGmDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder builderForValue) {
      if (gmDrawablesBuilder_ == null) {
        ensureGmDrawablesIsMutable();
        gmDrawables_.set(index, builderForValue.build());
        onChanged();
      } else {
        gmDrawablesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public Builder addGmDrawables(net.rptools.maptool.server.proto.drawing.DrawnElementDto value) {
      if (gmDrawablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGmDrawablesIsMutable();
        gmDrawables_.add(value);
        onChanged();
      } else {
        gmDrawablesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public Builder addGmDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto value) {
      if (gmDrawablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGmDrawablesIsMutable();
        gmDrawables_.add(index, value);
        onChanged();
      } else {
        gmDrawablesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public Builder addGmDrawables(
        net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder builderForValue) {
      if (gmDrawablesBuilder_ == null) {
        ensureGmDrawablesIsMutable();
        gmDrawables_.add(builderForValue.build());
        onChanged();
      } else {
        gmDrawablesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public Builder addGmDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder builderForValue) {
      if (gmDrawablesBuilder_ == null) {
        ensureGmDrawablesIsMutable();
        gmDrawables_.add(index, builderForValue.build());
        onChanged();
      } else {
        gmDrawablesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public Builder addAllGmDrawables(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.drawing.DrawnElementDto> values) {
      if (gmDrawablesBuilder_ == null) {
        ensureGmDrawablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, gmDrawables_);
        onChanged();
      } else {
        gmDrawablesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public Builder clearGmDrawables() {
      if (gmDrawablesBuilder_ == null) {
        gmDrawables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        gmDrawablesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public Builder removeGmDrawables(int index) {
      if (gmDrawablesBuilder_ == null) {
        ensureGmDrawablesIsMutable();
        gmDrawables_.remove(index);
        onChanged();
      } else {
        gmDrawablesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder getGmDrawablesBuilder(
        int index) {
      return getGmDrawablesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder getGmDrawablesOrBuilder(
        int index) {
      if (gmDrawablesBuilder_ == null) {
        return gmDrawables_.get(index);  } else {
        return gmDrawablesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> 
         getGmDrawablesOrBuilderList() {
      if (gmDrawablesBuilder_ != null) {
        return gmDrawablesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(gmDrawables_);
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder addGmDrawablesBuilder() {
      return getGmDrawablesFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.drawing.DrawnElementDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder addGmDrawablesBuilder(
        int index) {
      return getGmDrawablesFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.drawing.DrawnElementDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.DrawnElementDto gm_drawables = 12;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder> 
         getGmDrawablesBuilderList() {
      return getGmDrawablesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.DrawnElementDto, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder, net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> 
        getGmDrawablesFieldBuilder() {
      if (gmDrawablesBuilder_ == null) {
        gmDrawablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.DrawnElementDto, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder, net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder>(
                gmDrawables_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        gmDrawables_ = null;
      }
      return gmDrawablesBuilder_;
    }

    private java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> objectDrawables_ =
      java.util.Collections.emptyList();
    private void ensureObjectDrawablesIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        objectDrawables_ = new java.util.ArrayList<net.rptools.maptool.server.proto.drawing.DrawnElementDto>(objectDrawables_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.DrawnElementDto, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder, net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> objectDrawablesBuilder_;

    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> getObjectDrawablesList() {
      if (objectDrawablesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(objectDrawables_);
      } else {
        return objectDrawablesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public int getObjectDrawablesCount() {
      if (objectDrawablesBuilder_ == null) {
        return objectDrawables_.size();
      } else {
        return objectDrawablesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto getObjectDrawables(int index) {
      if (objectDrawablesBuilder_ == null) {
        return objectDrawables_.get(index);
      } else {
        return objectDrawablesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public Builder setObjectDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto value) {
      if (objectDrawablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureObjectDrawablesIsMutable();
        objectDrawables_.set(index, value);
        onChanged();
      } else {
        objectDrawablesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public Builder setObjectDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder builderForValue) {
      if (objectDrawablesBuilder_ == null) {
        ensureObjectDrawablesIsMutable();
        objectDrawables_.set(index, builderForValue.build());
        onChanged();
      } else {
        objectDrawablesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public Builder addObjectDrawables(net.rptools.maptool.server.proto.drawing.DrawnElementDto value) {
      if (objectDrawablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureObjectDrawablesIsMutable();
        objectDrawables_.add(value);
        onChanged();
      } else {
        objectDrawablesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public Builder addObjectDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto value) {
      if (objectDrawablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureObjectDrawablesIsMutable();
        objectDrawables_.add(index, value);
        onChanged();
      } else {
        objectDrawablesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public Builder addObjectDrawables(
        net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder builderForValue) {
      if (objectDrawablesBuilder_ == null) {
        ensureObjectDrawablesIsMutable();
        objectDrawables_.add(builderForValue.build());
        onChanged();
      } else {
        objectDrawablesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public Builder addObjectDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder builderForValue) {
      if (objectDrawablesBuilder_ == null) {
        ensureObjectDrawablesIsMutable();
        objectDrawables_.add(index, builderForValue.build());
        onChanged();
      } else {
        objectDrawablesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public Builder addAllObjectDrawables(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.drawing.DrawnElementDto> values) {
      if (objectDrawablesBuilder_ == null) {
        ensureObjectDrawablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, objectDrawables_);
        onChanged();
      } else {
        objectDrawablesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public Builder clearObjectDrawables() {
      if (objectDrawablesBuilder_ == null) {
        objectDrawables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        objectDrawablesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public Builder removeObjectDrawables(int index) {
      if (objectDrawablesBuilder_ == null) {
        ensureObjectDrawablesIsMutable();
        objectDrawables_.remove(index);
        onChanged();
      } else {
        objectDrawablesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder getObjectDrawablesBuilder(
        int index) {
      return getObjectDrawablesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder getObjectDrawablesOrBuilder(
        int index) {
      if (objectDrawablesBuilder_ == null) {
        return objectDrawables_.get(index);  } else {
        return objectDrawablesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> 
         getObjectDrawablesOrBuilderList() {
      if (objectDrawablesBuilder_ != null) {
        return objectDrawablesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(objectDrawables_);
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder addObjectDrawablesBuilder() {
      return getObjectDrawablesFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.drawing.DrawnElementDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder addObjectDrawablesBuilder(
        int index) {
      return getObjectDrawablesFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.drawing.DrawnElementDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.DrawnElementDto object_drawables = 13;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder> 
         getObjectDrawablesBuilderList() {
      return getObjectDrawablesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.DrawnElementDto, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder, net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> 
        getObjectDrawablesFieldBuilder() {
      if (objectDrawablesBuilder_ == null) {
        objectDrawablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.DrawnElementDto, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder, net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder>(
                objectDrawables_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        objectDrawables_ = null;
      }
      return objectDrawablesBuilder_;
    }

    private java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> backgroundDrawables_ =
      java.util.Collections.emptyList();
    private void ensureBackgroundDrawablesIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        backgroundDrawables_ = new java.util.ArrayList<net.rptools.maptool.server.proto.drawing.DrawnElementDto>(backgroundDrawables_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.DrawnElementDto, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder, net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> backgroundDrawablesBuilder_;

    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto> getBackgroundDrawablesList() {
      if (backgroundDrawablesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(backgroundDrawables_);
      } else {
        return backgroundDrawablesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public int getBackgroundDrawablesCount() {
      if (backgroundDrawablesBuilder_ == null) {
        return backgroundDrawables_.size();
      } else {
        return backgroundDrawablesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto getBackgroundDrawables(int index) {
      if (backgroundDrawablesBuilder_ == null) {
        return backgroundDrawables_.get(index);
      } else {
        return backgroundDrawablesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public Builder setBackgroundDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto value) {
      if (backgroundDrawablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBackgroundDrawablesIsMutable();
        backgroundDrawables_.set(index, value);
        onChanged();
      } else {
        backgroundDrawablesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public Builder setBackgroundDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder builderForValue) {
      if (backgroundDrawablesBuilder_ == null) {
        ensureBackgroundDrawablesIsMutable();
        backgroundDrawables_.set(index, builderForValue.build());
        onChanged();
      } else {
        backgroundDrawablesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public Builder addBackgroundDrawables(net.rptools.maptool.server.proto.drawing.DrawnElementDto value) {
      if (backgroundDrawablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBackgroundDrawablesIsMutable();
        backgroundDrawables_.add(value);
        onChanged();
      } else {
        backgroundDrawablesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public Builder addBackgroundDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto value) {
      if (backgroundDrawablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBackgroundDrawablesIsMutable();
        backgroundDrawables_.add(index, value);
        onChanged();
      } else {
        backgroundDrawablesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public Builder addBackgroundDrawables(
        net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder builderForValue) {
      if (backgroundDrawablesBuilder_ == null) {
        ensureBackgroundDrawablesIsMutable();
        backgroundDrawables_.add(builderForValue.build());
        onChanged();
      } else {
        backgroundDrawablesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public Builder addBackgroundDrawables(
        int index, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder builderForValue) {
      if (backgroundDrawablesBuilder_ == null) {
        ensureBackgroundDrawablesIsMutable();
        backgroundDrawables_.add(index, builderForValue.build());
        onChanged();
      } else {
        backgroundDrawablesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public Builder addAllBackgroundDrawables(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.drawing.DrawnElementDto> values) {
      if (backgroundDrawablesBuilder_ == null) {
        ensureBackgroundDrawablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, backgroundDrawables_);
        onChanged();
      } else {
        backgroundDrawablesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public Builder clearBackgroundDrawables() {
      if (backgroundDrawablesBuilder_ == null) {
        backgroundDrawables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        backgroundDrawablesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public Builder removeBackgroundDrawables(int index) {
      if (backgroundDrawablesBuilder_ == null) {
        ensureBackgroundDrawablesIsMutable();
        backgroundDrawables_.remove(index);
        onChanged();
      } else {
        backgroundDrawablesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder getBackgroundDrawablesBuilder(
        int index) {
      return getBackgroundDrawablesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder getBackgroundDrawablesOrBuilder(
        int index) {
      if (backgroundDrawablesBuilder_ == null) {
        return backgroundDrawables_.get(index);  } else {
        return backgroundDrawablesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> 
         getBackgroundDrawablesOrBuilderList() {
      if (backgroundDrawablesBuilder_ != null) {
        return backgroundDrawablesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(backgroundDrawables_);
      }
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder addBackgroundDrawablesBuilder() {
      return getBackgroundDrawablesFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.drawing.DrawnElementDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder addBackgroundDrawablesBuilder(
        int index) {
      return getBackgroundDrawablesFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.drawing.DrawnElementDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.DrawnElementDto background_drawables = 14;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder> 
         getBackgroundDrawablesBuilderList() {
      return getBackgroundDrawablesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.DrawnElementDto, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder, net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder> 
        getBackgroundDrawablesFieldBuilder() {
      if (backgroundDrawablesBuilder_ == null) {
        backgroundDrawablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.DrawnElementDto, net.rptools.maptool.server.proto.drawing.DrawnElementDto.Builder, net.rptools.maptool.server.proto.drawing.DrawnElementDtoOrBuilder>(
                backgroundDrawables_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        backgroundDrawables_ = null;
      }
      return backgroundDrawablesBuilder_;
    }

    private java.util.List<net.rptools.maptool.server.proto.LabelDto> labels_ =
      java.util.Collections.emptyList();
    private void ensureLabelsIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        labels_ = new java.util.ArrayList<net.rptools.maptool.server.proto.LabelDto>(labels_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.LabelDto, net.rptools.maptool.server.proto.LabelDto.Builder, net.rptools.maptool.server.proto.LabelDtoOrBuilder> labelsBuilder_;

    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.LabelDto> getLabelsList() {
      if (labelsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(labels_);
      } else {
        return labelsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public int getLabelsCount() {
      if (labelsBuilder_ == null) {
        return labels_.size();
      } else {
        return labelsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public net.rptools.maptool.server.proto.LabelDto getLabels(int index) {
      if (labelsBuilder_ == null) {
        return labels_.get(index);
      } else {
        return labelsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public Builder setLabels(
        int index, net.rptools.maptool.server.proto.LabelDto value) {
      if (labelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLabelsIsMutable();
        labels_.set(index, value);
        onChanged();
      } else {
        labelsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public Builder setLabels(
        int index, net.rptools.maptool.server.proto.LabelDto.Builder builderForValue) {
      if (labelsBuilder_ == null) {
        ensureLabelsIsMutable();
        labels_.set(index, builderForValue.build());
        onChanged();
      } else {
        labelsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public Builder addLabels(net.rptools.maptool.server.proto.LabelDto value) {
      if (labelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLabelsIsMutable();
        labels_.add(value);
        onChanged();
      } else {
        labelsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public Builder addLabels(
        int index, net.rptools.maptool.server.proto.LabelDto value) {
      if (labelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLabelsIsMutable();
        labels_.add(index, value);
        onChanged();
      } else {
        labelsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public Builder addLabels(
        net.rptools.maptool.server.proto.LabelDto.Builder builderForValue) {
      if (labelsBuilder_ == null) {
        ensureLabelsIsMutable();
        labels_.add(builderForValue.build());
        onChanged();
      } else {
        labelsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public Builder addLabels(
        int index, net.rptools.maptool.server.proto.LabelDto.Builder builderForValue) {
      if (labelsBuilder_ == null) {
        ensureLabelsIsMutable();
        labels_.add(index, builderForValue.build());
        onChanged();
      } else {
        labelsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public Builder addAllLabels(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.LabelDto> values) {
      if (labelsBuilder_ == null) {
        ensureLabelsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, labels_);
        onChanged();
      } else {
        labelsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public Builder clearLabels() {
      if (labelsBuilder_ == null) {
        labels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        labelsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public Builder removeLabels(int index) {
      if (labelsBuilder_ == null) {
        ensureLabelsIsMutable();
        labels_.remove(index);
        onChanged();
      } else {
        labelsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public net.rptools.maptool.server.proto.LabelDto.Builder getLabelsBuilder(
        int index) {
      return getLabelsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public net.rptools.maptool.server.proto.LabelDtoOrBuilder getLabelsOrBuilder(
        int index) {
      if (labelsBuilder_ == null) {
        return labels_.get(index);  } else {
        return labelsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.LabelDtoOrBuilder> 
         getLabelsOrBuilderList() {
      if (labelsBuilder_ != null) {
        return labelsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(labels_);
      }
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public net.rptools.maptool.server.proto.LabelDto.Builder addLabelsBuilder() {
      return getLabelsFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.LabelDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public net.rptools.maptool.server.proto.LabelDto.Builder addLabelsBuilder(
        int index) {
      return getLabelsFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.LabelDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.LabelDto labels = 15;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.LabelDto.Builder> 
         getLabelsBuilderList() {
      return getLabelsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.LabelDto, net.rptools.maptool.server.proto.LabelDto.Builder, net.rptools.maptool.server.proto.LabelDtoOrBuilder> 
        getLabelsFieldBuilder() {
      if (labelsBuilder_ == null) {
        labelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.LabelDto, net.rptools.maptool.server.proto.LabelDto.Builder, net.rptools.maptool.server.proto.LabelDtoOrBuilder>(
                labels_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        labels_ = null;
      }
      return labelsBuilder_;
    }

    private java.util.List<net.rptools.maptool.server.proto.TokenDto> tokens_ =
      java.util.Collections.emptyList();
    private void ensureTokensIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        tokens_ = new java.util.ArrayList<net.rptools.maptool.server.proto.TokenDto>(tokens_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.TokenDto, net.rptools.maptool.server.proto.TokenDto.Builder, net.rptools.maptool.server.proto.TokenDtoOrBuilder> tokensBuilder_;

    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.TokenDto> getTokensList() {
      if (tokensBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tokens_);
      } else {
        return tokensBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public int getTokensCount() {
      if (tokensBuilder_ == null) {
        return tokens_.size();
      } else {
        return tokensBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public net.rptools.maptool.server.proto.TokenDto getTokens(int index) {
      if (tokensBuilder_ == null) {
        return tokens_.get(index);
      } else {
        return tokensBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public Builder setTokens(
        int index, net.rptools.maptool.server.proto.TokenDto value) {
      if (tokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokensIsMutable();
        tokens_.set(index, value);
        onChanged();
      } else {
        tokensBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public Builder setTokens(
        int index, net.rptools.maptool.server.proto.TokenDto.Builder builderForValue) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        tokens_.set(index, builderForValue.build());
        onChanged();
      } else {
        tokensBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public Builder addTokens(net.rptools.maptool.server.proto.TokenDto value) {
      if (tokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokensIsMutable();
        tokens_.add(value);
        onChanged();
      } else {
        tokensBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public Builder addTokens(
        int index, net.rptools.maptool.server.proto.TokenDto value) {
      if (tokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokensIsMutable();
        tokens_.add(index, value);
        onChanged();
      } else {
        tokensBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public Builder addTokens(
        net.rptools.maptool.server.proto.TokenDto.Builder builderForValue) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        tokens_.add(builderForValue.build());
        onChanged();
      } else {
        tokensBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public Builder addTokens(
        int index, net.rptools.maptool.server.proto.TokenDto.Builder builderForValue) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        tokens_.add(index, builderForValue.build());
        onChanged();
      } else {
        tokensBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public Builder addAllTokens(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.TokenDto> values) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tokens_);
        onChanged();
      } else {
        tokensBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public Builder clearTokens() {
      if (tokensBuilder_ == null) {
        tokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        tokensBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public Builder removeTokens(int index) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        tokens_.remove(index);
        onChanged();
      } else {
        tokensBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public net.rptools.maptool.server.proto.TokenDto.Builder getTokensBuilder(
        int index) {
      return getTokensFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public net.rptools.maptool.server.proto.TokenDtoOrBuilder getTokensOrBuilder(
        int index) {
      if (tokensBuilder_ == null) {
        return tokens_.get(index);  } else {
        return tokensBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.TokenDtoOrBuilder> 
         getTokensOrBuilderList() {
      if (tokensBuilder_ != null) {
        return tokensBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tokens_);
      }
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public net.rptools.maptool.server.proto.TokenDto.Builder addTokensBuilder() {
      return getTokensFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.TokenDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public net.rptools.maptool.server.proto.TokenDto.Builder addTokensBuilder(
        int index) {
      return getTokensFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.TokenDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.TokenDto tokens = 16;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.TokenDto.Builder> 
         getTokensBuilderList() {
      return getTokensFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.TokenDto, net.rptools.maptool.server.proto.TokenDto.Builder, net.rptools.maptool.server.proto.TokenDtoOrBuilder> 
        getTokensFieldBuilder() {
      if (tokensBuilder_ == null) {
        tokensBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.TokenDto, net.rptools.maptool.server.proto.TokenDto.Builder, net.rptools.maptool.server.proto.TokenDtoOrBuilder>(
                tokens_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        tokens_ = null;
      }
      return tokensBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto> exposedAreaMeta_;
    private com.google.protobuf.MapField<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto>
    internalGetExposedAreaMeta() {
      if (exposedAreaMeta_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ExposedAreaMetaDefaultEntryHolder.defaultEntry);
      }
      return exposedAreaMeta_;
    }
    private com.google.protobuf.MapField<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto>
    internalGetMutableExposedAreaMeta() {
      onChanged();;
      if (exposedAreaMeta_ == null) {
        exposedAreaMeta_ = com.google.protobuf.MapField.newMapField(
            ExposedAreaMetaDefaultEntryHolder.defaultEntry);
      }
      if (!exposedAreaMeta_.isMutable()) {
        exposedAreaMeta_ = exposedAreaMeta_.copy();
      }
      return exposedAreaMeta_;
    }

    public int getExposedAreaMetaCount() {
      return internalGetExposedAreaMeta().getMap().size();
    }
    /**
     * <code>map&lt;string, .maptool.AreaDto&gt; exposed_area_meta = 17;</code>
     */

    @java.lang.Override
    public boolean containsExposedAreaMeta(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetExposedAreaMeta().getMap().containsKey(key);
    }
    /**
     * Use {@link #getExposedAreaMetaMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto> getExposedAreaMeta() {
      return getExposedAreaMetaMap();
    }
    /**
     * <code>map&lt;string, .maptool.AreaDto&gt; exposed_area_meta = 17;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto> getExposedAreaMetaMap() {
      return internalGetExposedAreaMeta().getMap();
    }
    /**
     * <code>map&lt;string, .maptool.AreaDto&gt; exposed_area_meta = 17;</code>
     */
    @java.lang.Override

    public net.rptools.maptool.server.proto.drawing.AreaDto getExposedAreaMetaOrDefault(
        java.lang.String key,
        net.rptools.maptool.server.proto.drawing.AreaDto defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto> map =
          internalGetExposedAreaMeta().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .maptool.AreaDto&gt; exposed_area_meta = 17;</code>
     */
    @java.lang.Override

    public net.rptools.maptool.server.proto.drawing.AreaDto getExposedAreaMetaOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto> map =
          internalGetExposedAreaMeta().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearExposedAreaMeta() {
      internalGetMutableExposedAreaMeta().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .maptool.AreaDto&gt; exposed_area_meta = 17;</code>
     */

    public Builder removeExposedAreaMeta(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableExposedAreaMeta().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto>
    getMutableExposedAreaMeta() {
      return internalGetMutableExposedAreaMeta().getMutableMap();
    }
    /**
     * <code>map&lt;string, .maptool.AreaDto&gt; exposed_area_meta = 17;</code>
     */
    public Builder putExposedAreaMeta(
        java.lang.String key,
        net.rptools.maptool.server.proto.drawing.AreaDto value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableExposedAreaMeta().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .maptool.AreaDto&gt; exposed_area_meta = 17;</code>
     */

    public Builder putAllExposedAreaMeta(
        java.util.Map<java.lang.String, net.rptools.maptool.server.proto.drawing.AreaDto> values) {
      internalGetMutableExposedAreaMeta().getMutableMap()
          .putAll(values);
      return this;
    }

    private net.rptools.maptool.server.proto.InitiativeListDto initiative_;
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.InitiativeListDto, net.rptools.maptool.server.proto.InitiativeListDto.Builder, net.rptools.maptool.server.proto.InitiativeListDtoOrBuilder> initiativeBuilder_;
    /**
     * <code>.maptool.InitiativeListDto initiative = 18;</code>
     * @return Whether the initiative field is set.
     */
    public boolean hasInitiative() {
      return initiativeBuilder_ != null || initiative_ != null;
    }
    /**
     * <code>.maptool.InitiativeListDto initiative = 18;</code>
     * @return The initiative.
     */
    public net.rptools.maptool.server.proto.InitiativeListDto getInitiative() {
      if (initiativeBuilder_ == null) {
        return initiative_ == null ? net.rptools.maptool.server.proto.InitiativeListDto.getDefaultInstance() : initiative_;
      } else {
        return initiativeBuilder_.getMessage();
      }
    }
    /**
     * <code>.maptool.InitiativeListDto initiative = 18;</code>
     */
    public Builder setInitiative(net.rptools.maptool.server.proto.InitiativeListDto value) {
      if (initiativeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        initiative_ = value;
        onChanged();
      } else {
        initiativeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.maptool.InitiativeListDto initiative = 18;</code>
     */
    public Builder setInitiative(
        net.rptools.maptool.server.proto.InitiativeListDto.Builder builderForValue) {
      if (initiativeBuilder_ == null) {
        initiative_ = builderForValue.build();
        onChanged();
      } else {
        initiativeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.maptool.InitiativeListDto initiative = 18;</code>
     */
    public Builder mergeInitiative(net.rptools.maptool.server.proto.InitiativeListDto value) {
      if (initiativeBuilder_ == null) {
        if (initiative_ != null) {
          initiative_ =
            net.rptools.maptool.server.proto.InitiativeListDto.newBuilder(initiative_).mergeFrom(value).buildPartial();
        } else {
          initiative_ = value;
        }
        onChanged();
      } else {
        initiativeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.maptool.InitiativeListDto initiative = 18;</code>
     */
    public Builder clearInitiative() {
      if (initiativeBuilder_ == null) {
        initiative_ = null;
        onChanged();
      } else {
        initiative_ = null;
        initiativeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.maptool.InitiativeListDto initiative = 18;</code>
     */
    public net.rptools.maptool.server.proto.InitiativeListDto.Builder getInitiativeBuilder() {
      
      onChanged();
      return getInitiativeFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.InitiativeListDto initiative = 18;</code>
     */
    public net.rptools.maptool.server.proto.InitiativeListDtoOrBuilder getInitiativeOrBuilder() {
      if (initiativeBuilder_ != null) {
        return initiativeBuilder_.getMessageOrBuilder();
      } else {
        return initiative_ == null ?
            net.rptools.maptool.server.proto.InitiativeListDto.getDefaultInstance() : initiative_;
      }
    }
    /**
     * <code>.maptool.InitiativeListDto initiative = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.InitiativeListDto, net.rptools.maptool.server.proto.InitiativeListDto.Builder, net.rptools.maptool.server.proto.InitiativeListDtoOrBuilder> 
        getInitiativeFieldBuilder() {
      if (initiativeBuilder_ == null) {
        initiativeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.InitiativeListDto, net.rptools.maptool.server.proto.InitiativeListDto.Builder, net.rptools.maptool.server.proto.InitiativeListDtoOrBuilder>(
                getInitiative(),
                getParentForChildren(),
                isClean());
        initiative_ = null;
      }
      return initiativeBuilder_;
    }

    private net.rptools.maptool.server.proto.drawing.AreaDto exposedArea_;
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder> exposedAreaBuilder_;
    /**
     * <code>.maptool.AreaDto exposed_area = 19;</code>
     * @return Whether the exposedArea field is set.
     */
    public boolean hasExposedArea() {
      return exposedAreaBuilder_ != null || exposedArea_ != null;
    }
    /**
     * <code>.maptool.AreaDto exposed_area = 19;</code>
     * @return The exposedArea.
     */
    public net.rptools.maptool.server.proto.drawing.AreaDto getExposedArea() {
      if (exposedAreaBuilder_ == null) {
        return exposedArea_ == null ? net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : exposedArea_;
      } else {
        return exposedAreaBuilder_.getMessage();
      }
    }
    /**
     * <code>.maptool.AreaDto exposed_area = 19;</code>
     */
    public Builder setExposedArea(net.rptools.maptool.server.proto.drawing.AreaDto value) {
      if (exposedAreaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exposedArea_ = value;
        onChanged();
      } else {
        exposedAreaBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto exposed_area = 19;</code>
     */
    public Builder setExposedArea(
        net.rptools.maptool.server.proto.drawing.AreaDto.Builder builderForValue) {
      if (exposedAreaBuilder_ == null) {
        exposedArea_ = builderForValue.build();
        onChanged();
      } else {
        exposedAreaBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto exposed_area = 19;</code>
     */
    public Builder mergeExposedArea(net.rptools.maptool.server.proto.drawing.AreaDto value) {
      if (exposedAreaBuilder_ == null) {
        if (exposedArea_ != null) {
          exposedArea_ =
            net.rptools.maptool.server.proto.drawing.AreaDto.newBuilder(exposedArea_).mergeFrom(value).buildPartial();
        } else {
          exposedArea_ = value;
        }
        onChanged();
      } else {
        exposedAreaBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto exposed_area = 19;</code>
     */
    public Builder clearExposedArea() {
      if (exposedAreaBuilder_ == null) {
        exposedArea_ = null;
        onChanged();
      } else {
        exposedArea_ = null;
        exposedAreaBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto exposed_area = 19;</code>
     */
    public net.rptools.maptool.server.proto.drawing.AreaDto.Builder getExposedAreaBuilder() {
      
      onChanged();
      return getExposedAreaFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.AreaDto exposed_area = 19;</code>
     */
    public net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder getExposedAreaOrBuilder() {
      if (exposedAreaBuilder_ != null) {
        return exposedAreaBuilder_.getMessageOrBuilder();
      } else {
        return exposedArea_ == null ?
            net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : exposedArea_;
      }
    }
    /**
     * <code>.maptool.AreaDto exposed_area = 19;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder> 
        getExposedAreaFieldBuilder() {
      if (exposedAreaBuilder_ == null) {
        exposedAreaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder>(
                getExposedArea(),
                getParentForChildren(),
                isClean());
        exposedArea_ = null;
      }
      return exposedAreaBuilder_;
    }

    private boolean hasFog_ ;
    /**
     * <code>bool has_fog = 20;</code>
     * @return The hasFog.
     */
    @java.lang.Override
    public boolean getHasFog() {
      return hasFog_;
    }
    /**
     * <code>bool has_fog = 20;</code>
     * @param value The hasFog to set.
     * @return This builder for chaining.
     */
    public Builder setHasFog(boolean value) {
      
      hasFog_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool has_fog = 20;</code>
     * @return This builder for chaining.
     */
    public Builder clearHasFog() {
      
      hasFog_ = false;
      onChanged();
      return this;
    }

    private net.rptools.maptool.server.proto.drawing.DrawablePaintDto fogPaint_;
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.DrawablePaintDto, net.rptools.maptool.server.proto.drawing.DrawablePaintDto.Builder, net.rptools.maptool.server.proto.drawing.DrawablePaintDtoOrBuilder> fogPaintBuilder_;
    /**
     * <code>.maptool.DrawablePaintDto fog_paint = 21;</code>
     * @return Whether the fogPaint field is set.
     */
    public boolean hasFogPaint() {
      return fogPaintBuilder_ != null || fogPaint_ != null;
    }
    /**
     * <code>.maptool.DrawablePaintDto fog_paint = 21;</code>
     * @return The fogPaint.
     */
    public net.rptools.maptool.server.proto.drawing.DrawablePaintDto getFogPaint() {
      if (fogPaintBuilder_ == null) {
        return fogPaint_ == null ? net.rptools.maptool.server.proto.drawing.DrawablePaintDto.getDefaultInstance() : fogPaint_;
      } else {
        return fogPaintBuilder_.getMessage();
      }
    }
    /**
     * <code>.maptool.DrawablePaintDto fog_paint = 21;</code>
     */
    public Builder setFogPaint(net.rptools.maptool.server.proto.drawing.DrawablePaintDto value) {
      if (fogPaintBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        fogPaint_ = value;
        onChanged();
      } else {
        fogPaintBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.maptool.DrawablePaintDto fog_paint = 21;</code>
     */
    public Builder setFogPaint(
        net.rptools.maptool.server.proto.drawing.DrawablePaintDto.Builder builderForValue) {
      if (fogPaintBuilder_ == null) {
        fogPaint_ = builderForValue.build();
        onChanged();
      } else {
        fogPaintBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.maptool.DrawablePaintDto fog_paint = 21;</code>
     */
    public Builder mergeFogPaint(net.rptools.maptool.server.proto.drawing.DrawablePaintDto value) {
      if (fogPaintBuilder_ == null) {
        if (fogPaint_ != null) {
          fogPaint_ =
            net.rptools.maptool.server.proto.drawing.DrawablePaintDto.newBuilder(fogPaint_).mergeFrom(value).buildPartial();
        } else {
          fogPaint_ = value;
        }
        onChanged();
      } else {
        fogPaintBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.maptool.DrawablePaintDto fog_paint = 21;</code>
     */
    public Builder clearFogPaint() {
      if (fogPaintBuilder_ == null) {
        fogPaint_ = null;
        onChanged();
      } else {
        fogPaint_ = null;
        fogPaintBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.maptool.DrawablePaintDto fog_paint = 21;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawablePaintDto.Builder getFogPaintBuilder() {
      
      onChanged();
      return getFogPaintFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.DrawablePaintDto fog_paint = 21;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawablePaintDtoOrBuilder getFogPaintOrBuilder() {
      if (fogPaintBuilder_ != null) {
        return fogPaintBuilder_.getMessageOrBuilder();
      } else {
        return fogPaint_ == null ?
            net.rptools.maptool.server.proto.drawing.DrawablePaintDto.getDefaultInstance() : fogPaint_;
      }
    }
    /**
     * <code>.maptool.DrawablePaintDto fog_paint = 21;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.DrawablePaintDto, net.rptools.maptool.server.proto.drawing.DrawablePaintDto.Builder, net.rptools.maptool.server.proto.drawing.DrawablePaintDtoOrBuilder> 
        getFogPaintFieldBuilder() {
      if (fogPaintBuilder_ == null) {
        fogPaintBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.DrawablePaintDto, net.rptools.maptool.server.proto.drawing.DrawablePaintDto.Builder, net.rptools.maptool.server.proto.drawing.DrawablePaintDtoOrBuilder>(
                getFogPaint(),
                getParentForChildren(),
                isClean());
        fogPaint_ = null;
      }
      return fogPaintBuilder_;
    }

    private net.rptools.maptool.server.proto.drawing.AreaDto topology_;
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder> topologyBuilder_;
    /**
     * <code>.maptool.AreaDto topology = 22;</code>
     * @return Whether the topology field is set.
     */
    public boolean hasTopology() {
      return topologyBuilder_ != null || topology_ != null;
    }
    /**
     * <code>.maptool.AreaDto topology = 22;</code>
     * @return The topology.
     */
    public net.rptools.maptool.server.proto.drawing.AreaDto getTopology() {
      if (topologyBuilder_ == null) {
        return topology_ == null ? net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : topology_;
      } else {
        return topologyBuilder_.getMessage();
      }
    }
    /**
     * <code>.maptool.AreaDto topology = 22;</code>
     */
    public Builder setTopology(net.rptools.maptool.server.proto.drawing.AreaDto value) {
      if (topologyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        topology_ = value;
        onChanged();
      } else {
        topologyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto topology = 22;</code>
     */
    public Builder setTopology(
        net.rptools.maptool.server.proto.drawing.AreaDto.Builder builderForValue) {
      if (topologyBuilder_ == null) {
        topology_ = builderForValue.build();
        onChanged();
      } else {
        topologyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto topology = 22;</code>
     */
    public Builder mergeTopology(net.rptools.maptool.server.proto.drawing.AreaDto value) {
      if (topologyBuilder_ == null) {
        if (topology_ != null) {
          topology_ =
            net.rptools.maptool.server.proto.drawing.AreaDto.newBuilder(topology_).mergeFrom(value).buildPartial();
        } else {
          topology_ = value;
        }
        onChanged();
      } else {
        topologyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto topology = 22;</code>
     */
    public Builder clearTopology() {
      if (topologyBuilder_ == null) {
        topology_ = null;
        onChanged();
      } else {
        topology_ = null;
        topologyBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto topology = 22;</code>
     */
    public net.rptools.maptool.server.proto.drawing.AreaDto.Builder getTopologyBuilder() {
      
      onChanged();
      return getTopologyFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.AreaDto topology = 22;</code>
     */
    public net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder getTopologyOrBuilder() {
      if (topologyBuilder_ != null) {
        return topologyBuilder_.getMessageOrBuilder();
      } else {
        return topology_ == null ?
            net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : topology_;
      }
    }
    /**
     * <code>.maptool.AreaDto topology = 22;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder> 
        getTopologyFieldBuilder() {
      if (topologyBuilder_ == null) {
        topologyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder>(
                getTopology(),
                getParentForChildren(),
                isClean());
        topology_ = null;
      }
      return topologyBuilder_;
    }

    private net.rptools.maptool.server.proto.drawing.AreaDto hillVbl_;
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder> hillVblBuilder_;
    /**
     * <code>.maptool.AreaDto hill_vbl = 23;</code>
     * @return Whether the hillVbl field is set.
     */
    public boolean hasHillVbl() {
      return hillVblBuilder_ != null || hillVbl_ != null;
    }
    /**
     * <code>.maptool.AreaDto hill_vbl = 23;</code>
     * @return The hillVbl.
     */
    public net.rptools.maptool.server.proto.drawing.AreaDto getHillVbl() {
      if (hillVblBuilder_ == null) {
        return hillVbl_ == null ? net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : hillVbl_;
      } else {
        return hillVblBuilder_.getMessage();
      }
    }
    /**
     * <code>.maptool.AreaDto hill_vbl = 23;</code>
     */
    public Builder setHillVbl(net.rptools.maptool.server.proto.drawing.AreaDto value) {
      if (hillVblBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        hillVbl_ = value;
        onChanged();
      } else {
        hillVblBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto hill_vbl = 23;</code>
     */
    public Builder setHillVbl(
        net.rptools.maptool.server.proto.drawing.AreaDto.Builder builderForValue) {
      if (hillVblBuilder_ == null) {
        hillVbl_ = builderForValue.build();
        onChanged();
      } else {
        hillVblBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto hill_vbl = 23;</code>
     */
    public Builder mergeHillVbl(net.rptools.maptool.server.proto.drawing.AreaDto value) {
      if (hillVblBuilder_ == null) {
        if (hillVbl_ != null) {
          hillVbl_ =
            net.rptools.maptool.server.proto.drawing.AreaDto.newBuilder(hillVbl_).mergeFrom(value).buildPartial();
        } else {
          hillVbl_ = value;
        }
        onChanged();
      } else {
        hillVblBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto hill_vbl = 23;</code>
     */
    public Builder clearHillVbl() {
      if (hillVblBuilder_ == null) {
        hillVbl_ = null;
        onChanged();
      } else {
        hillVbl_ = null;
        hillVblBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto hill_vbl = 23;</code>
     */
    public net.rptools.maptool.server.proto.drawing.AreaDto.Builder getHillVblBuilder() {
      
      onChanged();
      return getHillVblFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.AreaDto hill_vbl = 23;</code>
     */
    public net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder getHillVblOrBuilder() {
      if (hillVblBuilder_ != null) {
        return hillVblBuilder_.getMessageOrBuilder();
      } else {
        return hillVbl_ == null ?
            net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : hillVbl_;
      }
    }
    /**
     * <code>.maptool.AreaDto hill_vbl = 23;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder> 
        getHillVblFieldBuilder() {
      if (hillVblBuilder_ == null) {
        hillVblBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder>(
                getHillVbl(),
                getParentForChildren(),
                isClean());
        hillVbl_ = null;
      }
      return hillVblBuilder_;
    }

    private net.rptools.maptool.server.proto.drawing.AreaDto pitVbl_;
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder> pitVblBuilder_;
    /**
     * <code>.maptool.AreaDto pit_vbl = 24;</code>
     * @return Whether the pitVbl field is set.
     */
    public boolean hasPitVbl() {
      return pitVblBuilder_ != null || pitVbl_ != null;
    }
    /**
     * <code>.maptool.AreaDto pit_vbl = 24;</code>
     * @return The pitVbl.
     */
    public net.rptools.maptool.server.proto.drawing.AreaDto getPitVbl() {
      if (pitVblBuilder_ == null) {
        return pitVbl_ == null ? net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : pitVbl_;
      } else {
        return pitVblBuilder_.getMessage();
      }
    }
    /**
     * <code>.maptool.AreaDto pit_vbl = 24;</code>
     */
    public Builder setPitVbl(net.rptools.maptool.server.proto.drawing.AreaDto value) {
      if (pitVblBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pitVbl_ = value;
        onChanged();
      } else {
        pitVblBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto pit_vbl = 24;</code>
     */
    public Builder setPitVbl(
        net.rptools.maptool.server.proto.drawing.AreaDto.Builder builderForValue) {
      if (pitVblBuilder_ == null) {
        pitVbl_ = builderForValue.build();
        onChanged();
      } else {
        pitVblBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto pit_vbl = 24;</code>
     */
    public Builder mergePitVbl(net.rptools.maptool.server.proto.drawing.AreaDto value) {
      if (pitVblBuilder_ == null) {
        if (pitVbl_ != null) {
          pitVbl_ =
            net.rptools.maptool.server.proto.drawing.AreaDto.newBuilder(pitVbl_).mergeFrom(value).buildPartial();
        } else {
          pitVbl_ = value;
        }
        onChanged();
      } else {
        pitVblBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto pit_vbl = 24;</code>
     */
    public Builder clearPitVbl() {
      if (pitVblBuilder_ == null) {
        pitVbl_ = null;
        onChanged();
      } else {
        pitVbl_ = null;
        pitVblBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto pit_vbl = 24;</code>
     */
    public net.rptools.maptool.server.proto.drawing.AreaDto.Builder getPitVblBuilder() {
      
      onChanged();
      return getPitVblFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.AreaDto pit_vbl = 24;</code>
     */
    public net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder getPitVblOrBuilder() {
      if (pitVblBuilder_ != null) {
        return pitVblBuilder_.getMessageOrBuilder();
      } else {
        return pitVbl_ == null ?
            net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : pitVbl_;
      }
    }
    /**
     * <code>.maptool.AreaDto pit_vbl = 24;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder> 
        getPitVblFieldBuilder() {
      if (pitVblBuilder_ == null) {
        pitVblBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder>(
                getPitVbl(),
                getParentForChildren(),
                isClean());
        pitVbl_ = null;
      }
      return pitVblBuilder_;
    }

    private net.rptools.maptool.server.proto.drawing.AreaDto topologyTerrain_;
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder> topologyTerrainBuilder_;
    /**
     * <code>.maptool.AreaDto topology_terrain = 25;</code>
     * @return Whether the topologyTerrain field is set.
     */
    public boolean hasTopologyTerrain() {
      return topologyTerrainBuilder_ != null || topologyTerrain_ != null;
    }
    /**
     * <code>.maptool.AreaDto topology_terrain = 25;</code>
     * @return The topologyTerrain.
     */
    public net.rptools.maptool.server.proto.drawing.AreaDto getTopologyTerrain() {
      if (topologyTerrainBuilder_ == null) {
        return topologyTerrain_ == null ? net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : topologyTerrain_;
      } else {
        return topologyTerrainBuilder_.getMessage();
      }
    }
    /**
     * <code>.maptool.AreaDto topology_terrain = 25;</code>
     */
    public Builder setTopologyTerrain(net.rptools.maptool.server.proto.drawing.AreaDto value) {
      if (topologyTerrainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        topologyTerrain_ = value;
        onChanged();
      } else {
        topologyTerrainBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto topology_terrain = 25;</code>
     */
    public Builder setTopologyTerrain(
        net.rptools.maptool.server.proto.drawing.AreaDto.Builder builderForValue) {
      if (topologyTerrainBuilder_ == null) {
        topologyTerrain_ = builderForValue.build();
        onChanged();
      } else {
        topologyTerrainBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto topology_terrain = 25;</code>
     */
    public Builder mergeTopologyTerrain(net.rptools.maptool.server.proto.drawing.AreaDto value) {
      if (topologyTerrainBuilder_ == null) {
        if (topologyTerrain_ != null) {
          topologyTerrain_ =
            net.rptools.maptool.server.proto.drawing.AreaDto.newBuilder(topologyTerrain_).mergeFrom(value).buildPartial();
        } else {
          topologyTerrain_ = value;
        }
        onChanged();
      } else {
        topologyTerrainBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto topology_terrain = 25;</code>
     */
    public Builder clearTopologyTerrain() {
      if (topologyTerrainBuilder_ == null) {
        topologyTerrain_ = null;
        onChanged();
      } else {
        topologyTerrain_ = null;
        topologyTerrainBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.maptool.AreaDto topology_terrain = 25;</code>
     */
    public net.rptools.maptool.server.proto.drawing.AreaDto.Builder getTopologyTerrainBuilder() {
      
      onChanged();
      return getTopologyTerrainFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.AreaDto topology_terrain = 25;</code>
     */
    public net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder getTopologyTerrainOrBuilder() {
      if (topologyTerrainBuilder_ != null) {
        return topologyTerrainBuilder_.getMessageOrBuilder();
      } else {
        return topologyTerrain_ == null ?
            net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance() : topologyTerrain_;
      }
    }
    /**
     * <code>.maptool.AreaDto topology_terrain = 25;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder> 
        getTopologyTerrainFieldBuilder() {
      if (topologyTerrainBuilder_ == null) {
        topologyTerrainBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder>(
                getTopologyTerrain(),
                getParentForChildren(),
                isClean());
        topologyTerrain_ = null;
      }
      return topologyTerrainBuilder_;
    }

    private net.rptools.maptool.server.proto.drawing.DrawablePaintDto backgroundPaint_;
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.DrawablePaintDto, net.rptools.maptool.server.proto.drawing.DrawablePaintDto.Builder, net.rptools.maptool.server.proto.drawing.DrawablePaintDtoOrBuilder> backgroundPaintBuilder_;
    /**
     * <code>.maptool.DrawablePaintDto background_paint = 26;</code>
     * @return Whether the backgroundPaint field is set.
     */
    public boolean hasBackgroundPaint() {
      return backgroundPaintBuilder_ != null || backgroundPaint_ != null;
    }
    /**
     * <code>.maptool.DrawablePaintDto background_paint = 26;</code>
     * @return The backgroundPaint.
     */
    public net.rptools.maptool.server.proto.drawing.DrawablePaintDto getBackgroundPaint() {
      if (backgroundPaintBuilder_ == null) {
        return backgroundPaint_ == null ? net.rptools.maptool.server.proto.drawing.DrawablePaintDto.getDefaultInstance() : backgroundPaint_;
      } else {
        return backgroundPaintBuilder_.getMessage();
      }
    }
    /**
     * <code>.maptool.DrawablePaintDto background_paint = 26;</code>
     */
    public Builder setBackgroundPaint(net.rptools.maptool.server.proto.drawing.DrawablePaintDto value) {
      if (backgroundPaintBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        backgroundPaint_ = value;
        onChanged();
      } else {
        backgroundPaintBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.maptool.DrawablePaintDto background_paint = 26;</code>
     */
    public Builder setBackgroundPaint(
        net.rptools.maptool.server.proto.drawing.DrawablePaintDto.Builder builderForValue) {
      if (backgroundPaintBuilder_ == null) {
        backgroundPaint_ = builderForValue.build();
        onChanged();
      } else {
        backgroundPaintBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.maptool.DrawablePaintDto background_paint = 26;</code>
     */
    public Builder mergeBackgroundPaint(net.rptools.maptool.server.proto.drawing.DrawablePaintDto value) {
      if (backgroundPaintBuilder_ == null) {
        if (backgroundPaint_ != null) {
          backgroundPaint_ =
            net.rptools.maptool.server.proto.drawing.DrawablePaintDto.newBuilder(backgroundPaint_).mergeFrom(value).buildPartial();
        } else {
          backgroundPaint_ = value;
        }
        onChanged();
      } else {
        backgroundPaintBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.maptool.DrawablePaintDto background_paint = 26;</code>
     */
    public Builder clearBackgroundPaint() {
      if (backgroundPaintBuilder_ == null) {
        backgroundPaint_ = null;
        onChanged();
      } else {
        backgroundPaint_ = null;
        backgroundPaintBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.maptool.DrawablePaintDto background_paint = 26;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawablePaintDto.Builder getBackgroundPaintBuilder() {
      
      onChanged();
      return getBackgroundPaintFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.DrawablePaintDto background_paint = 26;</code>
     */
    public net.rptools.maptool.server.proto.drawing.DrawablePaintDtoOrBuilder getBackgroundPaintOrBuilder() {
      if (backgroundPaintBuilder_ != null) {
        return backgroundPaintBuilder_.getMessageOrBuilder();
      } else {
        return backgroundPaint_ == null ?
            net.rptools.maptool.server.proto.drawing.DrawablePaintDto.getDefaultInstance() : backgroundPaint_;
      }
    }
    /**
     * <code>.maptool.DrawablePaintDto background_paint = 26;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.DrawablePaintDto, net.rptools.maptool.server.proto.drawing.DrawablePaintDto.Builder, net.rptools.maptool.server.proto.drawing.DrawablePaintDtoOrBuilder> 
        getBackgroundPaintFieldBuilder() {
      if (backgroundPaintBuilder_ == null) {
        backgroundPaintBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.DrawablePaintDto, net.rptools.maptool.server.proto.drawing.DrawablePaintDto.Builder, net.rptools.maptool.server.proto.drawing.DrawablePaintDtoOrBuilder>(
                getBackgroundPaint(),
                getParentForChildren(),
                isClean());
        backgroundPaint_ = null;
      }
      return backgroundPaintBuilder_;
    }

    private com.google.protobuf.StringValue mapAsset_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> mapAssetBuilder_;
    /**
     * <code>.google.protobuf.StringValue map_asset = 27;</code>
     * @return Whether the mapAsset field is set.
     */
    public boolean hasMapAsset() {
      return mapAssetBuilder_ != null || mapAsset_ != null;
    }
    /**
     * <code>.google.protobuf.StringValue map_asset = 27;</code>
     * @return The mapAsset.
     */
    public com.google.protobuf.StringValue getMapAsset() {
      if (mapAssetBuilder_ == null) {
        return mapAsset_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : mapAsset_;
      } else {
        return mapAssetBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.protobuf.StringValue map_asset = 27;</code>
     */
    public Builder setMapAsset(com.google.protobuf.StringValue value) {
      if (mapAssetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mapAsset_ = value;
        onChanged();
      } else {
        mapAssetBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue map_asset = 27;</code>
     */
    public Builder setMapAsset(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (mapAssetBuilder_ == null) {
        mapAsset_ = builderForValue.build();
        onChanged();
      } else {
        mapAssetBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue map_asset = 27;</code>
     */
    public Builder mergeMapAsset(com.google.protobuf.StringValue value) {
      if (mapAssetBuilder_ == null) {
        if (mapAsset_ != null) {
          mapAsset_ =
            com.google.protobuf.StringValue.newBuilder(mapAsset_).mergeFrom(value).buildPartial();
        } else {
          mapAsset_ = value;
        }
        onChanged();
      } else {
        mapAssetBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue map_asset = 27;</code>
     */
    public Builder clearMapAsset() {
      if (mapAssetBuilder_ == null) {
        mapAsset_ = null;
        onChanged();
      } else {
        mapAsset_ = null;
        mapAssetBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue map_asset = 27;</code>
     */
    public com.google.protobuf.StringValue.Builder getMapAssetBuilder() {
      
      onChanged();
      return getMapAssetFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.protobuf.StringValue map_asset = 27;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getMapAssetOrBuilder() {
      if (mapAssetBuilder_ != null) {
        return mapAssetBuilder_.getMessageOrBuilder();
      } else {
        return mapAsset_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : mapAsset_;
      }
    }
    /**
     * <code>.google.protobuf.StringValue map_asset = 27;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getMapAssetFieldBuilder() {
      if (mapAssetBuilder_ == null) {
        mapAssetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getMapAsset(),
                getParentForChildren(),
                isClean());
        mapAsset_ = null;
      }
      return mapAssetBuilder_;
    }

    private net.rptools.maptool.server.proto.drawing.IntPointDto boardPosition_;
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.IntPointDto, net.rptools.maptool.server.proto.drawing.IntPointDto.Builder, net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder> boardPositionBuilder_;
    /**
     * <code>.maptool.IntPointDto boardPosition = 28;</code>
     * @return Whether the boardPosition field is set.
     */
    public boolean hasBoardPosition() {
      return boardPositionBuilder_ != null || boardPosition_ != null;
    }
    /**
     * <code>.maptool.IntPointDto boardPosition = 28;</code>
     * @return The boardPosition.
     */
    public net.rptools.maptool.server.proto.drawing.IntPointDto getBoardPosition() {
      if (boardPositionBuilder_ == null) {
        return boardPosition_ == null ? net.rptools.maptool.server.proto.drawing.IntPointDto.getDefaultInstance() : boardPosition_;
      } else {
        return boardPositionBuilder_.getMessage();
      }
    }
    /**
     * <code>.maptool.IntPointDto boardPosition = 28;</code>
     */
    public Builder setBoardPosition(net.rptools.maptool.server.proto.drawing.IntPointDto value) {
      if (boardPositionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        boardPosition_ = value;
        onChanged();
      } else {
        boardPositionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.maptool.IntPointDto boardPosition = 28;</code>
     */
    public Builder setBoardPosition(
        net.rptools.maptool.server.proto.drawing.IntPointDto.Builder builderForValue) {
      if (boardPositionBuilder_ == null) {
        boardPosition_ = builderForValue.build();
        onChanged();
      } else {
        boardPositionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.maptool.IntPointDto boardPosition = 28;</code>
     */
    public Builder mergeBoardPosition(net.rptools.maptool.server.proto.drawing.IntPointDto value) {
      if (boardPositionBuilder_ == null) {
        if (boardPosition_ != null) {
          boardPosition_ =
            net.rptools.maptool.server.proto.drawing.IntPointDto.newBuilder(boardPosition_).mergeFrom(value).buildPartial();
        } else {
          boardPosition_ = value;
        }
        onChanged();
      } else {
        boardPositionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.maptool.IntPointDto boardPosition = 28;</code>
     */
    public Builder clearBoardPosition() {
      if (boardPositionBuilder_ == null) {
        boardPosition_ = null;
        onChanged();
      } else {
        boardPosition_ = null;
        boardPositionBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.maptool.IntPointDto boardPosition = 28;</code>
     */
    public net.rptools.maptool.server.proto.drawing.IntPointDto.Builder getBoardPositionBuilder() {
      
      onChanged();
      return getBoardPositionFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.IntPointDto boardPosition = 28;</code>
     */
    public net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder getBoardPositionOrBuilder() {
      if (boardPositionBuilder_ != null) {
        return boardPositionBuilder_.getMessageOrBuilder();
      } else {
        return boardPosition_ == null ?
            net.rptools.maptool.server.proto.drawing.IntPointDto.getDefaultInstance() : boardPosition_;
      }
    }
    /**
     * <code>.maptool.IntPointDto boardPosition = 28;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.IntPointDto, net.rptools.maptool.server.proto.drawing.IntPointDto.Builder, net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder> 
        getBoardPositionFieldBuilder() {
      if (boardPositionBuilder_ == null) {
        boardPositionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.IntPointDto, net.rptools.maptool.server.proto.drawing.IntPointDto.Builder, net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder>(
                getBoardPosition(),
                getParentForChildren(),
                isClean());
        boardPosition_ = null;
      }
      return boardPositionBuilder_;
    }

    private boolean drawBoard_ ;
    /**
     * <code>bool draw_board = 29;</code>
     * @return The drawBoard.
     */
    @java.lang.Override
    public boolean getDrawBoard() {
      return drawBoard_;
    }
    /**
     * <code>bool draw_board = 29;</code>
     * @param value The drawBoard to set.
     * @return This builder for chaining.
     */
    public Builder setDrawBoard(boolean value) {
      
      drawBoard_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool draw_board = 29;</code>
     * @return This builder for chaining.
     */
    public Builder clearDrawBoard() {
      
      drawBoard_ = false;
      onChanged();
      return this;
    }

    private boolean boardChanged_ ;
    /**
     * <code>bool boardChanged = 30;</code>
     * @return The boardChanged.
     */
    @java.lang.Override
    public boolean getBoardChanged() {
      return boardChanged_;
    }
    /**
     * <code>bool boardChanged = 30;</code>
     * @param value The boardChanged to set.
     * @return This builder for chaining.
     */
    public Builder setBoardChanged(boolean value) {
      
      boardChanged_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool boardChanged = 30;</code>
     * @return This builder for chaining.
     */
    public Builder clearBoardChanged() {
      
      boardChanged_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <code>string name = 31;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string name = 31;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string name = 31;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string name = 31;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>string name = 31;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.StringValue playerAlias_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> playerAliasBuilder_;
    /**
     * <code>.google.protobuf.StringValue player_alias = 32;</code>
     * @return Whether the playerAlias field is set.
     */
    public boolean hasPlayerAlias() {
      return playerAliasBuilder_ != null || playerAlias_ != null;
    }
    /**
     * <code>.google.protobuf.StringValue player_alias = 32;</code>
     * @return The playerAlias.
     */
    public com.google.protobuf.StringValue getPlayerAlias() {
      if (playerAliasBuilder_ == null) {
        return playerAlias_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : playerAlias_;
      } else {
        return playerAliasBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.protobuf.StringValue player_alias = 32;</code>
     */
    public Builder setPlayerAlias(com.google.protobuf.StringValue value) {
      if (playerAliasBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        playerAlias_ = value;
        onChanged();
      } else {
        playerAliasBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue player_alias = 32;</code>
     */
    public Builder setPlayerAlias(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (playerAliasBuilder_ == null) {
        playerAlias_ = builderForValue.build();
        onChanged();
      } else {
        playerAliasBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue player_alias = 32;</code>
     */
    public Builder mergePlayerAlias(com.google.protobuf.StringValue value) {
      if (playerAliasBuilder_ == null) {
        if (playerAlias_ != null) {
          playerAlias_ =
            com.google.protobuf.StringValue.newBuilder(playerAlias_).mergeFrom(value).buildPartial();
        } else {
          playerAlias_ = value;
        }
        onChanged();
      } else {
        playerAliasBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue player_alias = 32;</code>
     */
    public Builder clearPlayerAlias() {
      if (playerAliasBuilder_ == null) {
        playerAlias_ = null;
        onChanged();
      } else {
        playerAlias_ = null;
        playerAliasBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue player_alias = 32;</code>
     */
    public com.google.protobuf.StringValue.Builder getPlayerAliasBuilder() {
      
      onChanged();
      return getPlayerAliasFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.protobuf.StringValue player_alias = 32;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getPlayerAliasOrBuilder() {
      if (playerAliasBuilder_ != null) {
        return playerAliasBuilder_.getMessageOrBuilder();
      } else {
        return playerAlias_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : playerAlias_;
      }
    }
    /**
     * <code>.google.protobuf.StringValue player_alias = 32;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getPlayerAliasFieldBuilder() {
      if (playerAliasBuilder_ == null) {
        playerAliasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getPlayerAlias(),
                getParentForChildren(),
                isClean());
        playerAlias_ = null;
      }
      return playerAliasBuilder_;
    }

    private boolean isVisible_ ;
    /**
     * <code>bool is_visible = 33;</code>
     * @return The isVisible.
     */
    @java.lang.Override
    public boolean getIsVisible() {
      return isVisible_;
    }
    /**
     * <code>bool is_visible = 33;</code>
     * @param value The isVisible to set.
     * @return This builder for chaining.
     */
    public Builder setIsVisible(boolean value) {
      
      isVisible_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool is_visible = 33;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsVisible() {
      
      isVisible_ = false;
      onChanged();
      return this;
    }

    private int visionType_ = 0;
    /**
     * <code>.maptool.ZoneDto.VisionTypeDto vision_type = 34;</code>
     * @return The enum numeric value on the wire for visionType.
     */
    @java.lang.Override public int getVisionTypeValue() {
      return visionType_;
    }
    /**
     * <code>.maptool.ZoneDto.VisionTypeDto vision_type = 34;</code>
     * @param value The enum numeric value on the wire for visionType to set.
     * @return This builder for chaining.
     */
    public Builder setVisionTypeValue(int value) {
      
      visionType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.ZoneDto.VisionTypeDto vision_type = 34;</code>
     * @return The visionType.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.ZoneDto.VisionTypeDto getVisionType() {
      @SuppressWarnings("deprecation")
      net.rptools.maptool.server.proto.ZoneDto.VisionTypeDto result = net.rptools.maptool.server.proto.ZoneDto.VisionTypeDto.valueOf(visionType_);
      return result == null ? net.rptools.maptool.server.proto.ZoneDto.VisionTypeDto.UNRECOGNIZED : result;
    }
    /**
     * <code>.maptool.ZoneDto.VisionTypeDto vision_type = 34;</code>
     * @param value The visionType to set.
     * @return This builder for chaining.
     */
    public Builder setVisionType(net.rptools.maptool.server.proto.ZoneDto.VisionTypeDto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      visionType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.ZoneDto.VisionTypeDto vision_type = 34;</code>
     * @return This builder for chaining.
     */
    public Builder clearVisionType() {
      
      visionType_ = 0;
      onChanged();
      return this;
    }

    private int lightingStyle_ = 0;
    /**
     * <code>.maptool.ZoneDto.LightingStyleDto lighting_style = 35;</code>
     * @return The enum numeric value on the wire for lightingStyle.
     */
    @java.lang.Override public int getLightingStyleValue() {
      return lightingStyle_;
    }
    /**
     * <code>.maptool.ZoneDto.LightingStyleDto lighting_style = 35;</code>
     * @param value The enum numeric value on the wire for lightingStyle to set.
     * @return This builder for chaining.
     */
    public Builder setLightingStyleValue(int value) {
      
      lightingStyle_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.ZoneDto.LightingStyleDto lighting_style = 35;</code>
     * @return The lightingStyle.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.ZoneDto.LightingStyleDto getLightingStyle() {
      @SuppressWarnings("deprecation")
      net.rptools.maptool.server.proto.ZoneDto.LightingStyleDto result = net.rptools.maptool.server.proto.ZoneDto.LightingStyleDto.valueOf(lightingStyle_);
      return result == null ? net.rptools.maptool.server.proto.ZoneDto.LightingStyleDto.UNRECOGNIZED : result;
    }
    /**
     * <code>.maptool.ZoneDto.LightingStyleDto lighting_style = 35;</code>
     * @param value The lightingStyle to set.
     * @return This builder for chaining.
     */
    public Builder setLightingStyle(net.rptools.maptool.server.proto.ZoneDto.LightingStyleDto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      lightingStyle_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.ZoneDto.LightingStyleDto lighting_style = 35;</code>
     * @return This builder for chaining.
     */
    public Builder clearLightingStyle() {
      
      lightingStyle_ = 0;
      onChanged();
      return this;
    }

    private int tokenSelection_ = 0;
    /**
     * <code>.maptool.ZoneDto.TokenSelectionDto token_selection = 36;</code>
     * @return The enum numeric value on the wire for tokenSelection.
     */
    @java.lang.Override public int getTokenSelectionValue() {
      return tokenSelection_;
    }
    /**
     * <code>.maptool.ZoneDto.TokenSelectionDto token_selection = 36;</code>
     * @param value The enum numeric value on the wire for tokenSelection to set.
     * @return This builder for chaining.
     */
    public Builder setTokenSelectionValue(int value) {
      
      tokenSelection_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.ZoneDto.TokenSelectionDto token_selection = 36;</code>
     * @return The tokenSelection.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.ZoneDto.TokenSelectionDto getTokenSelection() {
      @SuppressWarnings("deprecation")
      net.rptools.maptool.server.proto.ZoneDto.TokenSelectionDto result = net.rptools.maptool.server.proto.ZoneDto.TokenSelectionDto.valueOf(tokenSelection_);
      return result == null ? net.rptools.maptool.server.proto.ZoneDto.TokenSelectionDto.UNRECOGNIZED : result;
    }
    /**
     * <code>.maptool.ZoneDto.TokenSelectionDto token_selection = 36;</code>
     * @param value The tokenSelection to set.
     * @return This builder for chaining.
     */
    public Builder setTokenSelection(net.rptools.maptool.server.proto.ZoneDto.TokenSelectionDto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      tokenSelection_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.ZoneDto.TokenSelectionDto token_selection = 36;</code>
     * @return This builder for chaining.
     */
    public Builder clearTokenSelection() {
      
      tokenSelection_ = 0;
      onChanged();
      return this;
    }

    private int height_ ;
    /**
     * <code>int32 height = 37;</code>
     * @return The height.
     */
    @java.lang.Override
    public int getHeight() {
      return height_;
    }
    /**
     * <code>int32 height = 37;</code>
     * @param value The height to set.
     * @return This builder for chaining.
     */
    public Builder setHeight(int value) {
      
      height_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 height = 37;</code>
     * @return This builder for chaining.
     */
    public Builder clearHeight() {
      
      height_ = 0;
      onChanged();
      return this;
    }

    private int width_ ;
    /**
     * <code>int32 width = 38;</code>
     * @return The width.
     */
    @java.lang.Override
    public int getWidth() {
      return width_;
    }
    /**
     * <code>int32 width = 38;</code>
     * @param value The width to set.
     * @return This builder for chaining.
     */
    public Builder setWidth(int value) {
      
      width_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 width = 38;</code>
     * @return This builder for chaining.
     */
    public Builder clearWidth() {
      
      width_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maptool.ZoneDto)
  }

  // @@protoc_insertion_point(class_scope:maptool.ZoneDto)
  private static final net.rptools.maptool.server.proto.ZoneDto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new net.rptools.maptool.server.proto.ZoneDto();
  }

  public static net.rptools.maptool.server.proto.ZoneDto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ZoneDto>
      PARSER = new com.google.protobuf.AbstractParser<ZoneDto>() {
    @java.lang.Override
    public ZoneDto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ZoneDto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ZoneDto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ZoneDto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public net.rptools.maptool.server.proto.ZoneDto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

