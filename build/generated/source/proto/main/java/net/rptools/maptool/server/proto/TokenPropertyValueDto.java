// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_transfer_objects.proto

package net.rptools.maptool.server.proto;

/**
 * Protobuf type {@code maptool.TokenPropertyValueDto}
 */
public final class TokenPropertyValueDto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maptool.TokenPropertyValueDto)
    TokenPropertyValueDtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TokenPropertyValueDto.newBuilder() to construct.
  private TokenPropertyValueDto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TokenPropertyValueDto() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TokenPropertyValueDto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TokenPropertyValueDto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            valueType_ = input.readInt32();
            valueTypeCase_ = 1;
            break;
          }
          case 16: {
            valueType_ = input.readBool();
            valueTypeCase_ = 2;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            valueTypeCase_ = 3;
            valueType_ = s;
            break;
          }
          case 33: {
            valueType_ = input.readDouble();
            valueTypeCase_ = 4;
            break;
          }
          case 42: {
            net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.Builder subBuilder = null;
            if (valueTypeCase_ == 5) {
              subBuilder = ((net.rptools.maptool.server.proto.MacroButtonPropertiesListDto) valueType_).toBuilder();
            }
            valueType_ =
                input.readMessage(net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.MacroButtonPropertiesListDto) valueType_);
              valueType_ = subBuilder.buildPartial();
            }
            valueTypeCase_ = 5;
            break;
          }
          case 50: {
            net.rptools.maptool.server.proto.LightSourceDto.Builder subBuilder = null;
            if (valueTypeCase_ == 6) {
              subBuilder = ((net.rptools.maptool.server.proto.LightSourceDto) valueType_).toBuilder();
            }
            valueType_ =
                input.readMessage(net.rptools.maptool.server.proto.LightSourceDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.LightSourceDto) valueType_);
              valueType_ = subBuilder.buildPartial();
            }
            valueTypeCase_ = 6;
            break;
          }
          case 58: {
            net.rptools.maptool.server.proto.drawing.AreaDto.Builder subBuilder = null;
            if (valueTypeCase_ == 7) {
              subBuilder = ((net.rptools.maptool.server.proto.drawing.AreaDto) valueType_).toBuilder();
            }
            valueType_ =
                input.readMessage(net.rptools.maptool.server.proto.drawing.AreaDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.drawing.AreaDto) valueType_);
              valueType_ = subBuilder.buildPartial();
            }
            valueTypeCase_ = 7;
            break;
          }
          case 66: {
            net.rptools.maptool.server.proto.StringListDto.Builder subBuilder = null;
            if (valueTypeCase_ == 8) {
              subBuilder = ((net.rptools.maptool.server.proto.StringListDto) valueType_).toBuilder();
            }
            valueType_ =
                input.readMessage(net.rptools.maptool.server.proto.StringListDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.StringListDto) valueType_);
              valueType_ = subBuilder.buildPartial();
            }
            valueTypeCase_ = 8;
            break;
          }
          case 74: {
            net.rptools.maptool.server.proto.GridDto.Builder subBuilder = null;
            if (valueTypeCase_ == 9) {
              subBuilder = ((net.rptools.maptool.server.proto.GridDto) valueType_).toBuilder();
            }
            valueType_ =
                input.readMessage(net.rptools.maptool.server.proto.GridDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.GridDto) valueType_);
              valueType_ = subBuilder.buildPartial();
            }
            valueTypeCase_ = 9;
            break;
          }
          case 82: {
            net.rptools.maptool.server.proto.TokenFootPrintDto.Builder subBuilder = null;
            if (valueTypeCase_ == 10) {
              subBuilder = ((net.rptools.maptool.server.proto.TokenFootPrintDto) valueType_).toBuilder();
            }
            valueType_ =
                input.readMessage(net.rptools.maptool.server.proto.TokenFootPrintDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.TokenFootPrintDto) valueType_);
              valueType_ = subBuilder.buildPartial();
            }
            valueTypeCase_ = 10;
            break;
          }
          case 90: {
            java.lang.String s = input.readStringRequireUtf8();
            valueTypeCase_ = 11;
            valueType_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_TokenPropertyValueDto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_TokenPropertyValueDto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            net.rptools.maptool.server.proto.TokenPropertyValueDto.class, net.rptools.maptool.server.proto.TokenPropertyValueDto.Builder.class);
  }

  private int valueTypeCase_ = 0;
  private java.lang.Object valueType_;
  public enum ValueTypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    INT_VALUE(1),
    BOOL_VALUE(2),
    STRING_VALUE(3),
    DOUBLE_VALUE(4),
    MACROS(5),
    LIGHT_SOURCE(6),
    AREA(7),
    STRING_VALUES(8),
    GRID(9),
    TOKEN_FOOT_PRINT(10),
    TOPOLOGY_TYPE(11),
    VALUETYPE_NOT_SET(0);
    private final int value;
    private ValueTypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ValueTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static ValueTypeCase forNumber(int value) {
      switch (value) {
        case 1: return INT_VALUE;
        case 2: return BOOL_VALUE;
        case 3: return STRING_VALUE;
        case 4: return DOUBLE_VALUE;
        case 5: return MACROS;
        case 6: return LIGHT_SOURCE;
        case 7: return AREA;
        case 8: return STRING_VALUES;
        case 9: return GRID;
        case 10: return TOKEN_FOOT_PRINT;
        case 11: return TOPOLOGY_TYPE;
        case 0: return VALUETYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ValueTypeCase
  getValueTypeCase() {
    return ValueTypeCase.forNumber(
        valueTypeCase_);
  }

  public static final int INT_VALUE_FIELD_NUMBER = 1;
  /**
   * <code>int32 int_value = 1;</code>
   * @return Whether the intValue field is set.
   */
  @java.lang.Override
  public boolean hasIntValue() {
    return valueTypeCase_ == 1;
  }
  /**
   * <code>int32 int_value = 1;</code>
   * @return The intValue.
   */
  @java.lang.Override
  public int getIntValue() {
    if (valueTypeCase_ == 1) {
      return (java.lang.Integer) valueType_;
    }
    return 0;
  }

  public static final int BOOL_VALUE_FIELD_NUMBER = 2;
  /**
   * <code>bool bool_value = 2;</code>
   * @return Whether the boolValue field is set.
   */
  @java.lang.Override
  public boolean hasBoolValue() {
    return valueTypeCase_ == 2;
  }
  /**
   * <code>bool bool_value = 2;</code>
   * @return The boolValue.
   */
  @java.lang.Override
  public boolean getBoolValue() {
    if (valueTypeCase_ == 2) {
      return (java.lang.Boolean) valueType_;
    }
    return false;
  }

  public static final int STRING_VALUE_FIELD_NUMBER = 3;
  /**
   * <code>string string_value = 3;</code>
   * @return Whether the stringValue field is set.
   */
  public boolean hasStringValue() {
    return valueTypeCase_ == 3;
  }
  /**
   * <code>string string_value = 3;</code>
   * @return The stringValue.
   */
  public java.lang.String getStringValue() {
    java.lang.Object ref = "";
    if (valueTypeCase_ == 3) {
      ref = valueType_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (valueTypeCase_ == 3) {
        valueType_ = s;
      }
      return s;
    }
  }
  /**
   * <code>string string_value = 3;</code>
   * @return The bytes for stringValue.
   */
  public com.google.protobuf.ByteString
      getStringValueBytes() {
    java.lang.Object ref = "";
    if (valueTypeCase_ == 3) {
      ref = valueType_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (valueTypeCase_ == 3) {
        valueType_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DOUBLE_VALUE_FIELD_NUMBER = 4;
  /**
   * <code>double double_value = 4;</code>
   * @return Whether the doubleValue field is set.
   */
  @java.lang.Override
  public boolean hasDoubleValue() {
    return valueTypeCase_ == 4;
  }
  /**
   * <code>double double_value = 4;</code>
   * @return The doubleValue.
   */
  @java.lang.Override
  public double getDoubleValue() {
    if (valueTypeCase_ == 4) {
      return (java.lang.Double) valueType_;
    }
    return 0D;
  }

  public static final int MACROS_FIELD_NUMBER = 5;
  /**
   * <code>.maptool.MacroButtonPropertiesListDto macros = 5;</code>
   * @return Whether the macros field is set.
   */
  @java.lang.Override
  public boolean hasMacros() {
    return valueTypeCase_ == 5;
  }
  /**
   * <code>.maptool.MacroButtonPropertiesListDto macros = 5;</code>
   * @return The macros.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.MacroButtonPropertiesListDto getMacros() {
    if (valueTypeCase_ == 5) {
       return (net.rptools.maptool.server.proto.MacroButtonPropertiesListDto) valueType_;
    }
    return net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.getDefaultInstance();
  }
  /**
   * <code>.maptool.MacroButtonPropertiesListDto macros = 5;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.MacroButtonPropertiesListDtoOrBuilder getMacrosOrBuilder() {
    if (valueTypeCase_ == 5) {
       return (net.rptools.maptool.server.proto.MacroButtonPropertiesListDto) valueType_;
    }
    return net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.getDefaultInstance();
  }

  public static final int LIGHT_SOURCE_FIELD_NUMBER = 6;
  /**
   * <code>.maptool.LightSourceDto light_source = 6;</code>
   * @return Whether the lightSource field is set.
   */
  @java.lang.Override
  public boolean hasLightSource() {
    return valueTypeCase_ == 6;
  }
  /**
   * <code>.maptool.LightSourceDto light_source = 6;</code>
   * @return The lightSource.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.LightSourceDto getLightSource() {
    if (valueTypeCase_ == 6) {
       return (net.rptools.maptool.server.proto.LightSourceDto) valueType_;
    }
    return net.rptools.maptool.server.proto.LightSourceDto.getDefaultInstance();
  }
  /**
   * <code>.maptool.LightSourceDto light_source = 6;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.LightSourceDtoOrBuilder getLightSourceOrBuilder() {
    if (valueTypeCase_ == 6) {
       return (net.rptools.maptool.server.proto.LightSourceDto) valueType_;
    }
    return net.rptools.maptool.server.proto.LightSourceDto.getDefaultInstance();
  }

  public static final int AREA_FIELD_NUMBER = 7;
  /**
   * <code>.maptool.AreaDto area = 7;</code>
   * @return Whether the area field is set.
   */
  @java.lang.Override
  public boolean hasArea() {
    return valueTypeCase_ == 7;
  }
  /**
   * <code>.maptool.AreaDto area = 7;</code>
   * @return The area.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.AreaDto getArea() {
    if (valueTypeCase_ == 7) {
       return (net.rptools.maptool.server.proto.drawing.AreaDto) valueType_;
    }
    return net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance();
  }
  /**
   * <code>.maptool.AreaDto area = 7;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder getAreaOrBuilder() {
    if (valueTypeCase_ == 7) {
       return (net.rptools.maptool.server.proto.drawing.AreaDto) valueType_;
    }
    return net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance();
  }

  public static final int STRING_VALUES_FIELD_NUMBER = 8;
  /**
   * <code>.maptool.StringListDto string_values = 8;</code>
   * @return Whether the stringValues field is set.
   */
  @java.lang.Override
  public boolean hasStringValues() {
    return valueTypeCase_ == 8;
  }
  /**
   * <code>.maptool.StringListDto string_values = 8;</code>
   * @return The stringValues.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.StringListDto getStringValues() {
    if (valueTypeCase_ == 8) {
       return (net.rptools.maptool.server.proto.StringListDto) valueType_;
    }
    return net.rptools.maptool.server.proto.StringListDto.getDefaultInstance();
  }
  /**
   * <code>.maptool.StringListDto string_values = 8;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.StringListDtoOrBuilder getStringValuesOrBuilder() {
    if (valueTypeCase_ == 8) {
       return (net.rptools.maptool.server.proto.StringListDto) valueType_;
    }
    return net.rptools.maptool.server.proto.StringListDto.getDefaultInstance();
  }

  public static final int GRID_FIELD_NUMBER = 9;
  /**
   * <code>.maptool.GridDto grid = 9;</code>
   * @return Whether the grid field is set.
   */
  @java.lang.Override
  public boolean hasGrid() {
    return valueTypeCase_ == 9;
  }
  /**
   * <code>.maptool.GridDto grid = 9;</code>
   * @return The grid.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.GridDto getGrid() {
    if (valueTypeCase_ == 9) {
       return (net.rptools.maptool.server.proto.GridDto) valueType_;
    }
    return net.rptools.maptool.server.proto.GridDto.getDefaultInstance();
  }
  /**
   * <code>.maptool.GridDto grid = 9;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.GridDtoOrBuilder getGridOrBuilder() {
    if (valueTypeCase_ == 9) {
       return (net.rptools.maptool.server.proto.GridDto) valueType_;
    }
    return net.rptools.maptool.server.proto.GridDto.getDefaultInstance();
  }

  public static final int TOKEN_FOOT_PRINT_FIELD_NUMBER = 10;
  /**
   * <code>.maptool.TokenFootPrintDto token_foot_print = 10;</code>
   * @return Whether the tokenFootPrint field is set.
   */
  @java.lang.Override
  public boolean hasTokenFootPrint() {
    return valueTypeCase_ == 10;
  }
  /**
   * <code>.maptool.TokenFootPrintDto token_foot_print = 10;</code>
   * @return The tokenFootPrint.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.TokenFootPrintDto getTokenFootPrint() {
    if (valueTypeCase_ == 10) {
       return (net.rptools.maptool.server.proto.TokenFootPrintDto) valueType_;
    }
    return net.rptools.maptool.server.proto.TokenFootPrintDto.getDefaultInstance();
  }
  /**
   * <code>.maptool.TokenFootPrintDto token_foot_print = 10;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.TokenFootPrintDtoOrBuilder getTokenFootPrintOrBuilder() {
    if (valueTypeCase_ == 10) {
       return (net.rptools.maptool.server.proto.TokenFootPrintDto) valueType_;
    }
    return net.rptools.maptool.server.proto.TokenFootPrintDto.getDefaultInstance();
  }

  public static final int TOPOLOGY_TYPE_FIELD_NUMBER = 11;
  /**
   * <code>string topology_type = 11;</code>
   * @return Whether the topologyType field is set.
   */
  public boolean hasTopologyType() {
    return valueTypeCase_ == 11;
  }
  /**
   * <code>string topology_type = 11;</code>
   * @return The topologyType.
   */
  public java.lang.String getTopologyType() {
    java.lang.Object ref = "";
    if (valueTypeCase_ == 11) {
      ref = valueType_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (valueTypeCase_ == 11) {
        valueType_ = s;
      }
      return s;
    }
  }
  /**
   * <code>string topology_type = 11;</code>
   * @return The bytes for topologyType.
   */
  public com.google.protobuf.ByteString
      getTopologyTypeBytes() {
    java.lang.Object ref = "";
    if (valueTypeCase_ == 11) {
      ref = valueType_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (valueTypeCase_ == 11) {
        valueType_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (valueTypeCase_ == 1) {
      output.writeInt32(
          1, (int)((java.lang.Integer) valueType_));
    }
    if (valueTypeCase_ == 2) {
      output.writeBool(
          2, (boolean)((java.lang.Boolean) valueType_));
    }
    if (valueTypeCase_ == 3) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, valueType_);
    }
    if (valueTypeCase_ == 4) {
      output.writeDouble(
          4, (double)((java.lang.Double) valueType_));
    }
    if (valueTypeCase_ == 5) {
      output.writeMessage(5, (net.rptools.maptool.server.proto.MacroButtonPropertiesListDto) valueType_);
    }
    if (valueTypeCase_ == 6) {
      output.writeMessage(6, (net.rptools.maptool.server.proto.LightSourceDto) valueType_);
    }
    if (valueTypeCase_ == 7) {
      output.writeMessage(7, (net.rptools.maptool.server.proto.drawing.AreaDto) valueType_);
    }
    if (valueTypeCase_ == 8) {
      output.writeMessage(8, (net.rptools.maptool.server.proto.StringListDto) valueType_);
    }
    if (valueTypeCase_ == 9) {
      output.writeMessage(9, (net.rptools.maptool.server.proto.GridDto) valueType_);
    }
    if (valueTypeCase_ == 10) {
      output.writeMessage(10, (net.rptools.maptool.server.proto.TokenFootPrintDto) valueType_);
    }
    if (valueTypeCase_ == 11) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, valueType_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (valueTypeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            1, (int)((java.lang.Integer) valueType_));
    }
    if (valueTypeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            2, (boolean)((java.lang.Boolean) valueType_));
    }
    if (valueTypeCase_ == 3) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, valueType_);
    }
    if (valueTypeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(
            4, (double)((java.lang.Double) valueType_));
    }
    if (valueTypeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (net.rptools.maptool.server.proto.MacroButtonPropertiesListDto) valueType_);
    }
    if (valueTypeCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (net.rptools.maptool.server.proto.LightSourceDto) valueType_);
    }
    if (valueTypeCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (net.rptools.maptool.server.proto.drawing.AreaDto) valueType_);
    }
    if (valueTypeCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (net.rptools.maptool.server.proto.StringListDto) valueType_);
    }
    if (valueTypeCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (net.rptools.maptool.server.proto.GridDto) valueType_);
    }
    if (valueTypeCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (net.rptools.maptool.server.proto.TokenFootPrintDto) valueType_);
    }
    if (valueTypeCase_ == 11) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, valueType_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof net.rptools.maptool.server.proto.TokenPropertyValueDto)) {
      return super.equals(obj);
    }
    net.rptools.maptool.server.proto.TokenPropertyValueDto other = (net.rptools.maptool.server.proto.TokenPropertyValueDto) obj;

    if (!getValueTypeCase().equals(other.getValueTypeCase())) return false;
    switch (valueTypeCase_) {
      case 1:
        if (getIntValue()
            != other.getIntValue()) return false;
        break;
      case 2:
        if (getBoolValue()
            != other.getBoolValue()) return false;
        break;
      case 3:
        if (!getStringValue()
            .equals(other.getStringValue())) return false;
        break;
      case 4:
        if (java.lang.Double.doubleToLongBits(getDoubleValue())
            != java.lang.Double.doubleToLongBits(
                other.getDoubleValue())) return false;
        break;
      case 5:
        if (!getMacros()
            .equals(other.getMacros())) return false;
        break;
      case 6:
        if (!getLightSource()
            .equals(other.getLightSource())) return false;
        break;
      case 7:
        if (!getArea()
            .equals(other.getArea())) return false;
        break;
      case 8:
        if (!getStringValues()
            .equals(other.getStringValues())) return false;
        break;
      case 9:
        if (!getGrid()
            .equals(other.getGrid())) return false;
        break;
      case 10:
        if (!getTokenFootPrint()
            .equals(other.getTokenFootPrint())) return false;
        break;
      case 11:
        if (!getTopologyType()
            .equals(other.getTopologyType())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (valueTypeCase_) {
      case 1:
        hash = (37 * hash) + INT_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getIntValue();
        break;
      case 2:
        hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBoolValue());
        break;
      case 3:
        hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getStringValue().hashCode();
        break;
      case 4:
        hash = (37 * hash) + DOUBLE_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDoubleValue()));
        break;
      case 5:
        hash = (37 * hash) + MACROS_FIELD_NUMBER;
        hash = (53 * hash) + getMacros().hashCode();
        break;
      case 6:
        hash = (37 * hash) + LIGHT_SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getLightSource().hashCode();
        break;
      case 7:
        hash = (37 * hash) + AREA_FIELD_NUMBER;
        hash = (53 * hash) + getArea().hashCode();
        break;
      case 8:
        hash = (37 * hash) + STRING_VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getStringValues().hashCode();
        break;
      case 9:
        hash = (37 * hash) + GRID_FIELD_NUMBER;
        hash = (53 * hash) + getGrid().hashCode();
        break;
      case 10:
        hash = (37 * hash) + TOKEN_FOOT_PRINT_FIELD_NUMBER;
        hash = (53 * hash) + getTokenFootPrint().hashCode();
        break;
      case 11:
        hash = (37 * hash) + TOPOLOGY_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTopologyType().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static net.rptools.maptool.server.proto.TokenPropertyValueDto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.TokenPropertyValueDto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.TokenPropertyValueDto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.TokenPropertyValueDto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.TokenPropertyValueDto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.TokenPropertyValueDto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.TokenPropertyValueDto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.TokenPropertyValueDto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.TokenPropertyValueDto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.TokenPropertyValueDto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.TokenPropertyValueDto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.TokenPropertyValueDto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(net.rptools.maptool.server.proto.TokenPropertyValueDto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code maptool.TokenPropertyValueDto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maptool.TokenPropertyValueDto)
      net.rptools.maptool.server.proto.TokenPropertyValueDtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_TokenPropertyValueDto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_TokenPropertyValueDto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.rptools.maptool.server.proto.TokenPropertyValueDto.class, net.rptools.maptool.server.proto.TokenPropertyValueDto.Builder.class);
    }

    // Construct using net.rptools.maptool.server.proto.TokenPropertyValueDto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      valueTypeCase_ = 0;
      valueType_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_TokenPropertyValueDto_descriptor;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.TokenPropertyValueDto getDefaultInstanceForType() {
      return net.rptools.maptool.server.proto.TokenPropertyValueDto.getDefaultInstance();
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.TokenPropertyValueDto build() {
      net.rptools.maptool.server.proto.TokenPropertyValueDto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.TokenPropertyValueDto buildPartial() {
      net.rptools.maptool.server.proto.TokenPropertyValueDto result = new net.rptools.maptool.server.proto.TokenPropertyValueDto(this);
      if (valueTypeCase_ == 1) {
        result.valueType_ = valueType_;
      }
      if (valueTypeCase_ == 2) {
        result.valueType_ = valueType_;
      }
      if (valueTypeCase_ == 3) {
        result.valueType_ = valueType_;
      }
      if (valueTypeCase_ == 4) {
        result.valueType_ = valueType_;
      }
      if (valueTypeCase_ == 5) {
        if (macrosBuilder_ == null) {
          result.valueType_ = valueType_;
        } else {
          result.valueType_ = macrosBuilder_.build();
        }
      }
      if (valueTypeCase_ == 6) {
        if (lightSourceBuilder_ == null) {
          result.valueType_ = valueType_;
        } else {
          result.valueType_ = lightSourceBuilder_.build();
        }
      }
      if (valueTypeCase_ == 7) {
        if (areaBuilder_ == null) {
          result.valueType_ = valueType_;
        } else {
          result.valueType_ = areaBuilder_.build();
        }
      }
      if (valueTypeCase_ == 8) {
        if (stringValuesBuilder_ == null) {
          result.valueType_ = valueType_;
        } else {
          result.valueType_ = stringValuesBuilder_.build();
        }
      }
      if (valueTypeCase_ == 9) {
        if (gridBuilder_ == null) {
          result.valueType_ = valueType_;
        } else {
          result.valueType_ = gridBuilder_.build();
        }
      }
      if (valueTypeCase_ == 10) {
        if (tokenFootPrintBuilder_ == null) {
          result.valueType_ = valueType_;
        } else {
          result.valueType_ = tokenFootPrintBuilder_.build();
        }
      }
      if (valueTypeCase_ == 11) {
        result.valueType_ = valueType_;
      }
      result.valueTypeCase_ = valueTypeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof net.rptools.maptool.server.proto.TokenPropertyValueDto) {
        return mergeFrom((net.rptools.maptool.server.proto.TokenPropertyValueDto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(net.rptools.maptool.server.proto.TokenPropertyValueDto other) {
      if (other == net.rptools.maptool.server.proto.TokenPropertyValueDto.getDefaultInstance()) return this;
      switch (other.getValueTypeCase()) {
        case INT_VALUE: {
          setIntValue(other.getIntValue());
          break;
        }
        case BOOL_VALUE: {
          setBoolValue(other.getBoolValue());
          break;
        }
        case STRING_VALUE: {
          valueTypeCase_ = 3;
          valueType_ = other.valueType_;
          onChanged();
          break;
        }
        case DOUBLE_VALUE: {
          setDoubleValue(other.getDoubleValue());
          break;
        }
        case MACROS: {
          mergeMacros(other.getMacros());
          break;
        }
        case LIGHT_SOURCE: {
          mergeLightSource(other.getLightSource());
          break;
        }
        case AREA: {
          mergeArea(other.getArea());
          break;
        }
        case STRING_VALUES: {
          mergeStringValues(other.getStringValues());
          break;
        }
        case GRID: {
          mergeGrid(other.getGrid());
          break;
        }
        case TOKEN_FOOT_PRINT: {
          mergeTokenFootPrint(other.getTokenFootPrint());
          break;
        }
        case TOPOLOGY_TYPE: {
          valueTypeCase_ = 11;
          valueType_ = other.valueType_;
          onChanged();
          break;
        }
        case VALUETYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      net.rptools.maptool.server.proto.TokenPropertyValueDto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (net.rptools.maptool.server.proto.TokenPropertyValueDto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int valueTypeCase_ = 0;
    private java.lang.Object valueType_;
    public ValueTypeCase
        getValueTypeCase() {
      return ValueTypeCase.forNumber(
          valueTypeCase_);
    }

    public Builder clearValueType() {
      valueTypeCase_ = 0;
      valueType_ = null;
      onChanged();
      return this;
    }


    /**
     * <code>int32 int_value = 1;</code>
     * @return Whether the intValue field is set.
     */
    public boolean hasIntValue() {
      return valueTypeCase_ == 1;
    }
    /**
     * <code>int32 int_value = 1;</code>
     * @return The intValue.
     */
    public int getIntValue() {
      if (valueTypeCase_ == 1) {
        return (java.lang.Integer) valueType_;
      }
      return 0;
    }
    /**
     * <code>int32 int_value = 1;</code>
     * @param value The intValue to set.
     * @return This builder for chaining.
     */
    public Builder setIntValue(int value) {
      valueTypeCase_ = 1;
      valueType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 int_value = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearIntValue() {
      if (valueTypeCase_ == 1) {
        valueTypeCase_ = 0;
        valueType_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>bool bool_value = 2;</code>
     * @return Whether the boolValue field is set.
     */
    public boolean hasBoolValue() {
      return valueTypeCase_ == 2;
    }
    /**
     * <code>bool bool_value = 2;</code>
     * @return The boolValue.
     */
    public boolean getBoolValue() {
      if (valueTypeCase_ == 2) {
        return (java.lang.Boolean) valueType_;
      }
      return false;
    }
    /**
     * <code>bool bool_value = 2;</code>
     * @param value The boolValue to set.
     * @return This builder for chaining.
     */
    public Builder setBoolValue(boolean value) {
      valueTypeCase_ = 2;
      valueType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool bool_value = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearBoolValue() {
      if (valueTypeCase_ == 2) {
        valueTypeCase_ = 0;
        valueType_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>string string_value = 3;</code>
     * @return Whether the stringValue field is set.
     */
    @java.lang.Override
    public boolean hasStringValue() {
      return valueTypeCase_ == 3;
    }
    /**
     * <code>string string_value = 3;</code>
     * @return The stringValue.
     */
    @java.lang.Override
    public java.lang.String getStringValue() {
      java.lang.Object ref = "";
      if (valueTypeCase_ == 3) {
        ref = valueType_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valueTypeCase_ == 3) {
          valueType_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string string_value = 3;</code>
     * @return The bytes for stringValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = "";
      if (valueTypeCase_ == 3) {
        ref = valueType_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (valueTypeCase_ == 3) {
          valueType_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string string_value = 3;</code>
     * @param value The stringValue to set.
     * @return This builder for chaining.
     */
    public Builder setStringValue(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  valueTypeCase_ = 3;
      valueType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string string_value = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearStringValue() {
      if (valueTypeCase_ == 3) {
        valueTypeCase_ = 0;
        valueType_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <code>string string_value = 3;</code>
     * @param value The bytes for stringValue to set.
     * @return This builder for chaining.
     */
    public Builder setStringValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      valueTypeCase_ = 3;
      valueType_ = value;
      onChanged();
      return this;
    }

    /**
     * <code>double double_value = 4;</code>
     * @return Whether the doubleValue field is set.
     */
    public boolean hasDoubleValue() {
      return valueTypeCase_ == 4;
    }
    /**
     * <code>double double_value = 4;</code>
     * @return The doubleValue.
     */
    public double getDoubleValue() {
      if (valueTypeCase_ == 4) {
        return (java.lang.Double) valueType_;
      }
      return 0D;
    }
    /**
     * <code>double double_value = 4;</code>
     * @param value The doubleValue to set.
     * @return This builder for chaining.
     */
    public Builder setDoubleValue(double value) {
      valueTypeCase_ = 4;
      valueType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double double_value = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDoubleValue() {
      if (valueTypeCase_ == 4) {
        valueTypeCase_ = 0;
        valueType_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.MacroButtonPropertiesListDto, net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.Builder, net.rptools.maptool.server.proto.MacroButtonPropertiesListDtoOrBuilder> macrosBuilder_;
    /**
     * <code>.maptool.MacroButtonPropertiesListDto macros = 5;</code>
     * @return Whether the macros field is set.
     */
    @java.lang.Override
    public boolean hasMacros() {
      return valueTypeCase_ == 5;
    }
    /**
     * <code>.maptool.MacroButtonPropertiesListDto macros = 5;</code>
     * @return The macros.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.MacroButtonPropertiesListDto getMacros() {
      if (macrosBuilder_ == null) {
        if (valueTypeCase_ == 5) {
          return (net.rptools.maptool.server.proto.MacroButtonPropertiesListDto) valueType_;
        }
        return net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.getDefaultInstance();
      } else {
        if (valueTypeCase_ == 5) {
          return macrosBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.MacroButtonPropertiesListDto macros = 5;</code>
     */
    public Builder setMacros(net.rptools.maptool.server.proto.MacroButtonPropertiesListDto value) {
      if (macrosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        valueType_ = value;
        onChanged();
      } else {
        macrosBuilder_.setMessage(value);
      }
      valueTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.maptool.MacroButtonPropertiesListDto macros = 5;</code>
     */
    public Builder setMacros(
        net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.Builder builderForValue) {
      if (macrosBuilder_ == null) {
        valueType_ = builderForValue.build();
        onChanged();
      } else {
        macrosBuilder_.setMessage(builderForValue.build());
      }
      valueTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.maptool.MacroButtonPropertiesListDto macros = 5;</code>
     */
    public Builder mergeMacros(net.rptools.maptool.server.proto.MacroButtonPropertiesListDto value) {
      if (macrosBuilder_ == null) {
        if (valueTypeCase_ == 5 &&
            valueType_ != net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.getDefaultInstance()) {
          valueType_ = net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.newBuilder((net.rptools.maptool.server.proto.MacroButtonPropertiesListDto) valueType_)
              .mergeFrom(value).buildPartial();
        } else {
          valueType_ = value;
        }
        onChanged();
      } else {
        if (valueTypeCase_ == 5) {
          macrosBuilder_.mergeFrom(value);
        } else {
          macrosBuilder_.setMessage(value);
        }
      }
      valueTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.maptool.MacroButtonPropertiesListDto macros = 5;</code>
     */
    public Builder clearMacros() {
      if (macrosBuilder_ == null) {
        if (valueTypeCase_ == 5) {
          valueTypeCase_ = 0;
          valueType_ = null;
          onChanged();
        }
      } else {
        if (valueTypeCase_ == 5) {
          valueTypeCase_ = 0;
          valueType_ = null;
        }
        macrosBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.maptool.MacroButtonPropertiesListDto macros = 5;</code>
     */
    public net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.Builder getMacrosBuilder() {
      return getMacrosFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.MacroButtonPropertiesListDto macros = 5;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.MacroButtonPropertiesListDtoOrBuilder getMacrosOrBuilder() {
      if ((valueTypeCase_ == 5) && (macrosBuilder_ != null)) {
        return macrosBuilder_.getMessageOrBuilder();
      } else {
        if (valueTypeCase_ == 5) {
          return (net.rptools.maptool.server.proto.MacroButtonPropertiesListDto) valueType_;
        }
        return net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.MacroButtonPropertiesListDto macros = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.MacroButtonPropertiesListDto, net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.Builder, net.rptools.maptool.server.proto.MacroButtonPropertiesListDtoOrBuilder> 
        getMacrosFieldBuilder() {
      if (macrosBuilder_ == null) {
        if (!(valueTypeCase_ == 5)) {
          valueType_ = net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.getDefaultInstance();
        }
        macrosBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.MacroButtonPropertiesListDto, net.rptools.maptool.server.proto.MacroButtonPropertiesListDto.Builder, net.rptools.maptool.server.proto.MacroButtonPropertiesListDtoOrBuilder>(
                (net.rptools.maptool.server.proto.MacroButtonPropertiesListDto) valueType_,
                getParentForChildren(),
                isClean());
        valueType_ = null;
      }
      valueTypeCase_ = 5;
      onChanged();;
      return macrosBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.LightSourceDto, net.rptools.maptool.server.proto.LightSourceDto.Builder, net.rptools.maptool.server.proto.LightSourceDtoOrBuilder> lightSourceBuilder_;
    /**
     * <code>.maptool.LightSourceDto light_source = 6;</code>
     * @return Whether the lightSource field is set.
     */
    @java.lang.Override
    public boolean hasLightSource() {
      return valueTypeCase_ == 6;
    }
    /**
     * <code>.maptool.LightSourceDto light_source = 6;</code>
     * @return The lightSource.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.LightSourceDto getLightSource() {
      if (lightSourceBuilder_ == null) {
        if (valueTypeCase_ == 6) {
          return (net.rptools.maptool.server.proto.LightSourceDto) valueType_;
        }
        return net.rptools.maptool.server.proto.LightSourceDto.getDefaultInstance();
      } else {
        if (valueTypeCase_ == 6) {
          return lightSourceBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.LightSourceDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.LightSourceDto light_source = 6;</code>
     */
    public Builder setLightSource(net.rptools.maptool.server.proto.LightSourceDto value) {
      if (lightSourceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        valueType_ = value;
        onChanged();
      } else {
        lightSourceBuilder_.setMessage(value);
      }
      valueTypeCase_ = 6;
      return this;
    }
    /**
     * <code>.maptool.LightSourceDto light_source = 6;</code>
     */
    public Builder setLightSource(
        net.rptools.maptool.server.proto.LightSourceDto.Builder builderForValue) {
      if (lightSourceBuilder_ == null) {
        valueType_ = builderForValue.build();
        onChanged();
      } else {
        lightSourceBuilder_.setMessage(builderForValue.build());
      }
      valueTypeCase_ = 6;
      return this;
    }
    /**
     * <code>.maptool.LightSourceDto light_source = 6;</code>
     */
    public Builder mergeLightSource(net.rptools.maptool.server.proto.LightSourceDto value) {
      if (lightSourceBuilder_ == null) {
        if (valueTypeCase_ == 6 &&
            valueType_ != net.rptools.maptool.server.proto.LightSourceDto.getDefaultInstance()) {
          valueType_ = net.rptools.maptool.server.proto.LightSourceDto.newBuilder((net.rptools.maptool.server.proto.LightSourceDto) valueType_)
              .mergeFrom(value).buildPartial();
        } else {
          valueType_ = value;
        }
        onChanged();
      } else {
        if (valueTypeCase_ == 6) {
          lightSourceBuilder_.mergeFrom(value);
        } else {
          lightSourceBuilder_.setMessage(value);
        }
      }
      valueTypeCase_ = 6;
      return this;
    }
    /**
     * <code>.maptool.LightSourceDto light_source = 6;</code>
     */
    public Builder clearLightSource() {
      if (lightSourceBuilder_ == null) {
        if (valueTypeCase_ == 6) {
          valueTypeCase_ = 0;
          valueType_ = null;
          onChanged();
        }
      } else {
        if (valueTypeCase_ == 6) {
          valueTypeCase_ = 0;
          valueType_ = null;
        }
        lightSourceBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.maptool.LightSourceDto light_source = 6;</code>
     */
    public net.rptools.maptool.server.proto.LightSourceDto.Builder getLightSourceBuilder() {
      return getLightSourceFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.LightSourceDto light_source = 6;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.LightSourceDtoOrBuilder getLightSourceOrBuilder() {
      if ((valueTypeCase_ == 6) && (lightSourceBuilder_ != null)) {
        return lightSourceBuilder_.getMessageOrBuilder();
      } else {
        if (valueTypeCase_ == 6) {
          return (net.rptools.maptool.server.proto.LightSourceDto) valueType_;
        }
        return net.rptools.maptool.server.proto.LightSourceDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.LightSourceDto light_source = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.LightSourceDto, net.rptools.maptool.server.proto.LightSourceDto.Builder, net.rptools.maptool.server.proto.LightSourceDtoOrBuilder> 
        getLightSourceFieldBuilder() {
      if (lightSourceBuilder_ == null) {
        if (!(valueTypeCase_ == 6)) {
          valueType_ = net.rptools.maptool.server.proto.LightSourceDto.getDefaultInstance();
        }
        lightSourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.LightSourceDto, net.rptools.maptool.server.proto.LightSourceDto.Builder, net.rptools.maptool.server.proto.LightSourceDtoOrBuilder>(
                (net.rptools.maptool.server.proto.LightSourceDto) valueType_,
                getParentForChildren(),
                isClean());
        valueType_ = null;
      }
      valueTypeCase_ = 6;
      onChanged();;
      return lightSourceBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder> areaBuilder_;
    /**
     * <code>.maptool.AreaDto area = 7;</code>
     * @return Whether the area field is set.
     */
    @java.lang.Override
    public boolean hasArea() {
      return valueTypeCase_ == 7;
    }
    /**
     * <code>.maptool.AreaDto area = 7;</code>
     * @return The area.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.drawing.AreaDto getArea() {
      if (areaBuilder_ == null) {
        if (valueTypeCase_ == 7) {
          return (net.rptools.maptool.server.proto.drawing.AreaDto) valueType_;
        }
        return net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance();
      } else {
        if (valueTypeCase_ == 7) {
          return areaBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.AreaDto area = 7;</code>
     */
    public Builder setArea(net.rptools.maptool.server.proto.drawing.AreaDto value) {
      if (areaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        valueType_ = value;
        onChanged();
      } else {
        areaBuilder_.setMessage(value);
      }
      valueTypeCase_ = 7;
      return this;
    }
    /**
     * <code>.maptool.AreaDto area = 7;</code>
     */
    public Builder setArea(
        net.rptools.maptool.server.proto.drawing.AreaDto.Builder builderForValue) {
      if (areaBuilder_ == null) {
        valueType_ = builderForValue.build();
        onChanged();
      } else {
        areaBuilder_.setMessage(builderForValue.build());
      }
      valueTypeCase_ = 7;
      return this;
    }
    /**
     * <code>.maptool.AreaDto area = 7;</code>
     */
    public Builder mergeArea(net.rptools.maptool.server.proto.drawing.AreaDto value) {
      if (areaBuilder_ == null) {
        if (valueTypeCase_ == 7 &&
            valueType_ != net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance()) {
          valueType_ = net.rptools.maptool.server.proto.drawing.AreaDto.newBuilder((net.rptools.maptool.server.proto.drawing.AreaDto) valueType_)
              .mergeFrom(value).buildPartial();
        } else {
          valueType_ = value;
        }
        onChanged();
      } else {
        if (valueTypeCase_ == 7) {
          areaBuilder_.mergeFrom(value);
        } else {
          areaBuilder_.setMessage(value);
        }
      }
      valueTypeCase_ = 7;
      return this;
    }
    /**
     * <code>.maptool.AreaDto area = 7;</code>
     */
    public Builder clearArea() {
      if (areaBuilder_ == null) {
        if (valueTypeCase_ == 7) {
          valueTypeCase_ = 0;
          valueType_ = null;
          onChanged();
        }
      } else {
        if (valueTypeCase_ == 7) {
          valueTypeCase_ = 0;
          valueType_ = null;
        }
        areaBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.maptool.AreaDto area = 7;</code>
     */
    public net.rptools.maptool.server.proto.drawing.AreaDto.Builder getAreaBuilder() {
      return getAreaFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.AreaDto area = 7;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder getAreaOrBuilder() {
      if ((valueTypeCase_ == 7) && (areaBuilder_ != null)) {
        return areaBuilder_.getMessageOrBuilder();
      } else {
        if (valueTypeCase_ == 7) {
          return (net.rptools.maptool.server.proto.drawing.AreaDto) valueType_;
        }
        return net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.AreaDto area = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder> 
        getAreaFieldBuilder() {
      if (areaBuilder_ == null) {
        if (!(valueTypeCase_ == 7)) {
          valueType_ = net.rptools.maptool.server.proto.drawing.AreaDto.getDefaultInstance();
        }
        areaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.AreaDto, net.rptools.maptool.server.proto.drawing.AreaDto.Builder, net.rptools.maptool.server.proto.drawing.AreaDtoOrBuilder>(
                (net.rptools.maptool.server.proto.drawing.AreaDto) valueType_,
                getParentForChildren(),
                isClean());
        valueType_ = null;
      }
      valueTypeCase_ = 7;
      onChanged();;
      return areaBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.StringListDto, net.rptools.maptool.server.proto.StringListDto.Builder, net.rptools.maptool.server.proto.StringListDtoOrBuilder> stringValuesBuilder_;
    /**
     * <code>.maptool.StringListDto string_values = 8;</code>
     * @return Whether the stringValues field is set.
     */
    @java.lang.Override
    public boolean hasStringValues() {
      return valueTypeCase_ == 8;
    }
    /**
     * <code>.maptool.StringListDto string_values = 8;</code>
     * @return The stringValues.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.StringListDto getStringValues() {
      if (stringValuesBuilder_ == null) {
        if (valueTypeCase_ == 8) {
          return (net.rptools.maptool.server.proto.StringListDto) valueType_;
        }
        return net.rptools.maptool.server.proto.StringListDto.getDefaultInstance();
      } else {
        if (valueTypeCase_ == 8) {
          return stringValuesBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.StringListDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.StringListDto string_values = 8;</code>
     */
    public Builder setStringValues(net.rptools.maptool.server.proto.StringListDto value) {
      if (stringValuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        valueType_ = value;
        onChanged();
      } else {
        stringValuesBuilder_.setMessage(value);
      }
      valueTypeCase_ = 8;
      return this;
    }
    /**
     * <code>.maptool.StringListDto string_values = 8;</code>
     */
    public Builder setStringValues(
        net.rptools.maptool.server.proto.StringListDto.Builder builderForValue) {
      if (stringValuesBuilder_ == null) {
        valueType_ = builderForValue.build();
        onChanged();
      } else {
        stringValuesBuilder_.setMessage(builderForValue.build());
      }
      valueTypeCase_ = 8;
      return this;
    }
    /**
     * <code>.maptool.StringListDto string_values = 8;</code>
     */
    public Builder mergeStringValues(net.rptools.maptool.server.proto.StringListDto value) {
      if (stringValuesBuilder_ == null) {
        if (valueTypeCase_ == 8 &&
            valueType_ != net.rptools.maptool.server.proto.StringListDto.getDefaultInstance()) {
          valueType_ = net.rptools.maptool.server.proto.StringListDto.newBuilder((net.rptools.maptool.server.proto.StringListDto) valueType_)
              .mergeFrom(value).buildPartial();
        } else {
          valueType_ = value;
        }
        onChanged();
      } else {
        if (valueTypeCase_ == 8) {
          stringValuesBuilder_.mergeFrom(value);
        } else {
          stringValuesBuilder_.setMessage(value);
        }
      }
      valueTypeCase_ = 8;
      return this;
    }
    /**
     * <code>.maptool.StringListDto string_values = 8;</code>
     */
    public Builder clearStringValues() {
      if (stringValuesBuilder_ == null) {
        if (valueTypeCase_ == 8) {
          valueTypeCase_ = 0;
          valueType_ = null;
          onChanged();
        }
      } else {
        if (valueTypeCase_ == 8) {
          valueTypeCase_ = 0;
          valueType_ = null;
        }
        stringValuesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.maptool.StringListDto string_values = 8;</code>
     */
    public net.rptools.maptool.server.proto.StringListDto.Builder getStringValuesBuilder() {
      return getStringValuesFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.StringListDto string_values = 8;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.StringListDtoOrBuilder getStringValuesOrBuilder() {
      if ((valueTypeCase_ == 8) && (stringValuesBuilder_ != null)) {
        return stringValuesBuilder_.getMessageOrBuilder();
      } else {
        if (valueTypeCase_ == 8) {
          return (net.rptools.maptool.server.proto.StringListDto) valueType_;
        }
        return net.rptools.maptool.server.proto.StringListDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.StringListDto string_values = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.StringListDto, net.rptools.maptool.server.proto.StringListDto.Builder, net.rptools.maptool.server.proto.StringListDtoOrBuilder> 
        getStringValuesFieldBuilder() {
      if (stringValuesBuilder_ == null) {
        if (!(valueTypeCase_ == 8)) {
          valueType_ = net.rptools.maptool.server.proto.StringListDto.getDefaultInstance();
        }
        stringValuesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.StringListDto, net.rptools.maptool.server.proto.StringListDto.Builder, net.rptools.maptool.server.proto.StringListDtoOrBuilder>(
                (net.rptools.maptool.server.proto.StringListDto) valueType_,
                getParentForChildren(),
                isClean());
        valueType_ = null;
      }
      valueTypeCase_ = 8;
      onChanged();;
      return stringValuesBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.GridDto, net.rptools.maptool.server.proto.GridDto.Builder, net.rptools.maptool.server.proto.GridDtoOrBuilder> gridBuilder_;
    /**
     * <code>.maptool.GridDto grid = 9;</code>
     * @return Whether the grid field is set.
     */
    @java.lang.Override
    public boolean hasGrid() {
      return valueTypeCase_ == 9;
    }
    /**
     * <code>.maptool.GridDto grid = 9;</code>
     * @return The grid.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.GridDto getGrid() {
      if (gridBuilder_ == null) {
        if (valueTypeCase_ == 9) {
          return (net.rptools.maptool.server.proto.GridDto) valueType_;
        }
        return net.rptools.maptool.server.proto.GridDto.getDefaultInstance();
      } else {
        if (valueTypeCase_ == 9) {
          return gridBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.GridDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.GridDto grid = 9;</code>
     */
    public Builder setGrid(net.rptools.maptool.server.proto.GridDto value) {
      if (gridBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        valueType_ = value;
        onChanged();
      } else {
        gridBuilder_.setMessage(value);
      }
      valueTypeCase_ = 9;
      return this;
    }
    /**
     * <code>.maptool.GridDto grid = 9;</code>
     */
    public Builder setGrid(
        net.rptools.maptool.server.proto.GridDto.Builder builderForValue) {
      if (gridBuilder_ == null) {
        valueType_ = builderForValue.build();
        onChanged();
      } else {
        gridBuilder_.setMessage(builderForValue.build());
      }
      valueTypeCase_ = 9;
      return this;
    }
    /**
     * <code>.maptool.GridDto grid = 9;</code>
     */
    public Builder mergeGrid(net.rptools.maptool.server.proto.GridDto value) {
      if (gridBuilder_ == null) {
        if (valueTypeCase_ == 9 &&
            valueType_ != net.rptools.maptool.server.proto.GridDto.getDefaultInstance()) {
          valueType_ = net.rptools.maptool.server.proto.GridDto.newBuilder((net.rptools.maptool.server.proto.GridDto) valueType_)
              .mergeFrom(value).buildPartial();
        } else {
          valueType_ = value;
        }
        onChanged();
      } else {
        if (valueTypeCase_ == 9) {
          gridBuilder_.mergeFrom(value);
        } else {
          gridBuilder_.setMessage(value);
        }
      }
      valueTypeCase_ = 9;
      return this;
    }
    /**
     * <code>.maptool.GridDto grid = 9;</code>
     */
    public Builder clearGrid() {
      if (gridBuilder_ == null) {
        if (valueTypeCase_ == 9) {
          valueTypeCase_ = 0;
          valueType_ = null;
          onChanged();
        }
      } else {
        if (valueTypeCase_ == 9) {
          valueTypeCase_ = 0;
          valueType_ = null;
        }
        gridBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.maptool.GridDto grid = 9;</code>
     */
    public net.rptools.maptool.server.proto.GridDto.Builder getGridBuilder() {
      return getGridFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.GridDto grid = 9;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.GridDtoOrBuilder getGridOrBuilder() {
      if ((valueTypeCase_ == 9) && (gridBuilder_ != null)) {
        return gridBuilder_.getMessageOrBuilder();
      } else {
        if (valueTypeCase_ == 9) {
          return (net.rptools.maptool.server.proto.GridDto) valueType_;
        }
        return net.rptools.maptool.server.proto.GridDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.GridDto grid = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.GridDto, net.rptools.maptool.server.proto.GridDto.Builder, net.rptools.maptool.server.proto.GridDtoOrBuilder> 
        getGridFieldBuilder() {
      if (gridBuilder_ == null) {
        if (!(valueTypeCase_ == 9)) {
          valueType_ = net.rptools.maptool.server.proto.GridDto.getDefaultInstance();
        }
        gridBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.GridDto, net.rptools.maptool.server.proto.GridDto.Builder, net.rptools.maptool.server.proto.GridDtoOrBuilder>(
                (net.rptools.maptool.server.proto.GridDto) valueType_,
                getParentForChildren(),
                isClean());
        valueType_ = null;
      }
      valueTypeCase_ = 9;
      onChanged();;
      return gridBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.TokenFootPrintDto, net.rptools.maptool.server.proto.TokenFootPrintDto.Builder, net.rptools.maptool.server.proto.TokenFootPrintDtoOrBuilder> tokenFootPrintBuilder_;
    /**
     * <code>.maptool.TokenFootPrintDto token_foot_print = 10;</code>
     * @return Whether the tokenFootPrint field is set.
     */
    @java.lang.Override
    public boolean hasTokenFootPrint() {
      return valueTypeCase_ == 10;
    }
    /**
     * <code>.maptool.TokenFootPrintDto token_foot_print = 10;</code>
     * @return The tokenFootPrint.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.TokenFootPrintDto getTokenFootPrint() {
      if (tokenFootPrintBuilder_ == null) {
        if (valueTypeCase_ == 10) {
          return (net.rptools.maptool.server.proto.TokenFootPrintDto) valueType_;
        }
        return net.rptools.maptool.server.proto.TokenFootPrintDto.getDefaultInstance();
      } else {
        if (valueTypeCase_ == 10) {
          return tokenFootPrintBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.TokenFootPrintDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.TokenFootPrintDto token_foot_print = 10;</code>
     */
    public Builder setTokenFootPrint(net.rptools.maptool.server.proto.TokenFootPrintDto value) {
      if (tokenFootPrintBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        valueType_ = value;
        onChanged();
      } else {
        tokenFootPrintBuilder_.setMessage(value);
      }
      valueTypeCase_ = 10;
      return this;
    }
    /**
     * <code>.maptool.TokenFootPrintDto token_foot_print = 10;</code>
     */
    public Builder setTokenFootPrint(
        net.rptools.maptool.server.proto.TokenFootPrintDto.Builder builderForValue) {
      if (tokenFootPrintBuilder_ == null) {
        valueType_ = builderForValue.build();
        onChanged();
      } else {
        tokenFootPrintBuilder_.setMessage(builderForValue.build());
      }
      valueTypeCase_ = 10;
      return this;
    }
    /**
     * <code>.maptool.TokenFootPrintDto token_foot_print = 10;</code>
     */
    public Builder mergeTokenFootPrint(net.rptools.maptool.server.proto.TokenFootPrintDto value) {
      if (tokenFootPrintBuilder_ == null) {
        if (valueTypeCase_ == 10 &&
            valueType_ != net.rptools.maptool.server.proto.TokenFootPrintDto.getDefaultInstance()) {
          valueType_ = net.rptools.maptool.server.proto.TokenFootPrintDto.newBuilder((net.rptools.maptool.server.proto.TokenFootPrintDto) valueType_)
              .mergeFrom(value).buildPartial();
        } else {
          valueType_ = value;
        }
        onChanged();
      } else {
        if (valueTypeCase_ == 10) {
          tokenFootPrintBuilder_.mergeFrom(value);
        } else {
          tokenFootPrintBuilder_.setMessage(value);
        }
      }
      valueTypeCase_ = 10;
      return this;
    }
    /**
     * <code>.maptool.TokenFootPrintDto token_foot_print = 10;</code>
     */
    public Builder clearTokenFootPrint() {
      if (tokenFootPrintBuilder_ == null) {
        if (valueTypeCase_ == 10) {
          valueTypeCase_ = 0;
          valueType_ = null;
          onChanged();
        }
      } else {
        if (valueTypeCase_ == 10) {
          valueTypeCase_ = 0;
          valueType_ = null;
        }
        tokenFootPrintBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.maptool.TokenFootPrintDto token_foot_print = 10;</code>
     */
    public net.rptools.maptool.server.proto.TokenFootPrintDto.Builder getTokenFootPrintBuilder() {
      return getTokenFootPrintFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.TokenFootPrintDto token_foot_print = 10;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.TokenFootPrintDtoOrBuilder getTokenFootPrintOrBuilder() {
      if ((valueTypeCase_ == 10) && (tokenFootPrintBuilder_ != null)) {
        return tokenFootPrintBuilder_.getMessageOrBuilder();
      } else {
        if (valueTypeCase_ == 10) {
          return (net.rptools.maptool.server.proto.TokenFootPrintDto) valueType_;
        }
        return net.rptools.maptool.server.proto.TokenFootPrintDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.TokenFootPrintDto token_foot_print = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.TokenFootPrintDto, net.rptools.maptool.server.proto.TokenFootPrintDto.Builder, net.rptools.maptool.server.proto.TokenFootPrintDtoOrBuilder> 
        getTokenFootPrintFieldBuilder() {
      if (tokenFootPrintBuilder_ == null) {
        if (!(valueTypeCase_ == 10)) {
          valueType_ = net.rptools.maptool.server.proto.TokenFootPrintDto.getDefaultInstance();
        }
        tokenFootPrintBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.TokenFootPrintDto, net.rptools.maptool.server.proto.TokenFootPrintDto.Builder, net.rptools.maptool.server.proto.TokenFootPrintDtoOrBuilder>(
                (net.rptools.maptool.server.proto.TokenFootPrintDto) valueType_,
                getParentForChildren(),
                isClean());
        valueType_ = null;
      }
      valueTypeCase_ = 10;
      onChanged();;
      return tokenFootPrintBuilder_;
    }

    /**
     * <code>string topology_type = 11;</code>
     * @return Whether the topologyType field is set.
     */
    @java.lang.Override
    public boolean hasTopologyType() {
      return valueTypeCase_ == 11;
    }
    /**
     * <code>string topology_type = 11;</code>
     * @return The topologyType.
     */
    @java.lang.Override
    public java.lang.String getTopologyType() {
      java.lang.Object ref = "";
      if (valueTypeCase_ == 11) {
        ref = valueType_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valueTypeCase_ == 11) {
          valueType_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string topology_type = 11;</code>
     * @return The bytes for topologyType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTopologyTypeBytes() {
      java.lang.Object ref = "";
      if (valueTypeCase_ == 11) {
        ref = valueType_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (valueTypeCase_ == 11) {
          valueType_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string topology_type = 11;</code>
     * @param value The topologyType to set.
     * @return This builder for chaining.
     */
    public Builder setTopologyType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  valueTypeCase_ = 11;
      valueType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string topology_type = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearTopologyType() {
      if (valueTypeCase_ == 11) {
        valueTypeCase_ = 0;
        valueType_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <code>string topology_type = 11;</code>
     * @param value The bytes for topologyType to set.
     * @return This builder for chaining.
     */
    public Builder setTopologyTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      valueTypeCase_ = 11;
      valueType_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maptool.TokenPropertyValueDto)
  }

  // @@protoc_insertion_point(class_scope:maptool.TokenPropertyValueDto)
  private static final net.rptools.maptool.server.proto.TokenPropertyValueDto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new net.rptools.maptool.server.proto.TokenPropertyValueDto();
  }

  public static net.rptools.maptool.server.proto.TokenPropertyValueDto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TokenPropertyValueDto>
      PARSER = new com.google.protobuf.AbstractParser<TokenPropertyValueDto>() {
    @java.lang.Override
    public TokenPropertyValueDto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TokenPropertyValueDto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TokenPropertyValueDto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TokenPropertyValueDto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public net.rptools.maptool.server.proto.TokenPropertyValueDto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

