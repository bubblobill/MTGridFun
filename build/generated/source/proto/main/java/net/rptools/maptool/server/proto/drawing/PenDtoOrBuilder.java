// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: drawing_dto.proto

package net.rptools.maptool.server.proto.drawing;

public interface PenDtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:maptool.PenDto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.maptool.PenDto.mode foreground_mode = 1;</code>
   * @return The enum numeric value on the wire for foregroundMode.
   */
  int getForegroundModeValue();
  /**
   * <code>.maptool.PenDto.mode foreground_mode = 1;</code>
   * @return The foregroundMode.
   */
  net.rptools.maptool.server.proto.drawing.PenDto.mode getForegroundMode();

  /**
   * <code>.maptool.DrawablePaintDto foreground_color = 2;</code>
   * @return Whether the foregroundColor field is set.
   */
  boolean hasForegroundColor();
  /**
   * <code>.maptool.DrawablePaintDto foreground_color = 2;</code>
   * @return The foregroundColor.
   */
  net.rptools.maptool.server.proto.drawing.DrawablePaintDto getForegroundColor();
  /**
   * <code>.maptool.DrawablePaintDto foreground_color = 2;</code>
   */
  net.rptools.maptool.server.proto.drawing.DrawablePaintDtoOrBuilder getForegroundColorOrBuilder();

  /**
   * <code>.maptool.PenDto.mode background_mode = 3;</code>
   * @return The enum numeric value on the wire for backgroundMode.
   */
  int getBackgroundModeValue();
  /**
   * <code>.maptool.PenDto.mode background_mode = 3;</code>
   * @return The backgroundMode.
   */
  net.rptools.maptool.server.proto.drawing.PenDto.mode getBackgroundMode();

  /**
   * <code>.maptool.DrawablePaintDto background_color = 4;</code>
   * @return Whether the backgroundColor field is set.
   */
  boolean hasBackgroundColor();
  /**
   * <code>.maptool.DrawablePaintDto background_color = 4;</code>
   * @return The backgroundColor.
   */
  net.rptools.maptool.server.proto.drawing.DrawablePaintDto getBackgroundColor();
  /**
   * <code>.maptool.DrawablePaintDto background_color = 4;</code>
   */
  net.rptools.maptool.server.proto.drawing.DrawablePaintDtoOrBuilder getBackgroundColorOrBuilder();

  /**
   * <code>float thickness = 5;</code>
   * @return The thickness.
   */
  float getThickness();

  /**
   * <code>bool eraser = 6;</code>
   * @return The eraser.
   */
  boolean getEraser();

  /**
   * <code>bool square_cap = 7;</code>
   * @return The squareCap.
   */
  boolean getSquareCap();

  /**
   * <code>float opacity = 8;</code>
   * @return The opacity.
   */
  float getOpacity();
}
