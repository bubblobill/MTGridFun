// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_transfer_objects.proto

package net.rptools.maptool.server.proto;

/**
 * Protobuf type {@code maptool.CampaignPropertiesDto}
 */
public final class CampaignPropertiesDto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maptool.CampaignPropertiesDto)
    CampaignPropertiesDtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CampaignPropertiesDto.newBuilder() to construct.
  private CampaignPropertiesDto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CampaignPropertiesDto() {
    tokenStates_ = java.util.Collections.emptyList();
    tokenBars_ = java.util.Collections.emptyList();
    remoteRepositories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    lookupTables_ = java.util.Collections.emptyList();
    sightTypes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CampaignPropertiesDto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CampaignPropertiesDto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              tokenTypes_ = com.google.protobuf.MapField.newMapField(
                  TokenTypesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto>
            tokenTypes__ = input.readMessage(
                TokenTypesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            tokenTypes_.getMutableMap().put(
                tokenTypes__.getKey(), tokenTypes__.getValue());
            break;
          }
          case 18: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (defaultSightType_ != null) {
              subBuilder = defaultSightType_.toBuilder();
            }
            defaultSightType_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(defaultSightType_);
              defaultSightType_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              tokenStates_ = new java.util.ArrayList<net.rptools.maptool.server.proto.BooleanTokenOverlayDto>();
              mutable_bitField0_ |= 0x00000002;
            }
            tokenStates_.add(
                input.readMessage(net.rptools.maptool.server.proto.BooleanTokenOverlayDto.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              tokenBars_ = new java.util.ArrayList<net.rptools.maptool.server.proto.BarTokenOverlayDto>();
              mutable_bitField0_ |= 0x00000004;
            }
            tokenBars_.add(
                input.readMessage(net.rptools.maptool.server.proto.BarTokenOverlayDto.parser(), extensionRegistry));
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              characterSheets_ = com.google.protobuf.MapField.newMapField(
                  CharacterSheetsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000008;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            characterSheets__ = input.readMessage(
                CharacterSheetsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            characterSheets_.getMutableMap().put(
                characterSheets__.getKey(), characterSheets__.getValue());
            break;
          }
          case 48: {

            initiativeOwnerPermissions_ = input.readBool();
            break;
          }
          case 56: {

            initiativeMovementLock_ = input.readBool();
            break;
          }
          case 64: {

            initiativeUseReverseSort_ = input.readBool();
            break;
          }
          case 72: {

            initiativePanelButtonsDisabled_ = input.readBool();
            break;
          }
          case 82: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              lightSources_ = com.google.protobuf.MapField.newMapField(
                  LightSourcesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000010;
            }
            com.google.protobuf.MapEntry<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto>
            lightSources__ = input.readMessage(
                LightSourcesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            lightSources_.getMutableMap().put(
                lightSources__.getKey(), lightSources__.getValue());
            break;
          }
          case 90: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000020) != 0)) {
              remoteRepositories_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000020;
            }
            remoteRepositories_.add(s);
            break;
          }
          case 98: {
            if (!((mutable_bitField0_ & 0x00000040) != 0)) {
              lookupTables_ = new java.util.ArrayList<net.rptools.maptool.server.proto.LookupTableDto>();
              mutable_bitField0_ |= 0x00000040;
            }
            lookupTables_.add(
                input.readMessage(net.rptools.maptool.server.proto.LookupTableDto.parser(), extensionRegistry));
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00000080) != 0)) {
              sightTypes_ = new java.util.ArrayList<net.rptools.maptool.server.proto.SightTypeDto>();
              mutable_bitField0_ |= 0x00000080;
            }
            sightTypes_.add(
                input.readMessage(net.rptools.maptool.server.proto.SightTypeDto.parser(), extensionRegistry));
            break;
          }
          case 114: {
            if (!((mutable_bitField0_ & 0x00000100) != 0)) {
              tokenTypeStatSheet_ = com.google.protobuf.MapField.newMapField(
                  TokenTypeStatSheetDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000100;
            }
            com.google.protobuf.MapEntry<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto>
            tokenTypeStatSheet__ = input.readMessage(
                TokenTypeStatSheetDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            tokenTypeStatSheet_.getMutableMap().put(
                tokenTypeStatSheet__.getKey(), tokenTypeStatSheet__.getValue());
            break;
          }
          case 122: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (defaultTokenPropertyType_ != null) {
              subBuilder = defaultTokenPropertyType_.toBuilder();
            }
            defaultTokenPropertyType_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(defaultTokenPropertyType_);
              defaultTokenPropertyType_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        tokenStates_ = java.util.Collections.unmodifiableList(tokenStates_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        tokenBars_ = java.util.Collections.unmodifiableList(tokenBars_);
      }
      if (((mutable_bitField0_ & 0x00000020) != 0)) {
        remoteRepositories_ = remoteRepositories_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000040) != 0)) {
        lookupTables_ = java.util.Collections.unmodifiableList(lookupTables_);
      }
      if (((mutable_bitField0_ & 0x00000080) != 0)) {
        sightTypes_ = java.util.Collections.unmodifiableList(sightTypes_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignPropertiesDto_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 1:
        return internalGetTokenTypes();
      case 5:
        return internalGetCharacterSheets();
      case 10:
        return internalGetLightSources();
      case 14:
        return internalGetTokenTypeStatSheet();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignPropertiesDto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            net.rptools.maptool.server.proto.CampaignPropertiesDto.class, net.rptools.maptool.server.proto.CampaignPropertiesDto.Builder.class);
  }

  public static final int TOKEN_TYPES_FIELD_NUMBER = 1;
  private static final class TokenTypesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto>newDefaultInstance(
                net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignPropertiesDto_TokenTypesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                net.rptools.maptool.server.proto.TokenPropertyListDto.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto> tokenTypes_;
  private com.google.protobuf.MapField<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto>
  internalGetTokenTypes() {
    if (tokenTypes_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          TokenTypesDefaultEntryHolder.defaultEntry);
    }
    return tokenTypes_;
  }

  public int getTokenTypesCount() {
    return internalGetTokenTypes().getMap().size();
  }
  /**
   * <code>map&lt;string, .maptool.TokenPropertyListDto&gt; token_types = 1;</code>
   */

  @java.lang.Override
  public boolean containsTokenTypes(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetTokenTypes().getMap().containsKey(key);
  }
  /**
   * Use {@link #getTokenTypesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto> getTokenTypes() {
    return getTokenTypesMap();
  }
  /**
   * <code>map&lt;string, .maptool.TokenPropertyListDto&gt; token_types = 1;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto> getTokenTypesMap() {
    return internalGetTokenTypes().getMap();
  }
  /**
   * <code>map&lt;string, .maptool.TokenPropertyListDto&gt; token_types = 1;</code>
   */
  @java.lang.Override

  public net.rptools.maptool.server.proto.TokenPropertyListDto getTokenTypesOrDefault(
      java.lang.String key,
      net.rptools.maptool.server.proto.TokenPropertyListDto defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto> map =
        internalGetTokenTypes().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .maptool.TokenPropertyListDto&gt; token_types = 1;</code>
   */
  @java.lang.Override

  public net.rptools.maptool.server.proto.TokenPropertyListDto getTokenTypesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto> map =
        internalGetTokenTypes().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int DEFAULT_SIGHT_TYPE_FIELD_NUMBER = 2;
  private com.google.protobuf.StringValue defaultSightType_;
  /**
   * <code>.google.protobuf.StringValue default_sight_type = 2;</code>
   * @return Whether the defaultSightType field is set.
   */
  @java.lang.Override
  public boolean hasDefaultSightType() {
    return defaultSightType_ != null;
  }
  /**
   * <code>.google.protobuf.StringValue default_sight_type = 2;</code>
   * @return The defaultSightType.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getDefaultSightType() {
    return defaultSightType_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : defaultSightType_;
  }
  /**
   * <code>.google.protobuf.StringValue default_sight_type = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getDefaultSightTypeOrBuilder() {
    return getDefaultSightType();
  }

  public static final int TOKEN_STATES_FIELD_NUMBER = 3;
  private java.util.List<net.rptools.maptool.server.proto.BooleanTokenOverlayDto> tokenStates_;
  /**
   * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.BooleanTokenOverlayDto> getTokenStatesList() {
    return tokenStates_;
  }
  /**
   * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.BooleanTokenOverlayDtoOrBuilder> 
      getTokenStatesOrBuilderList() {
    return tokenStates_;
  }
  /**
   * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
   */
  @java.lang.Override
  public int getTokenStatesCount() {
    return tokenStates_.size();
  }
  /**
   * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.BooleanTokenOverlayDto getTokenStates(int index) {
    return tokenStates_.get(index);
  }
  /**
   * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.BooleanTokenOverlayDtoOrBuilder getTokenStatesOrBuilder(
      int index) {
    return tokenStates_.get(index);
  }

  public static final int TOKEN_BARS_FIELD_NUMBER = 4;
  private java.util.List<net.rptools.maptool.server.proto.BarTokenOverlayDto> tokenBars_;
  /**
   * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.BarTokenOverlayDto> getTokenBarsList() {
    return tokenBars_;
  }
  /**
   * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.BarTokenOverlayDtoOrBuilder> 
      getTokenBarsOrBuilderList() {
    return tokenBars_;
  }
  /**
   * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
   */
  @java.lang.Override
  public int getTokenBarsCount() {
    return tokenBars_.size();
  }
  /**
   * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.BarTokenOverlayDto getTokenBars(int index) {
    return tokenBars_.get(index);
  }
  /**
   * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.BarTokenOverlayDtoOrBuilder getTokenBarsOrBuilder(
      int index) {
    return tokenBars_.get(index);
  }

  public static final int CHARACTER_SHEETS_FIELD_NUMBER = 5;
  private static final class CharacterSheetsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignPropertiesDto_CharacterSheetsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> characterSheets_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetCharacterSheets() {
    if (characterSheets_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          CharacterSheetsDefaultEntryHolder.defaultEntry);
    }
    return characterSheets_;
  }

  public int getCharacterSheetsCount() {
    return internalGetCharacterSheets().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; character_sheets = 5;</code>
   */

  @java.lang.Override
  public boolean containsCharacterSheets(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetCharacterSheets().getMap().containsKey(key);
  }
  /**
   * Use {@link #getCharacterSheetsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getCharacterSheets() {
    return getCharacterSheetsMap();
  }
  /**
   * <code>map&lt;string, string&gt; character_sheets = 5;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getCharacterSheetsMap() {
    return internalGetCharacterSheets().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; character_sheets = 5;</code>
   */
  @java.lang.Override

  public java.lang.String getCharacterSheetsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetCharacterSheets().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; character_sheets = 5;</code>
   */
  @java.lang.Override

  public java.lang.String getCharacterSheetsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetCharacterSheets().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int INITIATIVE_OWNER_PERMISSIONS_FIELD_NUMBER = 6;
  private boolean initiativeOwnerPermissions_;
  /**
   * <code>bool initiative_owner_permissions = 6;</code>
   * @return The initiativeOwnerPermissions.
   */
  @java.lang.Override
  public boolean getInitiativeOwnerPermissions() {
    return initiativeOwnerPermissions_;
  }

  public static final int INITIATIVE_MOVEMENTLOCK_FIELD_NUMBER = 7;
  private boolean initiativeMovementLock_;
  /**
   * <code>bool initiative_movementLock = 7;</code>
   * @return The initiativeMovementLock.
   */
  @java.lang.Override
  public boolean getInitiativeMovementLock() {
    return initiativeMovementLock_;
  }

  public static final int INITIATIVE_USE_REVERSE_SORT_FIELD_NUMBER = 8;
  private boolean initiativeUseReverseSort_;
  /**
   * <code>bool initiative_use_reverse_sort = 8;</code>
   * @return The initiativeUseReverseSort.
   */
  @java.lang.Override
  public boolean getInitiativeUseReverseSort() {
    return initiativeUseReverseSort_;
  }

  public static final int INITIATIVE_PANEL_BUTTONS_DISABLED_FIELD_NUMBER = 9;
  private boolean initiativePanelButtonsDisabled_;
  /**
   * <code>bool initiative_panel_buttons_disabled = 9;</code>
   * @return The initiativePanelButtonsDisabled.
   */
  @java.lang.Override
  public boolean getInitiativePanelButtonsDisabled() {
    return initiativePanelButtonsDisabled_;
  }

  public static final int LIGHT_SOURCES_FIELD_NUMBER = 10;
  private static final class LightSourcesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto>newDefaultInstance(
                net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignPropertiesDto_LightSourcesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                net.rptools.maptool.server.proto.LightSourceListDto.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto> lightSources_;
  private com.google.protobuf.MapField<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto>
  internalGetLightSources() {
    if (lightSources_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          LightSourcesDefaultEntryHolder.defaultEntry);
    }
    return lightSources_;
  }

  public int getLightSourcesCount() {
    return internalGetLightSources().getMap().size();
  }
  /**
   * <code>map&lt;string, .maptool.LightSourceListDto&gt; light_sources = 10;</code>
   */

  @java.lang.Override
  public boolean containsLightSources(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetLightSources().getMap().containsKey(key);
  }
  /**
   * Use {@link #getLightSourcesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto> getLightSources() {
    return getLightSourcesMap();
  }
  /**
   * <code>map&lt;string, .maptool.LightSourceListDto&gt; light_sources = 10;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto> getLightSourcesMap() {
    return internalGetLightSources().getMap();
  }
  /**
   * <code>map&lt;string, .maptool.LightSourceListDto&gt; light_sources = 10;</code>
   */
  @java.lang.Override

  public net.rptools.maptool.server.proto.LightSourceListDto getLightSourcesOrDefault(
      java.lang.String key,
      net.rptools.maptool.server.proto.LightSourceListDto defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto> map =
        internalGetLightSources().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .maptool.LightSourceListDto&gt; light_sources = 10;</code>
   */
  @java.lang.Override

  public net.rptools.maptool.server.proto.LightSourceListDto getLightSourcesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto> map =
        internalGetLightSources().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int REMOTE_REPOSITORIES_FIELD_NUMBER = 11;
  private com.google.protobuf.LazyStringList remoteRepositories_;
  /**
   * <code>repeated string remote_repositories = 11;</code>
   * @return A list containing the remoteRepositories.
   */
  public com.google.protobuf.ProtocolStringList
      getRemoteRepositoriesList() {
    return remoteRepositories_;
  }
  /**
   * <code>repeated string remote_repositories = 11;</code>
   * @return The count of remoteRepositories.
   */
  public int getRemoteRepositoriesCount() {
    return remoteRepositories_.size();
  }
  /**
   * <code>repeated string remote_repositories = 11;</code>
   * @param index The index of the element to return.
   * @return The remoteRepositories at the given index.
   */
  public java.lang.String getRemoteRepositories(int index) {
    return remoteRepositories_.get(index);
  }
  /**
   * <code>repeated string remote_repositories = 11;</code>
   * @param index The index of the value to return.
   * @return The bytes of the remoteRepositories at the given index.
   */
  public com.google.protobuf.ByteString
      getRemoteRepositoriesBytes(int index) {
    return remoteRepositories_.getByteString(index);
  }

  public static final int LOOKUP_TABLES_FIELD_NUMBER = 12;
  private java.util.List<net.rptools.maptool.server.proto.LookupTableDto> lookupTables_;
  /**
   * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.LookupTableDto> getLookupTablesList() {
    return lookupTables_;
  }
  /**
   * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.LookupTableDtoOrBuilder> 
      getLookupTablesOrBuilderList() {
    return lookupTables_;
  }
  /**
   * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
   */
  @java.lang.Override
  public int getLookupTablesCount() {
    return lookupTables_.size();
  }
  /**
   * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.LookupTableDto getLookupTables(int index) {
    return lookupTables_.get(index);
  }
  /**
   * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.LookupTableDtoOrBuilder getLookupTablesOrBuilder(
      int index) {
    return lookupTables_.get(index);
  }

  public static final int SIGHT_TYPES_FIELD_NUMBER = 13;
  private java.util.List<net.rptools.maptool.server.proto.SightTypeDto> sightTypes_;
  /**
   * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.SightTypeDto> getSightTypesList() {
    return sightTypes_;
  }
  /**
   * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.SightTypeDtoOrBuilder> 
      getSightTypesOrBuilderList() {
    return sightTypes_;
  }
  /**
   * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
   */
  @java.lang.Override
  public int getSightTypesCount() {
    return sightTypes_.size();
  }
  /**
   * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.SightTypeDto getSightTypes(int index) {
    return sightTypes_.get(index);
  }
  /**
   * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.SightTypeDtoOrBuilder getSightTypesOrBuilder(
      int index) {
    return sightTypes_.get(index);
  }

  public static final int TOKEN_TYPE_STAT_SHEET_FIELD_NUMBER = 14;
  private static final class TokenTypeStatSheetDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto>newDefaultInstance(
                net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignPropertiesDto_TokenTypeStatSheetEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                net.rptools.maptool.server.proto.StatSheetPropertiesDto.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto> tokenTypeStatSheet_;
  private com.google.protobuf.MapField<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto>
  internalGetTokenTypeStatSheet() {
    if (tokenTypeStatSheet_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          TokenTypeStatSheetDefaultEntryHolder.defaultEntry);
    }
    return tokenTypeStatSheet_;
  }

  public int getTokenTypeStatSheetCount() {
    return internalGetTokenTypeStatSheet().getMap().size();
  }
  /**
   * <code>map&lt;string, .maptool.StatSheetPropertiesDto&gt; token_type_stat_sheet = 14;</code>
   */

  @java.lang.Override
  public boolean containsTokenTypeStatSheet(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetTokenTypeStatSheet().getMap().containsKey(key);
  }
  /**
   * Use {@link #getTokenTypeStatSheetMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto> getTokenTypeStatSheet() {
    return getTokenTypeStatSheetMap();
  }
  /**
   * <code>map&lt;string, .maptool.StatSheetPropertiesDto&gt; token_type_stat_sheet = 14;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto> getTokenTypeStatSheetMap() {
    return internalGetTokenTypeStatSheet().getMap();
  }
  /**
   * <code>map&lt;string, .maptool.StatSheetPropertiesDto&gt; token_type_stat_sheet = 14;</code>
   */
  @java.lang.Override

  public net.rptools.maptool.server.proto.StatSheetPropertiesDto getTokenTypeStatSheetOrDefault(
      java.lang.String key,
      net.rptools.maptool.server.proto.StatSheetPropertiesDto defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto> map =
        internalGetTokenTypeStatSheet().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .maptool.StatSheetPropertiesDto&gt; token_type_stat_sheet = 14;</code>
   */
  @java.lang.Override

  public net.rptools.maptool.server.proto.StatSheetPropertiesDto getTokenTypeStatSheetOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto> map =
        internalGetTokenTypeStatSheet().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int DEFAULT_TOKEN_PROPERTY_TYPE_FIELD_NUMBER = 15;
  private com.google.protobuf.StringValue defaultTokenPropertyType_;
  /**
   * <code>.google.protobuf.StringValue default_token_property_type = 15;</code>
   * @return Whether the defaultTokenPropertyType field is set.
   */
  @java.lang.Override
  public boolean hasDefaultTokenPropertyType() {
    return defaultTokenPropertyType_ != null;
  }
  /**
   * <code>.google.protobuf.StringValue default_token_property_type = 15;</code>
   * @return The defaultTokenPropertyType.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getDefaultTokenPropertyType() {
    return defaultTokenPropertyType_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : defaultTokenPropertyType_;
  }
  /**
   * <code>.google.protobuf.StringValue default_token_property_type = 15;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getDefaultTokenPropertyTypeOrBuilder() {
    return getDefaultTokenPropertyType();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetTokenTypes(),
        TokenTypesDefaultEntryHolder.defaultEntry,
        1);
    if (defaultSightType_ != null) {
      output.writeMessage(2, getDefaultSightType());
    }
    for (int i = 0; i < tokenStates_.size(); i++) {
      output.writeMessage(3, tokenStates_.get(i));
    }
    for (int i = 0; i < tokenBars_.size(); i++) {
      output.writeMessage(4, tokenBars_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetCharacterSheets(),
        CharacterSheetsDefaultEntryHolder.defaultEntry,
        5);
    if (initiativeOwnerPermissions_ != false) {
      output.writeBool(6, initiativeOwnerPermissions_);
    }
    if (initiativeMovementLock_ != false) {
      output.writeBool(7, initiativeMovementLock_);
    }
    if (initiativeUseReverseSort_ != false) {
      output.writeBool(8, initiativeUseReverseSort_);
    }
    if (initiativePanelButtonsDisabled_ != false) {
      output.writeBool(9, initiativePanelButtonsDisabled_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetLightSources(),
        LightSourcesDefaultEntryHolder.defaultEntry,
        10);
    for (int i = 0; i < remoteRepositories_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, remoteRepositories_.getRaw(i));
    }
    for (int i = 0; i < lookupTables_.size(); i++) {
      output.writeMessage(12, lookupTables_.get(i));
    }
    for (int i = 0; i < sightTypes_.size(); i++) {
      output.writeMessage(13, sightTypes_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetTokenTypeStatSheet(),
        TokenTypeStatSheetDefaultEntryHolder.defaultEntry,
        14);
    if (defaultTokenPropertyType_ != null) {
      output.writeMessage(15, getDefaultTokenPropertyType());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto> entry
         : internalGetTokenTypes().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto>
      tokenTypes__ = TokenTypesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tokenTypes__);
    }
    if (defaultSightType_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getDefaultSightType());
    }
    for (int i = 0; i < tokenStates_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, tokenStates_.get(i));
    }
    for (int i = 0; i < tokenBars_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, tokenBars_.get(i));
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetCharacterSheets().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      characterSheets__ = CharacterSheetsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, characterSheets__);
    }
    if (initiativeOwnerPermissions_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, initiativeOwnerPermissions_);
    }
    if (initiativeMovementLock_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, initiativeMovementLock_);
    }
    if (initiativeUseReverseSort_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, initiativeUseReverseSort_);
    }
    if (initiativePanelButtonsDisabled_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, initiativePanelButtonsDisabled_);
    }
    for (java.util.Map.Entry<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto> entry
         : internalGetLightSources().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto>
      lightSources__ = LightSourcesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, lightSources__);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < remoteRepositories_.size(); i++) {
        dataSize += computeStringSizeNoTag(remoteRepositories_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getRemoteRepositoriesList().size();
    }
    for (int i = 0; i < lookupTables_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, lookupTables_.get(i));
    }
    for (int i = 0; i < sightTypes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, sightTypes_.get(i));
    }
    for (java.util.Map.Entry<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto> entry
         : internalGetTokenTypeStatSheet().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto>
      tokenTypeStatSheet__ = TokenTypeStatSheetDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, tokenTypeStatSheet__);
    }
    if (defaultTokenPropertyType_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, getDefaultTokenPropertyType());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof net.rptools.maptool.server.proto.CampaignPropertiesDto)) {
      return super.equals(obj);
    }
    net.rptools.maptool.server.proto.CampaignPropertiesDto other = (net.rptools.maptool.server.proto.CampaignPropertiesDto) obj;

    if (!internalGetTokenTypes().equals(
        other.internalGetTokenTypes())) return false;
    if (hasDefaultSightType() != other.hasDefaultSightType()) return false;
    if (hasDefaultSightType()) {
      if (!getDefaultSightType()
          .equals(other.getDefaultSightType())) return false;
    }
    if (!getTokenStatesList()
        .equals(other.getTokenStatesList())) return false;
    if (!getTokenBarsList()
        .equals(other.getTokenBarsList())) return false;
    if (!internalGetCharacterSheets().equals(
        other.internalGetCharacterSheets())) return false;
    if (getInitiativeOwnerPermissions()
        != other.getInitiativeOwnerPermissions()) return false;
    if (getInitiativeMovementLock()
        != other.getInitiativeMovementLock()) return false;
    if (getInitiativeUseReverseSort()
        != other.getInitiativeUseReverseSort()) return false;
    if (getInitiativePanelButtonsDisabled()
        != other.getInitiativePanelButtonsDisabled()) return false;
    if (!internalGetLightSources().equals(
        other.internalGetLightSources())) return false;
    if (!getRemoteRepositoriesList()
        .equals(other.getRemoteRepositoriesList())) return false;
    if (!getLookupTablesList()
        .equals(other.getLookupTablesList())) return false;
    if (!getSightTypesList()
        .equals(other.getSightTypesList())) return false;
    if (!internalGetTokenTypeStatSheet().equals(
        other.internalGetTokenTypeStatSheet())) return false;
    if (hasDefaultTokenPropertyType() != other.hasDefaultTokenPropertyType()) return false;
    if (hasDefaultTokenPropertyType()) {
      if (!getDefaultTokenPropertyType()
          .equals(other.getDefaultTokenPropertyType())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetTokenTypes().getMap().isEmpty()) {
      hash = (37 * hash) + TOKEN_TYPES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTokenTypes().hashCode();
    }
    if (hasDefaultSightType()) {
      hash = (37 * hash) + DEFAULT_SIGHT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultSightType().hashCode();
    }
    if (getTokenStatesCount() > 0) {
      hash = (37 * hash) + TOKEN_STATES_FIELD_NUMBER;
      hash = (53 * hash) + getTokenStatesList().hashCode();
    }
    if (getTokenBarsCount() > 0) {
      hash = (37 * hash) + TOKEN_BARS_FIELD_NUMBER;
      hash = (53 * hash) + getTokenBarsList().hashCode();
    }
    if (!internalGetCharacterSheets().getMap().isEmpty()) {
      hash = (37 * hash) + CHARACTER_SHEETS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetCharacterSheets().hashCode();
    }
    hash = (37 * hash) + INITIATIVE_OWNER_PERMISSIONS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getInitiativeOwnerPermissions());
    hash = (37 * hash) + INITIATIVE_MOVEMENTLOCK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getInitiativeMovementLock());
    hash = (37 * hash) + INITIATIVE_USE_REVERSE_SORT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getInitiativeUseReverseSort());
    hash = (37 * hash) + INITIATIVE_PANEL_BUTTONS_DISABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getInitiativePanelButtonsDisabled());
    if (!internalGetLightSources().getMap().isEmpty()) {
      hash = (37 * hash) + LIGHT_SOURCES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetLightSources().hashCode();
    }
    if (getRemoteRepositoriesCount() > 0) {
      hash = (37 * hash) + REMOTE_REPOSITORIES_FIELD_NUMBER;
      hash = (53 * hash) + getRemoteRepositoriesList().hashCode();
    }
    if (getLookupTablesCount() > 0) {
      hash = (37 * hash) + LOOKUP_TABLES_FIELD_NUMBER;
      hash = (53 * hash) + getLookupTablesList().hashCode();
    }
    if (getSightTypesCount() > 0) {
      hash = (37 * hash) + SIGHT_TYPES_FIELD_NUMBER;
      hash = (53 * hash) + getSightTypesList().hashCode();
    }
    if (!internalGetTokenTypeStatSheet().getMap().isEmpty()) {
      hash = (37 * hash) + TOKEN_TYPE_STAT_SHEET_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTokenTypeStatSheet().hashCode();
    }
    if (hasDefaultTokenPropertyType()) {
      hash = (37 * hash) + DEFAULT_TOKEN_PROPERTY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultTokenPropertyType().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static net.rptools.maptool.server.proto.CampaignPropertiesDto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.CampaignPropertiesDto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.CampaignPropertiesDto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.CampaignPropertiesDto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.CampaignPropertiesDto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.CampaignPropertiesDto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.CampaignPropertiesDto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.CampaignPropertiesDto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.CampaignPropertiesDto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.CampaignPropertiesDto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.CampaignPropertiesDto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.CampaignPropertiesDto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(net.rptools.maptool.server.proto.CampaignPropertiesDto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code maptool.CampaignPropertiesDto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maptool.CampaignPropertiesDto)
      net.rptools.maptool.server.proto.CampaignPropertiesDtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignPropertiesDto_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetTokenTypes();
        case 5:
          return internalGetCharacterSheets();
        case 10:
          return internalGetLightSources();
        case 14:
          return internalGetTokenTypeStatSheet();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableTokenTypes();
        case 5:
          return internalGetMutableCharacterSheets();
        case 10:
          return internalGetMutableLightSources();
        case 14:
          return internalGetMutableTokenTypeStatSheet();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignPropertiesDto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.rptools.maptool.server.proto.CampaignPropertiesDto.class, net.rptools.maptool.server.proto.CampaignPropertiesDto.Builder.class);
    }

    // Construct using net.rptools.maptool.server.proto.CampaignPropertiesDto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTokenStatesFieldBuilder();
        getTokenBarsFieldBuilder();
        getLookupTablesFieldBuilder();
        getSightTypesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      internalGetMutableTokenTypes().clear();
      if (defaultSightTypeBuilder_ == null) {
        defaultSightType_ = null;
      } else {
        defaultSightType_ = null;
        defaultSightTypeBuilder_ = null;
      }
      if (tokenStatesBuilder_ == null) {
        tokenStates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        tokenStatesBuilder_.clear();
      }
      if (tokenBarsBuilder_ == null) {
        tokenBars_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        tokenBarsBuilder_.clear();
      }
      internalGetMutableCharacterSheets().clear();
      initiativeOwnerPermissions_ = false;

      initiativeMovementLock_ = false;

      initiativeUseReverseSort_ = false;

      initiativePanelButtonsDisabled_ = false;

      internalGetMutableLightSources().clear();
      remoteRepositories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      if (lookupTablesBuilder_ == null) {
        lookupTables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        lookupTablesBuilder_.clear();
      }
      if (sightTypesBuilder_ == null) {
        sightTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
      } else {
        sightTypesBuilder_.clear();
      }
      internalGetMutableTokenTypeStatSheet().clear();
      if (defaultTokenPropertyTypeBuilder_ == null) {
        defaultTokenPropertyType_ = null;
      } else {
        defaultTokenPropertyType_ = null;
        defaultTokenPropertyTypeBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignPropertiesDto_descriptor;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.CampaignPropertiesDto getDefaultInstanceForType() {
      return net.rptools.maptool.server.proto.CampaignPropertiesDto.getDefaultInstance();
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.CampaignPropertiesDto build() {
      net.rptools.maptool.server.proto.CampaignPropertiesDto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.CampaignPropertiesDto buildPartial() {
      net.rptools.maptool.server.proto.CampaignPropertiesDto result = new net.rptools.maptool.server.proto.CampaignPropertiesDto(this);
      int from_bitField0_ = bitField0_;
      result.tokenTypes_ = internalGetTokenTypes();
      result.tokenTypes_.makeImmutable();
      if (defaultSightTypeBuilder_ == null) {
        result.defaultSightType_ = defaultSightType_;
      } else {
        result.defaultSightType_ = defaultSightTypeBuilder_.build();
      }
      if (tokenStatesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          tokenStates_ = java.util.Collections.unmodifiableList(tokenStates_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.tokenStates_ = tokenStates_;
      } else {
        result.tokenStates_ = tokenStatesBuilder_.build();
      }
      if (tokenBarsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          tokenBars_ = java.util.Collections.unmodifiableList(tokenBars_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.tokenBars_ = tokenBars_;
      } else {
        result.tokenBars_ = tokenBarsBuilder_.build();
      }
      result.characterSheets_ = internalGetCharacterSheets();
      result.characterSheets_.makeImmutable();
      result.initiativeOwnerPermissions_ = initiativeOwnerPermissions_;
      result.initiativeMovementLock_ = initiativeMovementLock_;
      result.initiativeUseReverseSort_ = initiativeUseReverseSort_;
      result.initiativePanelButtonsDisabled_ = initiativePanelButtonsDisabled_;
      result.lightSources_ = internalGetLightSources();
      result.lightSources_.makeImmutable();
      if (((bitField0_ & 0x00000020) != 0)) {
        remoteRepositories_ = remoteRepositories_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.remoteRepositories_ = remoteRepositories_;
      if (lookupTablesBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          lookupTables_ = java.util.Collections.unmodifiableList(lookupTables_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.lookupTables_ = lookupTables_;
      } else {
        result.lookupTables_ = lookupTablesBuilder_.build();
      }
      if (sightTypesBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)) {
          sightTypes_ = java.util.Collections.unmodifiableList(sightTypes_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.sightTypes_ = sightTypes_;
      } else {
        result.sightTypes_ = sightTypesBuilder_.build();
      }
      result.tokenTypeStatSheet_ = internalGetTokenTypeStatSheet();
      result.tokenTypeStatSheet_.makeImmutable();
      if (defaultTokenPropertyTypeBuilder_ == null) {
        result.defaultTokenPropertyType_ = defaultTokenPropertyType_;
      } else {
        result.defaultTokenPropertyType_ = defaultTokenPropertyTypeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof net.rptools.maptool.server.proto.CampaignPropertiesDto) {
        return mergeFrom((net.rptools.maptool.server.proto.CampaignPropertiesDto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(net.rptools.maptool.server.proto.CampaignPropertiesDto other) {
      if (other == net.rptools.maptool.server.proto.CampaignPropertiesDto.getDefaultInstance()) return this;
      internalGetMutableTokenTypes().mergeFrom(
          other.internalGetTokenTypes());
      if (other.hasDefaultSightType()) {
        mergeDefaultSightType(other.getDefaultSightType());
      }
      if (tokenStatesBuilder_ == null) {
        if (!other.tokenStates_.isEmpty()) {
          if (tokenStates_.isEmpty()) {
            tokenStates_ = other.tokenStates_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTokenStatesIsMutable();
            tokenStates_.addAll(other.tokenStates_);
          }
          onChanged();
        }
      } else {
        if (!other.tokenStates_.isEmpty()) {
          if (tokenStatesBuilder_.isEmpty()) {
            tokenStatesBuilder_.dispose();
            tokenStatesBuilder_ = null;
            tokenStates_ = other.tokenStates_;
            bitField0_ = (bitField0_ & ~0x00000002);
            tokenStatesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTokenStatesFieldBuilder() : null;
          } else {
            tokenStatesBuilder_.addAllMessages(other.tokenStates_);
          }
        }
      }
      if (tokenBarsBuilder_ == null) {
        if (!other.tokenBars_.isEmpty()) {
          if (tokenBars_.isEmpty()) {
            tokenBars_ = other.tokenBars_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTokenBarsIsMutable();
            tokenBars_.addAll(other.tokenBars_);
          }
          onChanged();
        }
      } else {
        if (!other.tokenBars_.isEmpty()) {
          if (tokenBarsBuilder_.isEmpty()) {
            tokenBarsBuilder_.dispose();
            tokenBarsBuilder_ = null;
            tokenBars_ = other.tokenBars_;
            bitField0_ = (bitField0_ & ~0x00000004);
            tokenBarsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTokenBarsFieldBuilder() : null;
          } else {
            tokenBarsBuilder_.addAllMessages(other.tokenBars_);
          }
        }
      }
      internalGetMutableCharacterSheets().mergeFrom(
          other.internalGetCharacterSheets());
      if (other.getInitiativeOwnerPermissions() != false) {
        setInitiativeOwnerPermissions(other.getInitiativeOwnerPermissions());
      }
      if (other.getInitiativeMovementLock() != false) {
        setInitiativeMovementLock(other.getInitiativeMovementLock());
      }
      if (other.getInitiativeUseReverseSort() != false) {
        setInitiativeUseReverseSort(other.getInitiativeUseReverseSort());
      }
      if (other.getInitiativePanelButtonsDisabled() != false) {
        setInitiativePanelButtonsDisabled(other.getInitiativePanelButtonsDisabled());
      }
      internalGetMutableLightSources().mergeFrom(
          other.internalGetLightSources());
      if (!other.remoteRepositories_.isEmpty()) {
        if (remoteRepositories_.isEmpty()) {
          remoteRepositories_ = other.remoteRepositories_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureRemoteRepositoriesIsMutable();
          remoteRepositories_.addAll(other.remoteRepositories_);
        }
        onChanged();
      }
      if (lookupTablesBuilder_ == null) {
        if (!other.lookupTables_.isEmpty()) {
          if (lookupTables_.isEmpty()) {
            lookupTables_ = other.lookupTables_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureLookupTablesIsMutable();
            lookupTables_.addAll(other.lookupTables_);
          }
          onChanged();
        }
      } else {
        if (!other.lookupTables_.isEmpty()) {
          if (lookupTablesBuilder_.isEmpty()) {
            lookupTablesBuilder_.dispose();
            lookupTablesBuilder_ = null;
            lookupTables_ = other.lookupTables_;
            bitField0_ = (bitField0_ & ~0x00000040);
            lookupTablesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLookupTablesFieldBuilder() : null;
          } else {
            lookupTablesBuilder_.addAllMessages(other.lookupTables_);
          }
        }
      }
      if (sightTypesBuilder_ == null) {
        if (!other.sightTypes_.isEmpty()) {
          if (sightTypes_.isEmpty()) {
            sightTypes_ = other.sightTypes_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureSightTypesIsMutable();
            sightTypes_.addAll(other.sightTypes_);
          }
          onChanged();
        }
      } else {
        if (!other.sightTypes_.isEmpty()) {
          if (sightTypesBuilder_.isEmpty()) {
            sightTypesBuilder_.dispose();
            sightTypesBuilder_ = null;
            sightTypes_ = other.sightTypes_;
            bitField0_ = (bitField0_ & ~0x00000080);
            sightTypesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSightTypesFieldBuilder() : null;
          } else {
            sightTypesBuilder_.addAllMessages(other.sightTypes_);
          }
        }
      }
      internalGetMutableTokenTypeStatSheet().mergeFrom(
          other.internalGetTokenTypeStatSheet());
      if (other.hasDefaultTokenPropertyType()) {
        mergeDefaultTokenPropertyType(other.getDefaultTokenPropertyType());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      net.rptools.maptool.server.proto.CampaignPropertiesDto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (net.rptools.maptool.server.proto.CampaignPropertiesDto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto> tokenTypes_;
    private com.google.protobuf.MapField<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto>
    internalGetTokenTypes() {
      if (tokenTypes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TokenTypesDefaultEntryHolder.defaultEntry);
      }
      return tokenTypes_;
    }
    private com.google.protobuf.MapField<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto>
    internalGetMutableTokenTypes() {
      onChanged();;
      if (tokenTypes_ == null) {
        tokenTypes_ = com.google.protobuf.MapField.newMapField(
            TokenTypesDefaultEntryHolder.defaultEntry);
      }
      if (!tokenTypes_.isMutable()) {
        tokenTypes_ = tokenTypes_.copy();
      }
      return tokenTypes_;
    }

    public int getTokenTypesCount() {
      return internalGetTokenTypes().getMap().size();
    }
    /**
     * <code>map&lt;string, .maptool.TokenPropertyListDto&gt; token_types = 1;</code>
     */

    @java.lang.Override
    public boolean containsTokenTypes(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetTokenTypes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTokenTypesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto> getTokenTypes() {
      return getTokenTypesMap();
    }
    /**
     * <code>map&lt;string, .maptool.TokenPropertyListDto&gt; token_types = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto> getTokenTypesMap() {
      return internalGetTokenTypes().getMap();
    }
    /**
     * <code>map&lt;string, .maptool.TokenPropertyListDto&gt; token_types = 1;</code>
     */
    @java.lang.Override

    public net.rptools.maptool.server.proto.TokenPropertyListDto getTokenTypesOrDefault(
        java.lang.String key,
        net.rptools.maptool.server.proto.TokenPropertyListDto defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto> map =
          internalGetTokenTypes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .maptool.TokenPropertyListDto&gt; token_types = 1;</code>
     */
    @java.lang.Override

    public net.rptools.maptool.server.proto.TokenPropertyListDto getTokenTypesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto> map =
          internalGetTokenTypes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearTokenTypes() {
      internalGetMutableTokenTypes().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .maptool.TokenPropertyListDto&gt; token_types = 1;</code>
     */

    public Builder removeTokenTypes(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableTokenTypes().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto>
    getMutableTokenTypes() {
      return internalGetMutableTokenTypes().getMutableMap();
    }
    /**
     * <code>map&lt;string, .maptool.TokenPropertyListDto&gt; token_types = 1;</code>
     */
    public Builder putTokenTypes(
        java.lang.String key,
        net.rptools.maptool.server.proto.TokenPropertyListDto value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableTokenTypes().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .maptool.TokenPropertyListDto&gt; token_types = 1;</code>
     */

    public Builder putAllTokenTypes(
        java.util.Map<java.lang.String, net.rptools.maptool.server.proto.TokenPropertyListDto> values) {
      internalGetMutableTokenTypes().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.StringValue defaultSightType_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> defaultSightTypeBuilder_;
    /**
     * <code>.google.protobuf.StringValue default_sight_type = 2;</code>
     * @return Whether the defaultSightType field is set.
     */
    public boolean hasDefaultSightType() {
      return defaultSightTypeBuilder_ != null || defaultSightType_ != null;
    }
    /**
     * <code>.google.protobuf.StringValue default_sight_type = 2;</code>
     * @return The defaultSightType.
     */
    public com.google.protobuf.StringValue getDefaultSightType() {
      if (defaultSightTypeBuilder_ == null) {
        return defaultSightType_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : defaultSightType_;
      } else {
        return defaultSightTypeBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.protobuf.StringValue default_sight_type = 2;</code>
     */
    public Builder setDefaultSightType(com.google.protobuf.StringValue value) {
      if (defaultSightTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        defaultSightType_ = value;
        onChanged();
      } else {
        defaultSightTypeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue default_sight_type = 2;</code>
     */
    public Builder setDefaultSightType(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (defaultSightTypeBuilder_ == null) {
        defaultSightType_ = builderForValue.build();
        onChanged();
      } else {
        defaultSightTypeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue default_sight_type = 2;</code>
     */
    public Builder mergeDefaultSightType(com.google.protobuf.StringValue value) {
      if (defaultSightTypeBuilder_ == null) {
        if (defaultSightType_ != null) {
          defaultSightType_ =
            com.google.protobuf.StringValue.newBuilder(defaultSightType_).mergeFrom(value).buildPartial();
        } else {
          defaultSightType_ = value;
        }
        onChanged();
      } else {
        defaultSightTypeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue default_sight_type = 2;</code>
     */
    public Builder clearDefaultSightType() {
      if (defaultSightTypeBuilder_ == null) {
        defaultSightType_ = null;
        onChanged();
      } else {
        defaultSightType_ = null;
        defaultSightTypeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue default_sight_type = 2;</code>
     */
    public com.google.protobuf.StringValue.Builder getDefaultSightTypeBuilder() {
      
      onChanged();
      return getDefaultSightTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.protobuf.StringValue default_sight_type = 2;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getDefaultSightTypeOrBuilder() {
      if (defaultSightTypeBuilder_ != null) {
        return defaultSightTypeBuilder_.getMessageOrBuilder();
      } else {
        return defaultSightType_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : defaultSightType_;
      }
    }
    /**
     * <code>.google.protobuf.StringValue default_sight_type = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getDefaultSightTypeFieldBuilder() {
      if (defaultSightTypeBuilder_ == null) {
        defaultSightTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getDefaultSightType(),
                getParentForChildren(),
                isClean());
        defaultSightType_ = null;
      }
      return defaultSightTypeBuilder_;
    }

    private java.util.List<net.rptools.maptool.server.proto.BooleanTokenOverlayDto> tokenStates_ =
      java.util.Collections.emptyList();
    private void ensureTokenStatesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        tokenStates_ = new java.util.ArrayList<net.rptools.maptool.server.proto.BooleanTokenOverlayDto>(tokenStates_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.BooleanTokenOverlayDto, net.rptools.maptool.server.proto.BooleanTokenOverlayDto.Builder, net.rptools.maptool.server.proto.BooleanTokenOverlayDtoOrBuilder> tokenStatesBuilder_;

    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.BooleanTokenOverlayDto> getTokenStatesList() {
      if (tokenStatesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tokenStates_);
      } else {
        return tokenStatesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public int getTokenStatesCount() {
      if (tokenStatesBuilder_ == null) {
        return tokenStates_.size();
      } else {
        return tokenStatesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public net.rptools.maptool.server.proto.BooleanTokenOverlayDto getTokenStates(int index) {
      if (tokenStatesBuilder_ == null) {
        return tokenStates_.get(index);
      } else {
        return tokenStatesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public Builder setTokenStates(
        int index, net.rptools.maptool.server.proto.BooleanTokenOverlayDto value) {
      if (tokenStatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokenStatesIsMutable();
        tokenStates_.set(index, value);
        onChanged();
      } else {
        tokenStatesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public Builder setTokenStates(
        int index, net.rptools.maptool.server.proto.BooleanTokenOverlayDto.Builder builderForValue) {
      if (tokenStatesBuilder_ == null) {
        ensureTokenStatesIsMutable();
        tokenStates_.set(index, builderForValue.build());
        onChanged();
      } else {
        tokenStatesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public Builder addTokenStates(net.rptools.maptool.server.proto.BooleanTokenOverlayDto value) {
      if (tokenStatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokenStatesIsMutable();
        tokenStates_.add(value);
        onChanged();
      } else {
        tokenStatesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public Builder addTokenStates(
        int index, net.rptools.maptool.server.proto.BooleanTokenOverlayDto value) {
      if (tokenStatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokenStatesIsMutable();
        tokenStates_.add(index, value);
        onChanged();
      } else {
        tokenStatesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public Builder addTokenStates(
        net.rptools.maptool.server.proto.BooleanTokenOverlayDto.Builder builderForValue) {
      if (tokenStatesBuilder_ == null) {
        ensureTokenStatesIsMutable();
        tokenStates_.add(builderForValue.build());
        onChanged();
      } else {
        tokenStatesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public Builder addTokenStates(
        int index, net.rptools.maptool.server.proto.BooleanTokenOverlayDto.Builder builderForValue) {
      if (tokenStatesBuilder_ == null) {
        ensureTokenStatesIsMutable();
        tokenStates_.add(index, builderForValue.build());
        onChanged();
      } else {
        tokenStatesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public Builder addAllTokenStates(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.BooleanTokenOverlayDto> values) {
      if (tokenStatesBuilder_ == null) {
        ensureTokenStatesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tokenStates_);
        onChanged();
      } else {
        tokenStatesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public Builder clearTokenStates() {
      if (tokenStatesBuilder_ == null) {
        tokenStates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        tokenStatesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public Builder removeTokenStates(int index) {
      if (tokenStatesBuilder_ == null) {
        ensureTokenStatesIsMutable();
        tokenStates_.remove(index);
        onChanged();
      } else {
        tokenStatesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public net.rptools.maptool.server.proto.BooleanTokenOverlayDto.Builder getTokenStatesBuilder(
        int index) {
      return getTokenStatesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public net.rptools.maptool.server.proto.BooleanTokenOverlayDtoOrBuilder getTokenStatesOrBuilder(
        int index) {
      if (tokenStatesBuilder_ == null) {
        return tokenStates_.get(index);  } else {
        return tokenStatesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.BooleanTokenOverlayDtoOrBuilder> 
         getTokenStatesOrBuilderList() {
      if (tokenStatesBuilder_ != null) {
        return tokenStatesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tokenStates_);
      }
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public net.rptools.maptool.server.proto.BooleanTokenOverlayDto.Builder addTokenStatesBuilder() {
      return getTokenStatesFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.BooleanTokenOverlayDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public net.rptools.maptool.server.proto.BooleanTokenOverlayDto.Builder addTokenStatesBuilder(
        int index) {
      return getTokenStatesFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.BooleanTokenOverlayDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.BooleanTokenOverlayDto token_states = 3;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.BooleanTokenOverlayDto.Builder> 
         getTokenStatesBuilderList() {
      return getTokenStatesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.BooleanTokenOverlayDto, net.rptools.maptool.server.proto.BooleanTokenOverlayDto.Builder, net.rptools.maptool.server.proto.BooleanTokenOverlayDtoOrBuilder> 
        getTokenStatesFieldBuilder() {
      if (tokenStatesBuilder_ == null) {
        tokenStatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.BooleanTokenOverlayDto, net.rptools.maptool.server.proto.BooleanTokenOverlayDto.Builder, net.rptools.maptool.server.proto.BooleanTokenOverlayDtoOrBuilder>(
                tokenStates_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        tokenStates_ = null;
      }
      return tokenStatesBuilder_;
    }

    private java.util.List<net.rptools.maptool.server.proto.BarTokenOverlayDto> tokenBars_ =
      java.util.Collections.emptyList();
    private void ensureTokenBarsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        tokenBars_ = new java.util.ArrayList<net.rptools.maptool.server.proto.BarTokenOverlayDto>(tokenBars_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.BarTokenOverlayDto, net.rptools.maptool.server.proto.BarTokenOverlayDto.Builder, net.rptools.maptool.server.proto.BarTokenOverlayDtoOrBuilder> tokenBarsBuilder_;

    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.BarTokenOverlayDto> getTokenBarsList() {
      if (tokenBarsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tokenBars_);
      } else {
        return tokenBarsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public int getTokenBarsCount() {
      if (tokenBarsBuilder_ == null) {
        return tokenBars_.size();
      } else {
        return tokenBarsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public net.rptools.maptool.server.proto.BarTokenOverlayDto getTokenBars(int index) {
      if (tokenBarsBuilder_ == null) {
        return tokenBars_.get(index);
      } else {
        return tokenBarsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public Builder setTokenBars(
        int index, net.rptools.maptool.server.proto.BarTokenOverlayDto value) {
      if (tokenBarsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokenBarsIsMutable();
        tokenBars_.set(index, value);
        onChanged();
      } else {
        tokenBarsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public Builder setTokenBars(
        int index, net.rptools.maptool.server.proto.BarTokenOverlayDto.Builder builderForValue) {
      if (tokenBarsBuilder_ == null) {
        ensureTokenBarsIsMutable();
        tokenBars_.set(index, builderForValue.build());
        onChanged();
      } else {
        tokenBarsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public Builder addTokenBars(net.rptools.maptool.server.proto.BarTokenOverlayDto value) {
      if (tokenBarsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokenBarsIsMutable();
        tokenBars_.add(value);
        onChanged();
      } else {
        tokenBarsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public Builder addTokenBars(
        int index, net.rptools.maptool.server.proto.BarTokenOverlayDto value) {
      if (tokenBarsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokenBarsIsMutable();
        tokenBars_.add(index, value);
        onChanged();
      } else {
        tokenBarsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public Builder addTokenBars(
        net.rptools.maptool.server.proto.BarTokenOverlayDto.Builder builderForValue) {
      if (tokenBarsBuilder_ == null) {
        ensureTokenBarsIsMutable();
        tokenBars_.add(builderForValue.build());
        onChanged();
      } else {
        tokenBarsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public Builder addTokenBars(
        int index, net.rptools.maptool.server.proto.BarTokenOverlayDto.Builder builderForValue) {
      if (tokenBarsBuilder_ == null) {
        ensureTokenBarsIsMutable();
        tokenBars_.add(index, builderForValue.build());
        onChanged();
      } else {
        tokenBarsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public Builder addAllTokenBars(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.BarTokenOverlayDto> values) {
      if (tokenBarsBuilder_ == null) {
        ensureTokenBarsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tokenBars_);
        onChanged();
      } else {
        tokenBarsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public Builder clearTokenBars() {
      if (tokenBarsBuilder_ == null) {
        tokenBars_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        tokenBarsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public Builder removeTokenBars(int index) {
      if (tokenBarsBuilder_ == null) {
        ensureTokenBarsIsMutable();
        tokenBars_.remove(index);
        onChanged();
      } else {
        tokenBarsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public net.rptools.maptool.server.proto.BarTokenOverlayDto.Builder getTokenBarsBuilder(
        int index) {
      return getTokenBarsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public net.rptools.maptool.server.proto.BarTokenOverlayDtoOrBuilder getTokenBarsOrBuilder(
        int index) {
      if (tokenBarsBuilder_ == null) {
        return tokenBars_.get(index);  } else {
        return tokenBarsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.BarTokenOverlayDtoOrBuilder> 
         getTokenBarsOrBuilderList() {
      if (tokenBarsBuilder_ != null) {
        return tokenBarsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tokenBars_);
      }
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public net.rptools.maptool.server.proto.BarTokenOverlayDto.Builder addTokenBarsBuilder() {
      return getTokenBarsFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.BarTokenOverlayDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public net.rptools.maptool.server.proto.BarTokenOverlayDto.Builder addTokenBarsBuilder(
        int index) {
      return getTokenBarsFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.BarTokenOverlayDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.BarTokenOverlayDto token_bars = 4;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.BarTokenOverlayDto.Builder> 
         getTokenBarsBuilderList() {
      return getTokenBarsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.BarTokenOverlayDto, net.rptools.maptool.server.proto.BarTokenOverlayDto.Builder, net.rptools.maptool.server.proto.BarTokenOverlayDtoOrBuilder> 
        getTokenBarsFieldBuilder() {
      if (tokenBarsBuilder_ == null) {
        tokenBarsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.BarTokenOverlayDto, net.rptools.maptool.server.proto.BarTokenOverlayDto.Builder, net.rptools.maptool.server.proto.BarTokenOverlayDtoOrBuilder>(
                tokenBars_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        tokenBars_ = null;
      }
      return tokenBarsBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> characterSheets_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetCharacterSheets() {
      if (characterSheets_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            CharacterSheetsDefaultEntryHolder.defaultEntry);
      }
      return characterSheets_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableCharacterSheets() {
      onChanged();;
      if (characterSheets_ == null) {
        characterSheets_ = com.google.protobuf.MapField.newMapField(
            CharacterSheetsDefaultEntryHolder.defaultEntry);
      }
      if (!characterSheets_.isMutable()) {
        characterSheets_ = characterSheets_.copy();
      }
      return characterSheets_;
    }

    public int getCharacterSheetsCount() {
      return internalGetCharacterSheets().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; character_sheets = 5;</code>
     */

    @java.lang.Override
    public boolean containsCharacterSheets(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetCharacterSheets().getMap().containsKey(key);
    }
    /**
     * Use {@link #getCharacterSheetsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getCharacterSheets() {
      return getCharacterSheetsMap();
    }
    /**
     * <code>map&lt;string, string&gt; character_sheets = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getCharacterSheetsMap() {
      return internalGetCharacterSheets().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; character_sheets = 5;</code>
     */
    @java.lang.Override

    public java.lang.String getCharacterSheetsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetCharacterSheets().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; character_sheets = 5;</code>
     */
    @java.lang.Override

    public java.lang.String getCharacterSheetsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetCharacterSheets().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearCharacterSheets() {
      internalGetMutableCharacterSheets().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; character_sheets = 5;</code>
     */

    public Builder removeCharacterSheets(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableCharacterSheets().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableCharacterSheets() {
      return internalGetMutableCharacterSheets().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; character_sheets = 5;</code>
     */
    public Builder putCharacterSheets(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableCharacterSheets().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; character_sheets = 5;</code>
     */

    public Builder putAllCharacterSheets(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableCharacterSheets().getMutableMap()
          .putAll(values);
      return this;
    }

    private boolean initiativeOwnerPermissions_ ;
    /**
     * <code>bool initiative_owner_permissions = 6;</code>
     * @return The initiativeOwnerPermissions.
     */
    @java.lang.Override
    public boolean getInitiativeOwnerPermissions() {
      return initiativeOwnerPermissions_;
    }
    /**
     * <code>bool initiative_owner_permissions = 6;</code>
     * @param value The initiativeOwnerPermissions to set.
     * @return This builder for chaining.
     */
    public Builder setInitiativeOwnerPermissions(boolean value) {
      
      initiativeOwnerPermissions_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool initiative_owner_permissions = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearInitiativeOwnerPermissions() {
      
      initiativeOwnerPermissions_ = false;
      onChanged();
      return this;
    }

    private boolean initiativeMovementLock_ ;
    /**
     * <code>bool initiative_movementLock = 7;</code>
     * @return The initiativeMovementLock.
     */
    @java.lang.Override
    public boolean getInitiativeMovementLock() {
      return initiativeMovementLock_;
    }
    /**
     * <code>bool initiative_movementLock = 7;</code>
     * @param value The initiativeMovementLock to set.
     * @return This builder for chaining.
     */
    public Builder setInitiativeMovementLock(boolean value) {
      
      initiativeMovementLock_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool initiative_movementLock = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearInitiativeMovementLock() {
      
      initiativeMovementLock_ = false;
      onChanged();
      return this;
    }

    private boolean initiativeUseReverseSort_ ;
    /**
     * <code>bool initiative_use_reverse_sort = 8;</code>
     * @return The initiativeUseReverseSort.
     */
    @java.lang.Override
    public boolean getInitiativeUseReverseSort() {
      return initiativeUseReverseSort_;
    }
    /**
     * <code>bool initiative_use_reverse_sort = 8;</code>
     * @param value The initiativeUseReverseSort to set.
     * @return This builder for chaining.
     */
    public Builder setInitiativeUseReverseSort(boolean value) {
      
      initiativeUseReverseSort_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool initiative_use_reverse_sort = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearInitiativeUseReverseSort() {
      
      initiativeUseReverseSort_ = false;
      onChanged();
      return this;
    }

    private boolean initiativePanelButtonsDisabled_ ;
    /**
     * <code>bool initiative_panel_buttons_disabled = 9;</code>
     * @return The initiativePanelButtonsDisabled.
     */
    @java.lang.Override
    public boolean getInitiativePanelButtonsDisabled() {
      return initiativePanelButtonsDisabled_;
    }
    /**
     * <code>bool initiative_panel_buttons_disabled = 9;</code>
     * @param value The initiativePanelButtonsDisabled to set.
     * @return This builder for chaining.
     */
    public Builder setInitiativePanelButtonsDisabled(boolean value) {
      
      initiativePanelButtonsDisabled_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool initiative_panel_buttons_disabled = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearInitiativePanelButtonsDisabled() {
      
      initiativePanelButtonsDisabled_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto> lightSources_;
    private com.google.protobuf.MapField<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto>
    internalGetLightSources() {
      if (lightSources_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LightSourcesDefaultEntryHolder.defaultEntry);
      }
      return lightSources_;
    }
    private com.google.protobuf.MapField<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto>
    internalGetMutableLightSources() {
      onChanged();;
      if (lightSources_ == null) {
        lightSources_ = com.google.protobuf.MapField.newMapField(
            LightSourcesDefaultEntryHolder.defaultEntry);
      }
      if (!lightSources_.isMutable()) {
        lightSources_ = lightSources_.copy();
      }
      return lightSources_;
    }

    public int getLightSourcesCount() {
      return internalGetLightSources().getMap().size();
    }
    /**
     * <code>map&lt;string, .maptool.LightSourceListDto&gt; light_sources = 10;</code>
     */

    @java.lang.Override
    public boolean containsLightSources(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetLightSources().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLightSourcesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto> getLightSources() {
      return getLightSourcesMap();
    }
    /**
     * <code>map&lt;string, .maptool.LightSourceListDto&gt; light_sources = 10;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto> getLightSourcesMap() {
      return internalGetLightSources().getMap();
    }
    /**
     * <code>map&lt;string, .maptool.LightSourceListDto&gt; light_sources = 10;</code>
     */
    @java.lang.Override

    public net.rptools.maptool.server.proto.LightSourceListDto getLightSourcesOrDefault(
        java.lang.String key,
        net.rptools.maptool.server.proto.LightSourceListDto defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto> map =
          internalGetLightSources().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .maptool.LightSourceListDto&gt; light_sources = 10;</code>
     */
    @java.lang.Override

    public net.rptools.maptool.server.proto.LightSourceListDto getLightSourcesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto> map =
          internalGetLightSources().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearLightSources() {
      internalGetMutableLightSources().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .maptool.LightSourceListDto&gt; light_sources = 10;</code>
     */

    public Builder removeLightSources(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableLightSources().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto>
    getMutableLightSources() {
      return internalGetMutableLightSources().getMutableMap();
    }
    /**
     * <code>map&lt;string, .maptool.LightSourceListDto&gt; light_sources = 10;</code>
     */
    public Builder putLightSources(
        java.lang.String key,
        net.rptools.maptool.server.proto.LightSourceListDto value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableLightSources().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .maptool.LightSourceListDto&gt; light_sources = 10;</code>
     */

    public Builder putAllLightSources(
        java.util.Map<java.lang.String, net.rptools.maptool.server.proto.LightSourceListDto> values) {
      internalGetMutableLightSources().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.LazyStringList remoteRepositories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureRemoteRepositoriesIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        remoteRepositories_ = new com.google.protobuf.LazyStringArrayList(remoteRepositories_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <code>repeated string remote_repositories = 11;</code>
     * @return A list containing the remoteRepositories.
     */
    public com.google.protobuf.ProtocolStringList
        getRemoteRepositoriesList() {
      return remoteRepositories_.getUnmodifiableView();
    }
    /**
     * <code>repeated string remote_repositories = 11;</code>
     * @return The count of remoteRepositories.
     */
    public int getRemoteRepositoriesCount() {
      return remoteRepositories_.size();
    }
    /**
     * <code>repeated string remote_repositories = 11;</code>
     * @param index The index of the element to return.
     * @return The remoteRepositories at the given index.
     */
    public java.lang.String getRemoteRepositories(int index) {
      return remoteRepositories_.get(index);
    }
    /**
     * <code>repeated string remote_repositories = 11;</code>
     * @param index The index of the value to return.
     * @return The bytes of the remoteRepositories at the given index.
     */
    public com.google.protobuf.ByteString
        getRemoteRepositoriesBytes(int index) {
      return remoteRepositories_.getByteString(index);
    }
    /**
     * <code>repeated string remote_repositories = 11;</code>
     * @param index The index to set the value at.
     * @param value The remoteRepositories to set.
     * @return This builder for chaining.
     */
    public Builder setRemoteRepositories(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureRemoteRepositoriesIsMutable();
      remoteRepositories_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string remote_repositories = 11;</code>
     * @param value The remoteRepositories to add.
     * @return This builder for chaining.
     */
    public Builder addRemoteRepositories(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureRemoteRepositoriesIsMutable();
      remoteRepositories_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string remote_repositories = 11;</code>
     * @param values The remoteRepositories to add.
     * @return This builder for chaining.
     */
    public Builder addAllRemoteRepositories(
        java.lang.Iterable<java.lang.String> values) {
      ensureRemoteRepositoriesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, remoteRepositories_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string remote_repositories = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearRemoteRepositories() {
      remoteRepositories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string remote_repositories = 11;</code>
     * @param value The bytes of the remoteRepositories to add.
     * @return This builder for chaining.
     */
    public Builder addRemoteRepositoriesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureRemoteRepositoriesIsMutable();
      remoteRepositories_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<net.rptools.maptool.server.proto.LookupTableDto> lookupTables_ =
      java.util.Collections.emptyList();
    private void ensureLookupTablesIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        lookupTables_ = new java.util.ArrayList<net.rptools.maptool.server.proto.LookupTableDto>(lookupTables_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.LookupTableDto, net.rptools.maptool.server.proto.LookupTableDto.Builder, net.rptools.maptool.server.proto.LookupTableDtoOrBuilder> lookupTablesBuilder_;

    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.LookupTableDto> getLookupTablesList() {
      if (lookupTablesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(lookupTables_);
      } else {
        return lookupTablesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public int getLookupTablesCount() {
      if (lookupTablesBuilder_ == null) {
        return lookupTables_.size();
      } else {
        return lookupTablesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public net.rptools.maptool.server.proto.LookupTableDto getLookupTables(int index) {
      if (lookupTablesBuilder_ == null) {
        return lookupTables_.get(index);
      } else {
        return lookupTablesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public Builder setLookupTables(
        int index, net.rptools.maptool.server.proto.LookupTableDto value) {
      if (lookupTablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLookupTablesIsMutable();
        lookupTables_.set(index, value);
        onChanged();
      } else {
        lookupTablesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public Builder setLookupTables(
        int index, net.rptools.maptool.server.proto.LookupTableDto.Builder builderForValue) {
      if (lookupTablesBuilder_ == null) {
        ensureLookupTablesIsMutable();
        lookupTables_.set(index, builderForValue.build());
        onChanged();
      } else {
        lookupTablesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public Builder addLookupTables(net.rptools.maptool.server.proto.LookupTableDto value) {
      if (lookupTablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLookupTablesIsMutable();
        lookupTables_.add(value);
        onChanged();
      } else {
        lookupTablesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public Builder addLookupTables(
        int index, net.rptools.maptool.server.proto.LookupTableDto value) {
      if (lookupTablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLookupTablesIsMutable();
        lookupTables_.add(index, value);
        onChanged();
      } else {
        lookupTablesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public Builder addLookupTables(
        net.rptools.maptool.server.proto.LookupTableDto.Builder builderForValue) {
      if (lookupTablesBuilder_ == null) {
        ensureLookupTablesIsMutable();
        lookupTables_.add(builderForValue.build());
        onChanged();
      } else {
        lookupTablesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public Builder addLookupTables(
        int index, net.rptools.maptool.server.proto.LookupTableDto.Builder builderForValue) {
      if (lookupTablesBuilder_ == null) {
        ensureLookupTablesIsMutable();
        lookupTables_.add(index, builderForValue.build());
        onChanged();
      } else {
        lookupTablesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public Builder addAllLookupTables(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.LookupTableDto> values) {
      if (lookupTablesBuilder_ == null) {
        ensureLookupTablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lookupTables_);
        onChanged();
      } else {
        lookupTablesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public Builder clearLookupTables() {
      if (lookupTablesBuilder_ == null) {
        lookupTables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        lookupTablesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public Builder removeLookupTables(int index) {
      if (lookupTablesBuilder_ == null) {
        ensureLookupTablesIsMutable();
        lookupTables_.remove(index);
        onChanged();
      } else {
        lookupTablesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public net.rptools.maptool.server.proto.LookupTableDto.Builder getLookupTablesBuilder(
        int index) {
      return getLookupTablesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public net.rptools.maptool.server.proto.LookupTableDtoOrBuilder getLookupTablesOrBuilder(
        int index) {
      if (lookupTablesBuilder_ == null) {
        return lookupTables_.get(index);  } else {
        return lookupTablesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.LookupTableDtoOrBuilder> 
         getLookupTablesOrBuilderList() {
      if (lookupTablesBuilder_ != null) {
        return lookupTablesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(lookupTables_);
      }
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public net.rptools.maptool.server.proto.LookupTableDto.Builder addLookupTablesBuilder() {
      return getLookupTablesFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.LookupTableDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public net.rptools.maptool.server.proto.LookupTableDto.Builder addLookupTablesBuilder(
        int index) {
      return getLookupTablesFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.LookupTableDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.LookupTableDto lookup_tables = 12;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.LookupTableDto.Builder> 
         getLookupTablesBuilderList() {
      return getLookupTablesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.LookupTableDto, net.rptools.maptool.server.proto.LookupTableDto.Builder, net.rptools.maptool.server.proto.LookupTableDtoOrBuilder> 
        getLookupTablesFieldBuilder() {
      if (lookupTablesBuilder_ == null) {
        lookupTablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.LookupTableDto, net.rptools.maptool.server.proto.LookupTableDto.Builder, net.rptools.maptool.server.proto.LookupTableDtoOrBuilder>(
                lookupTables_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        lookupTables_ = null;
      }
      return lookupTablesBuilder_;
    }

    private java.util.List<net.rptools.maptool.server.proto.SightTypeDto> sightTypes_ =
      java.util.Collections.emptyList();
    private void ensureSightTypesIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        sightTypes_ = new java.util.ArrayList<net.rptools.maptool.server.proto.SightTypeDto>(sightTypes_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.SightTypeDto, net.rptools.maptool.server.proto.SightTypeDto.Builder, net.rptools.maptool.server.proto.SightTypeDtoOrBuilder> sightTypesBuilder_;

    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.SightTypeDto> getSightTypesList() {
      if (sightTypesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sightTypes_);
      } else {
        return sightTypesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public int getSightTypesCount() {
      if (sightTypesBuilder_ == null) {
        return sightTypes_.size();
      } else {
        return sightTypesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public net.rptools.maptool.server.proto.SightTypeDto getSightTypes(int index) {
      if (sightTypesBuilder_ == null) {
        return sightTypes_.get(index);
      } else {
        return sightTypesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public Builder setSightTypes(
        int index, net.rptools.maptool.server.proto.SightTypeDto value) {
      if (sightTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSightTypesIsMutable();
        sightTypes_.set(index, value);
        onChanged();
      } else {
        sightTypesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public Builder setSightTypes(
        int index, net.rptools.maptool.server.proto.SightTypeDto.Builder builderForValue) {
      if (sightTypesBuilder_ == null) {
        ensureSightTypesIsMutable();
        sightTypes_.set(index, builderForValue.build());
        onChanged();
      } else {
        sightTypesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public Builder addSightTypes(net.rptools.maptool.server.proto.SightTypeDto value) {
      if (sightTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSightTypesIsMutable();
        sightTypes_.add(value);
        onChanged();
      } else {
        sightTypesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public Builder addSightTypes(
        int index, net.rptools.maptool.server.proto.SightTypeDto value) {
      if (sightTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSightTypesIsMutable();
        sightTypes_.add(index, value);
        onChanged();
      } else {
        sightTypesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public Builder addSightTypes(
        net.rptools.maptool.server.proto.SightTypeDto.Builder builderForValue) {
      if (sightTypesBuilder_ == null) {
        ensureSightTypesIsMutable();
        sightTypes_.add(builderForValue.build());
        onChanged();
      } else {
        sightTypesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public Builder addSightTypes(
        int index, net.rptools.maptool.server.proto.SightTypeDto.Builder builderForValue) {
      if (sightTypesBuilder_ == null) {
        ensureSightTypesIsMutable();
        sightTypes_.add(index, builderForValue.build());
        onChanged();
      } else {
        sightTypesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public Builder addAllSightTypes(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.SightTypeDto> values) {
      if (sightTypesBuilder_ == null) {
        ensureSightTypesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sightTypes_);
        onChanged();
      } else {
        sightTypesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public Builder clearSightTypes() {
      if (sightTypesBuilder_ == null) {
        sightTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        sightTypesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public Builder removeSightTypes(int index) {
      if (sightTypesBuilder_ == null) {
        ensureSightTypesIsMutable();
        sightTypes_.remove(index);
        onChanged();
      } else {
        sightTypesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public net.rptools.maptool.server.proto.SightTypeDto.Builder getSightTypesBuilder(
        int index) {
      return getSightTypesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public net.rptools.maptool.server.proto.SightTypeDtoOrBuilder getSightTypesOrBuilder(
        int index) {
      if (sightTypesBuilder_ == null) {
        return sightTypes_.get(index);  } else {
        return sightTypesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.SightTypeDtoOrBuilder> 
         getSightTypesOrBuilderList() {
      if (sightTypesBuilder_ != null) {
        return sightTypesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sightTypes_);
      }
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public net.rptools.maptool.server.proto.SightTypeDto.Builder addSightTypesBuilder() {
      return getSightTypesFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.SightTypeDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public net.rptools.maptool.server.proto.SightTypeDto.Builder addSightTypesBuilder(
        int index) {
      return getSightTypesFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.SightTypeDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.SightTypeDto sight_types = 13;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.SightTypeDto.Builder> 
         getSightTypesBuilderList() {
      return getSightTypesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.SightTypeDto, net.rptools.maptool.server.proto.SightTypeDto.Builder, net.rptools.maptool.server.proto.SightTypeDtoOrBuilder> 
        getSightTypesFieldBuilder() {
      if (sightTypesBuilder_ == null) {
        sightTypesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.SightTypeDto, net.rptools.maptool.server.proto.SightTypeDto.Builder, net.rptools.maptool.server.proto.SightTypeDtoOrBuilder>(
                sightTypes_,
                ((bitField0_ & 0x00000080) != 0),
                getParentForChildren(),
                isClean());
        sightTypes_ = null;
      }
      return sightTypesBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto> tokenTypeStatSheet_;
    private com.google.protobuf.MapField<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto>
    internalGetTokenTypeStatSheet() {
      if (tokenTypeStatSheet_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TokenTypeStatSheetDefaultEntryHolder.defaultEntry);
      }
      return tokenTypeStatSheet_;
    }
    private com.google.protobuf.MapField<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto>
    internalGetMutableTokenTypeStatSheet() {
      onChanged();;
      if (tokenTypeStatSheet_ == null) {
        tokenTypeStatSheet_ = com.google.protobuf.MapField.newMapField(
            TokenTypeStatSheetDefaultEntryHolder.defaultEntry);
      }
      if (!tokenTypeStatSheet_.isMutable()) {
        tokenTypeStatSheet_ = tokenTypeStatSheet_.copy();
      }
      return tokenTypeStatSheet_;
    }

    public int getTokenTypeStatSheetCount() {
      return internalGetTokenTypeStatSheet().getMap().size();
    }
    /**
     * <code>map&lt;string, .maptool.StatSheetPropertiesDto&gt; token_type_stat_sheet = 14;</code>
     */

    @java.lang.Override
    public boolean containsTokenTypeStatSheet(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetTokenTypeStatSheet().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTokenTypeStatSheetMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto> getTokenTypeStatSheet() {
      return getTokenTypeStatSheetMap();
    }
    /**
     * <code>map&lt;string, .maptool.StatSheetPropertiesDto&gt; token_type_stat_sheet = 14;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto> getTokenTypeStatSheetMap() {
      return internalGetTokenTypeStatSheet().getMap();
    }
    /**
     * <code>map&lt;string, .maptool.StatSheetPropertiesDto&gt; token_type_stat_sheet = 14;</code>
     */
    @java.lang.Override

    public net.rptools.maptool.server.proto.StatSheetPropertiesDto getTokenTypeStatSheetOrDefault(
        java.lang.String key,
        net.rptools.maptool.server.proto.StatSheetPropertiesDto defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto> map =
          internalGetTokenTypeStatSheet().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .maptool.StatSheetPropertiesDto&gt; token_type_stat_sheet = 14;</code>
     */
    @java.lang.Override

    public net.rptools.maptool.server.proto.StatSheetPropertiesDto getTokenTypeStatSheetOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto> map =
          internalGetTokenTypeStatSheet().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearTokenTypeStatSheet() {
      internalGetMutableTokenTypeStatSheet().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .maptool.StatSheetPropertiesDto&gt; token_type_stat_sheet = 14;</code>
     */

    public Builder removeTokenTypeStatSheet(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableTokenTypeStatSheet().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto>
    getMutableTokenTypeStatSheet() {
      return internalGetMutableTokenTypeStatSheet().getMutableMap();
    }
    /**
     * <code>map&lt;string, .maptool.StatSheetPropertiesDto&gt; token_type_stat_sheet = 14;</code>
     */
    public Builder putTokenTypeStatSheet(
        java.lang.String key,
        net.rptools.maptool.server.proto.StatSheetPropertiesDto value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableTokenTypeStatSheet().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .maptool.StatSheetPropertiesDto&gt; token_type_stat_sheet = 14;</code>
     */

    public Builder putAllTokenTypeStatSheet(
        java.util.Map<java.lang.String, net.rptools.maptool.server.proto.StatSheetPropertiesDto> values) {
      internalGetMutableTokenTypeStatSheet().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.StringValue defaultTokenPropertyType_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> defaultTokenPropertyTypeBuilder_;
    /**
     * <code>.google.protobuf.StringValue default_token_property_type = 15;</code>
     * @return Whether the defaultTokenPropertyType field is set.
     */
    public boolean hasDefaultTokenPropertyType() {
      return defaultTokenPropertyTypeBuilder_ != null || defaultTokenPropertyType_ != null;
    }
    /**
     * <code>.google.protobuf.StringValue default_token_property_type = 15;</code>
     * @return The defaultTokenPropertyType.
     */
    public com.google.protobuf.StringValue getDefaultTokenPropertyType() {
      if (defaultTokenPropertyTypeBuilder_ == null) {
        return defaultTokenPropertyType_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : defaultTokenPropertyType_;
      } else {
        return defaultTokenPropertyTypeBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.protobuf.StringValue default_token_property_type = 15;</code>
     */
    public Builder setDefaultTokenPropertyType(com.google.protobuf.StringValue value) {
      if (defaultTokenPropertyTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        defaultTokenPropertyType_ = value;
        onChanged();
      } else {
        defaultTokenPropertyTypeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue default_token_property_type = 15;</code>
     */
    public Builder setDefaultTokenPropertyType(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (defaultTokenPropertyTypeBuilder_ == null) {
        defaultTokenPropertyType_ = builderForValue.build();
        onChanged();
      } else {
        defaultTokenPropertyTypeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue default_token_property_type = 15;</code>
     */
    public Builder mergeDefaultTokenPropertyType(com.google.protobuf.StringValue value) {
      if (defaultTokenPropertyTypeBuilder_ == null) {
        if (defaultTokenPropertyType_ != null) {
          defaultTokenPropertyType_ =
            com.google.protobuf.StringValue.newBuilder(defaultTokenPropertyType_).mergeFrom(value).buildPartial();
        } else {
          defaultTokenPropertyType_ = value;
        }
        onChanged();
      } else {
        defaultTokenPropertyTypeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue default_token_property_type = 15;</code>
     */
    public Builder clearDefaultTokenPropertyType() {
      if (defaultTokenPropertyTypeBuilder_ == null) {
        defaultTokenPropertyType_ = null;
        onChanged();
      } else {
        defaultTokenPropertyType_ = null;
        defaultTokenPropertyTypeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue default_token_property_type = 15;</code>
     */
    public com.google.protobuf.StringValue.Builder getDefaultTokenPropertyTypeBuilder() {
      
      onChanged();
      return getDefaultTokenPropertyTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.protobuf.StringValue default_token_property_type = 15;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getDefaultTokenPropertyTypeOrBuilder() {
      if (defaultTokenPropertyTypeBuilder_ != null) {
        return defaultTokenPropertyTypeBuilder_.getMessageOrBuilder();
      } else {
        return defaultTokenPropertyType_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : defaultTokenPropertyType_;
      }
    }
    /**
     * <code>.google.protobuf.StringValue default_token_property_type = 15;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getDefaultTokenPropertyTypeFieldBuilder() {
      if (defaultTokenPropertyTypeBuilder_ == null) {
        defaultTokenPropertyTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getDefaultTokenPropertyType(),
                getParentForChildren(),
                isClean());
        defaultTokenPropertyType_ = null;
      }
      return defaultTokenPropertyTypeBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maptool.CampaignPropertiesDto)
  }

  // @@protoc_insertion_point(class_scope:maptool.CampaignPropertiesDto)
  private static final net.rptools.maptool.server.proto.CampaignPropertiesDto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new net.rptools.maptool.server.proto.CampaignPropertiesDto();
  }

  public static net.rptools.maptool.server.proto.CampaignPropertiesDto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CampaignPropertiesDto>
      PARSER = new com.google.protobuf.AbstractParser<CampaignPropertiesDto>() {
    @java.lang.Override
    public CampaignPropertiesDto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CampaignPropertiesDto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CampaignPropertiesDto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CampaignPropertiesDto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public net.rptools.maptool.server.proto.CampaignPropertiesDto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

