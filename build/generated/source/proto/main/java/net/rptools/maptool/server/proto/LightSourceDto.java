// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_transfer_objects.proto

package net.rptools.maptool.server.proto;

/**
 * Protobuf type {@code maptool.LightSourceDto}
 */
public final class LightSourceDto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maptool.LightSourceDto)
    LightSourceDtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LightSourceDto.newBuilder() to construct.
  private LightSourceDto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LightSourceDto() {
    lights_ = java.util.Collections.emptyList();
    type_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LightSourceDto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private LightSourceDto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              lights_ = new java.util.ArrayList<net.rptools.maptool.server.proto.LightDto>();
              mutable_bitField0_ |= 0x00000001;
            }
            lights_.add(
                input.readMessage(net.rptools.maptool.server.proto.LightDto.parser(), extensionRegistry));
            break;
          }
          case 18: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (name_ != null) {
              subBuilder = name_.toBuilder();
            }
            name_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(name_);
              name_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (id_ != null) {
              subBuilder = id_.toBuilder();
            }
            id_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(id_);
              id_ = subBuilder.buildPartial();
            }

            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 40: {

            scaleWithToken_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        lights_ = java.util.Collections.unmodifiableList(lights_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_LightSourceDto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_LightSourceDto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            net.rptools.maptool.server.proto.LightSourceDto.class, net.rptools.maptool.server.proto.LightSourceDto.Builder.class);
  }

  /**
   * Protobuf enum {@code maptool.LightSourceDto.LightTypeDto}
   */
  public enum LightTypeDto
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NORMAL = 0;</code>
     */
    NORMAL(0),
    /**
     * <code>AURA = 1;</code>
     */
    AURA(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NORMAL = 0;</code>
     */
    public static final int NORMAL_VALUE = 0;
    /**
     * <code>AURA = 1;</code>
     */
    public static final int AURA_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LightTypeDto valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LightTypeDto forNumber(int value) {
      switch (value) {
        case 0: return NORMAL;
        case 1: return AURA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LightTypeDto>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LightTypeDto> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LightTypeDto>() {
            public LightTypeDto findValueByNumber(int number) {
              return LightTypeDto.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.LightSourceDto.getDescriptor().getEnumTypes().get(0);
    }

    private static final LightTypeDto[] VALUES = values();

    public static LightTypeDto valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LightTypeDto(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maptool.LightSourceDto.LightTypeDto)
  }

  public static final int LIGHTS_FIELD_NUMBER = 1;
  private java.util.List<net.rptools.maptool.server.proto.LightDto> lights_;
  /**
   * <code>repeated .maptool.LightDto lights = 1;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.LightDto> getLightsList() {
    return lights_;
  }
  /**
   * <code>repeated .maptool.LightDto lights = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.LightDtoOrBuilder> 
      getLightsOrBuilderList() {
    return lights_;
  }
  /**
   * <code>repeated .maptool.LightDto lights = 1;</code>
   */
  @java.lang.Override
  public int getLightsCount() {
    return lights_.size();
  }
  /**
   * <code>repeated .maptool.LightDto lights = 1;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.LightDto getLights(int index) {
    return lights_.get(index);
  }
  /**
   * <code>repeated .maptool.LightDto lights = 1;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.LightDtoOrBuilder getLightsOrBuilder(
      int index) {
    return lights_.get(index);
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private com.google.protobuf.StringValue name_;
  /**
   * <code>.google.protobuf.StringValue name = 2;</code>
   * @return Whether the name field is set.
   */
  @java.lang.Override
  public boolean hasName() {
    return name_ != null;
  }
  /**
   * <code>.google.protobuf.StringValue name = 2;</code>
   * @return The name.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getName() {
    return name_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : name_;
  }
  /**
   * <code>.google.protobuf.StringValue name = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getNameOrBuilder() {
    return getName();
  }

  public static final int ID_FIELD_NUMBER = 3;
  private com.google.protobuf.StringValue id_;
  /**
   * <code>.google.protobuf.StringValue id = 3;</code>
   * @return Whether the id field is set.
   */
  @java.lang.Override
  public boolean hasId() {
    return id_ != null;
  }
  /**
   * <code>.google.protobuf.StringValue id = 3;</code>
   * @return The id.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getId() {
    return id_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : id_;
  }
  /**
   * <code>.google.protobuf.StringValue id = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getIdOrBuilder() {
    return getId();
  }

  public static final int TYPE_FIELD_NUMBER = 4;
  private int type_;
  /**
   * <code>.maptool.LightSourceDto.LightTypeDto type = 4;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <code>.maptool.LightSourceDto.LightTypeDto type = 4;</code>
   * @return The type.
   */
  @java.lang.Override public net.rptools.maptool.server.proto.LightSourceDto.LightTypeDto getType() {
    @SuppressWarnings("deprecation")
    net.rptools.maptool.server.proto.LightSourceDto.LightTypeDto result = net.rptools.maptool.server.proto.LightSourceDto.LightTypeDto.valueOf(type_);
    return result == null ? net.rptools.maptool.server.proto.LightSourceDto.LightTypeDto.UNRECOGNIZED : result;
  }

  public static final int SCALE_WITH_TOKEN_FIELD_NUMBER = 5;
  private boolean scaleWithToken_;
  /**
   * <code>bool scale_with_token = 5;</code>
   * @return The scaleWithToken.
   */
  @java.lang.Override
  public boolean getScaleWithToken() {
    return scaleWithToken_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < lights_.size(); i++) {
      output.writeMessage(1, lights_.get(i));
    }
    if (name_ != null) {
      output.writeMessage(2, getName());
    }
    if (id_ != null) {
      output.writeMessage(3, getId());
    }
    if (type_ != net.rptools.maptool.server.proto.LightSourceDto.LightTypeDto.NORMAL.getNumber()) {
      output.writeEnum(4, type_);
    }
    if (scaleWithToken_ != false) {
      output.writeBool(5, scaleWithToken_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < lights_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, lights_.get(i));
    }
    if (name_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getName());
    }
    if (id_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getId());
    }
    if (type_ != net.rptools.maptool.server.proto.LightSourceDto.LightTypeDto.NORMAL.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, type_);
    }
    if (scaleWithToken_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, scaleWithToken_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof net.rptools.maptool.server.proto.LightSourceDto)) {
      return super.equals(obj);
    }
    net.rptools.maptool.server.proto.LightSourceDto other = (net.rptools.maptool.server.proto.LightSourceDto) obj;

    if (!getLightsList()
        .equals(other.getLightsList())) return false;
    if (hasName() != other.hasName()) return false;
    if (hasName()) {
      if (!getName()
          .equals(other.getName())) return false;
    }
    if (hasId() != other.hasId()) return false;
    if (hasId()) {
      if (!getId()
          .equals(other.getId())) return false;
    }
    if (type_ != other.type_) return false;
    if (getScaleWithToken()
        != other.getScaleWithToken()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getLightsCount() > 0) {
      hash = (37 * hash) + LIGHTS_FIELD_NUMBER;
      hash = (53 * hash) + getLightsList().hashCode();
    }
    if (hasName()) {
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
    }
    if (hasId()) {
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
    }
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + SCALE_WITH_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getScaleWithToken());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static net.rptools.maptool.server.proto.LightSourceDto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.LightSourceDto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.LightSourceDto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.LightSourceDto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.LightSourceDto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.LightSourceDto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.LightSourceDto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.LightSourceDto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.LightSourceDto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.LightSourceDto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.LightSourceDto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.LightSourceDto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(net.rptools.maptool.server.proto.LightSourceDto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code maptool.LightSourceDto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maptool.LightSourceDto)
      net.rptools.maptool.server.proto.LightSourceDtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_LightSourceDto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_LightSourceDto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.rptools.maptool.server.proto.LightSourceDto.class, net.rptools.maptool.server.proto.LightSourceDto.Builder.class);
    }

    // Construct using net.rptools.maptool.server.proto.LightSourceDto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getLightsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (lightsBuilder_ == null) {
        lights_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        lightsBuilder_.clear();
      }
      if (nameBuilder_ == null) {
        name_ = null;
      } else {
        name_ = null;
        nameBuilder_ = null;
      }
      if (idBuilder_ == null) {
        id_ = null;
      } else {
        id_ = null;
        idBuilder_ = null;
      }
      type_ = 0;

      scaleWithToken_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_LightSourceDto_descriptor;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.LightSourceDto getDefaultInstanceForType() {
      return net.rptools.maptool.server.proto.LightSourceDto.getDefaultInstance();
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.LightSourceDto build() {
      net.rptools.maptool.server.proto.LightSourceDto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.LightSourceDto buildPartial() {
      net.rptools.maptool.server.proto.LightSourceDto result = new net.rptools.maptool.server.proto.LightSourceDto(this);
      int from_bitField0_ = bitField0_;
      if (lightsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          lights_ = java.util.Collections.unmodifiableList(lights_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.lights_ = lights_;
      } else {
        result.lights_ = lightsBuilder_.build();
      }
      if (nameBuilder_ == null) {
        result.name_ = name_;
      } else {
        result.name_ = nameBuilder_.build();
      }
      if (idBuilder_ == null) {
        result.id_ = id_;
      } else {
        result.id_ = idBuilder_.build();
      }
      result.type_ = type_;
      result.scaleWithToken_ = scaleWithToken_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof net.rptools.maptool.server.proto.LightSourceDto) {
        return mergeFrom((net.rptools.maptool.server.proto.LightSourceDto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(net.rptools.maptool.server.proto.LightSourceDto other) {
      if (other == net.rptools.maptool.server.proto.LightSourceDto.getDefaultInstance()) return this;
      if (lightsBuilder_ == null) {
        if (!other.lights_.isEmpty()) {
          if (lights_.isEmpty()) {
            lights_ = other.lights_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureLightsIsMutable();
            lights_.addAll(other.lights_);
          }
          onChanged();
        }
      } else {
        if (!other.lights_.isEmpty()) {
          if (lightsBuilder_.isEmpty()) {
            lightsBuilder_.dispose();
            lightsBuilder_ = null;
            lights_ = other.lights_;
            bitField0_ = (bitField0_ & ~0x00000001);
            lightsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLightsFieldBuilder() : null;
          } else {
            lightsBuilder_.addAllMessages(other.lights_);
          }
        }
      }
      if (other.hasName()) {
        mergeName(other.getName());
      }
      if (other.hasId()) {
        mergeId(other.getId());
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (other.getScaleWithToken() != false) {
        setScaleWithToken(other.getScaleWithToken());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      net.rptools.maptool.server.proto.LightSourceDto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (net.rptools.maptool.server.proto.LightSourceDto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<net.rptools.maptool.server.proto.LightDto> lights_ =
      java.util.Collections.emptyList();
    private void ensureLightsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        lights_ = new java.util.ArrayList<net.rptools.maptool.server.proto.LightDto>(lights_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.LightDto, net.rptools.maptool.server.proto.LightDto.Builder, net.rptools.maptool.server.proto.LightDtoOrBuilder> lightsBuilder_;

    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.LightDto> getLightsList() {
      if (lightsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(lights_);
      } else {
        return lightsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public int getLightsCount() {
      if (lightsBuilder_ == null) {
        return lights_.size();
      } else {
        return lightsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public net.rptools.maptool.server.proto.LightDto getLights(int index) {
      if (lightsBuilder_ == null) {
        return lights_.get(index);
      } else {
        return lightsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public Builder setLights(
        int index, net.rptools.maptool.server.proto.LightDto value) {
      if (lightsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLightsIsMutable();
        lights_.set(index, value);
        onChanged();
      } else {
        lightsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public Builder setLights(
        int index, net.rptools.maptool.server.proto.LightDto.Builder builderForValue) {
      if (lightsBuilder_ == null) {
        ensureLightsIsMutable();
        lights_.set(index, builderForValue.build());
        onChanged();
      } else {
        lightsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public Builder addLights(net.rptools.maptool.server.proto.LightDto value) {
      if (lightsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLightsIsMutable();
        lights_.add(value);
        onChanged();
      } else {
        lightsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public Builder addLights(
        int index, net.rptools.maptool.server.proto.LightDto value) {
      if (lightsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLightsIsMutable();
        lights_.add(index, value);
        onChanged();
      } else {
        lightsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public Builder addLights(
        net.rptools.maptool.server.proto.LightDto.Builder builderForValue) {
      if (lightsBuilder_ == null) {
        ensureLightsIsMutable();
        lights_.add(builderForValue.build());
        onChanged();
      } else {
        lightsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public Builder addLights(
        int index, net.rptools.maptool.server.proto.LightDto.Builder builderForValue) {
      if (lightsBuilder_ == null) {
        ensureLightsIsMutable();
        lights_.add(index, builderForValue.build());
        onChanged();
      } else {
        lightsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public Builder addAllLights(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.LightDto> values) {
      if (lightsBuilder_ == null) {
        ensureLightsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lights_);
        onChanged();
      } else {
        lightsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public Builder clearLights() {
      if (lightsBuilder_ == null) {
        lights_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        lightsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public Builder removeLights(int index) {
      if (lightsBuilder_ == null) {
        ensureLightsIsMutable();
        lights_.remove(index);
        onChanged();
      } else {
        lightsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public net.rptools.maptool.server.proto.LightDto.Builder getLightsBuilder(
        int index) {
      return getLightsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public net.rptools.maptool.server.proto.LightDtoOrBuilder getLightsOrBuilder(
        int index) {
      if (lightsBuilder_ == null) {
        return lights_.get(index);  } else {
        return lightsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.LightDtoOrBuilder> 
         getLightsOrBuilderList() {
      if (lightsBuilder_ != null) {
        return lightsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(lights_);
      }
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public net.rptools.maptool.server.proto.LightDto.Builder addLightsBuilder() {
      return getLightsFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.LightDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public net.rptools.maptool.server.proto.LightDto.Builder addLightsBuilder(
        int index) {
      return getLightsFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.LightDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.LightDto lights = 1;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.LightDto.Builder> 
         getLightsBuilderList() {
      return getLightsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.LightDto, net.rptools.maptool.server.proto.LightDto.Builder, net.rptools.maptool.server.proto.LightDtoOrBuilder> 
        getLightsFieldBuilder() {
      if (lightsBuilder_ == null) {
        lightsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.LightDto, net.rptools.maptool.server.proto.LightDto.Builder, net.rptools.maptool.server.proto.LightDtoOrBuilder>(
                lights_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        lights_ = null;
      }
      return lightsBuilder_;
    }

    private com.google.protobuf.StringValue name_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> nameBuilder_;
    /**
     * <code>.google.protobuf.StringValue name = 2;</code>
     * @return Whether the name field is set.
     */
    public boolean hasName() {
      return nameBuilder_ != null || name_ != null;
    }
    /**
     * <code>.google.protobuf.StringValue name = 2;</code>
     * @return The name.
     */
    public com.google.protobuf.StringValue getName() {
      if (nameBuilder_ == null) {
        return name_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : name_;
      } else {
        return nameBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.protobuf.StringValue name = 2;</code>
     */
    public Builder setName(com.google.protobuf.StringValue value) {
      if (nameBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        name_ = value;
        onChanged();
      } else {
        nameBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue name = 2;</code>
     */
    public Builder setName(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (nameBuilder_ == null) {
        name_ = builderForValue.build();
        onChanged();
      } else {
        nameBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue name = 2;</code>
     */
    public Builder mergeName(com.google.protobuf.StringValue value) {
      if (nameBuilder_ == null) {
        if (name_ != null) {
          name_ =
            com.google.protobuf.StringValue.newBuilder(name_).mergeFrom(value).buildPartial();
        } else {
          name_ = value;
        }
        onChanged();
      } else {
        nameBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue name = 2;</code>
     */
    public Builder clearName() {
      if (nameBuilder_ == null) {
        name_ = null;
        onChanged();
      } else {
        name_ = null;
        nameBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue name = 2;</code>
     */
    public com.google.protobuf.StringValue.Builder getNameBuilder() {
      
      onChanged();
      return getNameFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.protobuf.StringValue name = 2;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getNameOrBuilder() {
      if (nameBuilder_ != null) {
        return nameBuilder_.getMessageOrBuilder();
      } else {
        return name_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : name_;
      }
    }
    /**
     * <code>.google.protobuf.StringValue name = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getNameFieldBuilder() {
      if (nameBuilder_ == null) {
        nameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getName(),
                getParentForChildren(),
                isClean());
        name_ = null;
      }
      return nameBuilder_;
    }

    private com.google.protobuf.StringValue id_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> idBuilder_;
    /**
     * <code>.google.protobuf.StringValue id = 3;</code>
     * @return Whether the id field is set.
     */
    public boolean hasId() {
      return idBuilder_ != null || id_ != null;
    }
    /**
     * <code>.google.protobuf.StringValue id = 3;</code>
     * @return The id.
     */
    public com.google.protobuf.StringValue getId() {
      if (idBuilder_ == null) {
        return id_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : id_;
      } else {
        return idBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.protobuf.StringValue id = 3;</code>
     */
    public Builder setId(com.google.protobuf.StringValue value) {
      if (idBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        id_ = value;
        onChanged();
      } else {
        idBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue id = 3;</code>
     */
    public Builder setId(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (idBuilder_ == null) {
        id_ = builderForValue.build();
        onChanged();
      } else {
        idBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue id = 3;</code>
     */
    public Builder mergeId(com.google.protobuf.StringValue value) {
      if (idBuilder_ == null) {
        if (id_ != null) {
          id_ =
            com.google.protobuf.StringValue.newBuilder(id_).mergeFrom(value).buildPartial();
        } else {
          id_ = value;
        }
        onChanged();
      } else {
        idBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue id = 3;</code>
     */
    public Builder clearId() {
      if (idBuilder_ == null) {
        id_ = null;
        onChanged();
      } else {
        id_ = null;
        idBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.google.protobuf.StringValue id = 3;</code>
     */
    public com.google.protobuf.StringValue.Builder getIdBuilder() {
      
      onChanged();
      return getIdFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.protobuf.StringValue id = 3;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getIdOrBuilder() {
      if (idBuilder_ != null) {
        return idBuilder_.getMessageOrBuilder();
      } else {
        return id_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : id_;
      }
    }
    /**
     * <code>.google.protobuf.StringValue id = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getIdFieldBuilder() {
      if (idBuilder_ == null) {
        idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getId(),
                getParentForChildren(),
                isClean());
        id_ = null;
      }
      return idBuilder_;
    }

    private int type_ = 0;
    /**
     * <code>.maptool.LightSourceDto.LightTypeDto type = 4;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.maptool.LightSourceDto.LightTypeDto type = 4;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.LightSourceDto.LightTypeDto type = 4;</code>
     * @return The type.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.LightSourceDto.LightTypeDto getType() {
      @SuppressWarnings("deprecation")
      net.rptools.maptool.server.proto.LightSourceDto.LightTypeDto result = net.rptools.maptool.server.proto.LightSourceDto.LightTypeDto.valueOf(type_);
      return result == null ? net.rptools.maptool.server.proto.LightSourceDto.LightTypeDto.UNRECOGNIZED : result;
    }
    /**
     * <code>.maptool.LightSourceDto.LightTypeDto type = 4;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(net.rptools.maptool.server.proto.LightSourceDto.LightTypeDto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.LightSourceDto.LightTypeDto type = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private boolean scaleWithToken_ ;
    /**
     * <code>bool scale_with_token = 5;</code>
     * @return The scaleWithToken.
     */
    @java.lang.Override
    public boolean getScaleWithToken() {
      return scaleWithToken_;
    }
    /**
     * <code>bool scale_with_token = 5;</code>
     * @param value The scaleWithToken to set.
     * @return This builder for chaining.
     */
    public Builder setScaleWithToken(boolean value) {
      
      scaleWithToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool scale_with_token = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearScaleWithToken() {
      
      scaleWithToken_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maptool.LightSourceDto)
  }

  // @@protoc_insertion_point(class_scope:maptool.LightSourceDto)
  private static final net.rptools.maptool.server.proto.LightSourceDto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new net.rptools.maptool.server.proto.LightSourceDto();
  }

  public static net.rptools.maptool.server.proto.LightSourceDto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LightSourceDto>
      PARSER = new com.google.protobuf.AbstractParser<LightSourceDto>() {
    @java.lang.Override
    public LightSourceDto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new LightSourceDto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<LightSourceDto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LightSourceDto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public net.rptools.maptool.server.proto.LightSourceDto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

