// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_transfer_objects.proto

package net.rptools.maptool.server.proto;

/**
 * Protobuf type {@code maptool.CampaignDto}
 */
public final class CampaignDto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maptool.CampaignDto)
    CampaignDtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CampaignDto.newBuilder() to construct.
  private CampaignDto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CampaignDto() {
    id_ = "";
    name_ = "";
    macroButtonProperties_ = java.util.Collections.emptyList();
    zones_ = java.util.Collections.emptyList();
    gmMacroButtonProperties_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CampaignDto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CampaignDto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 26: {
            com.google.protobuf.BoolValue.Builder subBuilder = null;
            if (hasUsedFogToolbar_ != null) {
              subBuilder = hasUsedFogToolbar_.toBuilder();
            }
            hasUsedFogToolbar_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(hasUsedFogToolbar_);
              hasUsedFogToolbar_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            net.rptools.maptool.server.proto.CampaignPropertiesDto.Builder subBuilder = null;
            if (properties_ != null) {
              subBuilder = properties_.toBuilder();
            }
            properties_ = input.readMessage(net.rptools.maptool.server.proto.CampaignPropertiesDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(properties_);
              properties_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            net.rptools.maptool.server.proto.LocationDto.Builder subBuilder = null;
            if (exportLocation_ != null) {
              subBuilder = exportLocation_.toBuilder();
            }
            exportLocation_ = input.readMessage(net.rptools.maptool.server.proto.LocationDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(exportLocation_);
              exportLocation_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              exportSettings_ = com.google.protobuf.MapField.newMapField(
                  ExportSettingsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Boolean>
            exportSettings__ = input.readMessage(
                ExportSettingsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            exportSettings_.getMutableMap().put(
                exportSettings__.getKey(), exportSettings__.getValue());
            break;
          }
          case 56: {

            macroButtonLastIndex_ = input.readInt32();
            break;
          }
          case 64: {

            gmMacroButtonLastIndex_ = input.readInt32();
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              macroButtonProperties_ = new java.util.ArrayList<net.rptools.maptool.server.proto.MacroButtonPropertiesDto>();
              mutable_bitField0_ |= 0x00000002;
            }
            macroButtonProperties_.add(
                input.readMessage(net.rptools.maptool.server.proto.MacroButtonPropertiesDto.parser(), extensionRegistry));
            break;
          }
          case 82: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              zones_ = new java.util.ArrayList<net.rptools.maptool.server.proto.ZoneDto>();
              mutable_bitField0_ |= 0x00000004;
            }
            zones_.add(
                input.readMessage(net.rptools.maptool.server.proto.ZoneDto.parser(), extensionRegistry));
            break;
          }
          case 90: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              gmMacroButtonProperties_ = new java.util.ArrayList<net.rptools.maptool.server.proto.MacroButtonPropertiesDto>();
              mutable_bitField0_ |= 0x00000008;
            }
            gmMacroButtonProperties_.add(
                input.readMessage(net.rptools.maptool.server.proto.MacroButtonPropertiesDto.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        macroButtonProperties_ = java.util.Collections.unmodifiableList(macroButtonProperties_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        zones_ = java.util.Collections.unmodifiableList(zones_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        gmMacroButtonProperties_ = java.util.Collections.unmodifiableList(gmMacroButtonProperties_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignDto_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 6:
        return internalGetExportSettings();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignDto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            net.rptools.maptool.server.proto.CampaignDto.class, net.rptools.maptool.server.proto.CampaignDto.Builder.class);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object id_;
  /**
   * <code>string id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object name_;
  /**
   * <code>string name = 2;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HAS_USED_FOG_TOOLBAR_FIELD_NUMBER = 3;
  private com.google.protobuf.BoolValue hasUsedFogToolbar_;
  /**
   * <code>.google.protobuf.BoolValue has_used_fog_toolbar = 3;</code>
   * @return Whether the hasUsedFogToolbar field is set.
   */
  @java.lang.Override
  public boolean hasHasUsedFogToolbar() {
    return hasUsedFogToolbar_ != null;
  }
  /**
   * <code>.google.protobuf.BoolValue has_used_fog_toolbar = 3;</code>
   * @return The hasUsedFogToolbar.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getHasUsedFogToolbar() {
    return hasUsedFogToolbar_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : hasUsedFogToolbar_;
  }
  /**
   * <code>.google.protobuf.BoolValue has_used_fog_toolbar = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getHasUsedFogToolbarOrBuilder() {
    return getHasUsedFogToolbar();
  }

  public static final int PROPERTIES_FIELD_NUMBER = 4;
  private net.rptools.maptool.server.proto.CampaignPropertiesDto properties_;
  /**
   * <code>.maptool.CampaignPropertiesDto properties = 4;</code>
   * @return Whether the properties field is set.
   */
  @java.lang.Override
  public boolean hasProperties() {
    return properties_ != null;
  }
  /**
   * <code>.maptool.CampaignPropertiesDto properties = 4;</code>
   * @return The properties.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.CampaignPropertiesDto getProperties() {
    return properties_ == null ? net.rptools.maptool.server.proto.CampaignPropertiesDto.getDefaultInstance() : properties_;
  }
  /**
   * <code>.maptool.CampaignPropertiesDto properties = 4;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.CampaignPropertiesDtoOrBuilder getPropertiesOrBuilder() {
    return getProperties();
  }

  public static final int EXPORT_LOCATION_FIELD_NUMBER = 5;
  private net.rptools.maptool.server.proto.LocationDto exportLocation_;
  /**
   * <code>.maptool.LocationDto export_location = 5;</code>
   * @return Whether the exportLocation field is set.
   */
  @java.lang.Override
  public boolean hasExportLocation() {
    return exportLocation_ != null;
  }
  /**
   * <code>.maptool.LocationDto export_location = 5;</code>
   * @return The exportLocation.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.LocationDto getExportLocation() {
    return exportLocation_ == null ? net.rptools.maptool.server.proto.LocationDto.getDefaultInstance() : exportLocation_;
  }
  /**
   * <code>.maptool.LocationDto export_location = 5;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.LocationDtoOrBuilder getExportLocationOrBuilder() {
    return getExportLocation();
  }

  public static final int EXPORT_SETTINGS_FIELD_NUMBER = 6;
  private static final class ExportSettingsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Boolean> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Boolean>newDefaultInstance(
                net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignDto_ExportSettingsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.BOOL,
                false);
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Boolean> exportSettings_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
  internalGetExportSettings() {
    if (exportSettings_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ExportSettingsDefaultEntryHolder.defaultEntry);
    }
    return exportSettings_;
  }

  public int getExportSettingsCount() {
    return internalGetExportSettings().getMap().size();
  }
  /**
   * <code>map&lt;string, bool&gt; export_settings = 6;</code>
   */

  @java.lang.Override
  public boolean containsExportSettings(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetExportSettings().getMap().containsKey(key);
  }
  /**
   * Use {@link #getExportSettingsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Boolean> getExportSettings() {
    return getExportSettingsMap();
  }
  /**
   * <code>map&lt;string, bool&gt; export_settings = 6;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.Boolean> getExportSettingsMap() {
    return internalGetExportSettings().getMap();
  }
  /**
   * <code>map&lt;string, bool&gt; export_settings = 6;</code>
   */
  @java.lang.Override

  public boolean getExportSettingsOrDefault(
      java.lang.String key,
      boolean defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Boolean> map =
        internalGetExportSettings().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, bool&gt; export_settings = 6;</code>
   */
  @java.lang.Override

  public boolean getExportSettingsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Boolean> map =
        internalGetExportSettings().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int MACRO_BUTTON_LAST_INDEX_FIELD_NUMBER = 7;
  private int macroButtonLastIndex_;
  /**
   * <code>int32 macro_button_last_index = 7;</code>
   * @return The macroButtonLastIndex.
   */
  @java.lang.Override
  public int getMacroButtonLastIndex() {
    return macroButtonLastIndex_;
  }

  public static final int GM_MACRO_BUTTON_LAST_INDEX_FIELD_NUMBER = 8;
  private int gmMacroButtonLastIndex_;
  /**
   * <code>int32 gm_macro_button_last_index = 8;</code>
   * @return The gmMacroButtonLastIndex.
   */
  @java.lang.Override
  public int getGmMacroButtonLastIndex() {
    return gmMacroButtonLastIndex_;
  }

  public static final int MACRO_BUTTON_PROPERTIES_FIELD_NUMBER = 9;
  private java.util.List<net.rptools.maptool.server.proto.MacroButtonPropertiesDto> macroButtonProperties_;
  /**
   * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.MacroButtonPropertiesDto> getMacroButtonPropertiesList() {
    return macroButtonProperties_;
  }
  /**
   * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder> 
      getMacroButtonPropertiesOrBuilderList() {
    return macroButtonProperties_;
  }
  /**
   * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
   */
  @java.lang.Override
  public int getMacroButtonPropertiesCount() {
    return macroButtonProperties_.size();
  }
  /**
   * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.MacroButtonPropertiesDto getMacroButtonProperties(int index) {
    return macroButtonProperties_.get(index);
  }
  /**
   * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder getMacroButtonPropertiesOrBuilder(
      int index) {
    return macroButtonProperties_.get(index);
  }

  public static final int ZONES_FIELD_NUMBER = 10;
  private java.util.List<net.rptools.maptool.server.proto.ZoneDto> zones_;
  /**
   * <code>repeated .maptool.ZoneDto zones = 10;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.ZoneDto> getZonesList() {
    return zones_;
  }
  /**
   * <code>repeated .maptool.ZoneDto zones = 10;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.ZoneDtoOrBuilder> 
      getZonesOrBuilderList() {
    return zones_;
  }
  /**
   * <code>repeated .maptool.ZoneDto zones = 10;</code>
   */
  @java.lang.Override
  public int getZonesCount() {
    return zones_.size();
  }
  /**
   * <code>repeated .maptool.ZoneDto zones = 10;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.ZoneDto getZones(int index) {
    return zones_.get(index);
  }
  /**
   * <code>repeated .maptool.ZoneDto zones = 10;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.ZoneDtoOrBuilder getZonesOrBuilder(
      int index) {
    return zones_.get(index);
  }

  public static final int GM_MACRO_BUTTON_PROPERTIES_FIELD_NUMBER = 11;
  private java.util.List<net.rptools.maptool.server.proto.MacroButtonPropertiesDto> gmMacroButtonProperties_;
  /**
   * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.MacroButtonPropertiesDto> getGmMacroButtonPropertiesList() {
    return gmMacroButtonProperties_;
  }
  /**
   * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder> 
      getGmMacroButtonPropertiesOrBuilderList() {
    return gmMacroButtonProperties_;
  }
  /**
   * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
   */
  @java.lang.Override
  public int getGmMacroButtonPropertiesCount() {
    return gmMacroButtonProperties_.size();
  }
  /**
   * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.MacroButtonPropertiesDto getGmMacroButtonProperties(int index) {
    return gmMacroButtonProperties_.get(index);
  }
  /**
   * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder getGmMacroButtonPropertiesOrBuilder(
      int index) {
    return gmMacroButtonProperties_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    if (hasUsedFogToolbar_ != null) {
      output.writeMessage(3, getHasUsedFogToolbar());
    }
    if (properties_ != null) {
      output.writeMessage(4, getProperties());
    }
    if (exportLocation_ != null) {
      output.writeMessage(5, getExportLocation());
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetExportSettings(),
        ExportSettingsDefaultEntryHolder.defaultEntry,
        6);
    if (macroButtonLastIndex_ != 0) {
      output.writeInt32(7, macroButtonLastIndex_);
    }
    if (gmMacroButtonLastIndex_ != 0) {
      output.writeInt32(8, gmMacroButtonLastIndex_);
    }
    for (int i = 0; i < macroButtonProperties_.size(); i++) {
      output.writeMessage(9, macroButtonProperties_.get(i));
    }
    for (int i = 0; i < zones_.size(); i++) {
      output.writeMessage(10, zones_.get(i));
    }
    for (int i = 0; i < gmMacroButtonProperties_.size(); i++) {
      output.writeMessage(11, gmMacroButtonProperties_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    if (hasUsedFogToolbar_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getHasUsedFogToolbar());
    }
    if (properties_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getProperties());
    }
    if (exportLocation_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getExportLocation());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Boolean> entry
         : internalGetExportSettings().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Boolean>
      exportSettings__ = ExportSettingsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, exportSettings__);
    }
    if (macroButtonLastIndex_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, macroButtonLastIndex_);
    }
    if (gmMacroButtonLastIndex_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, gmMacroButtonLastIndex_);
    }
    for (int i = 0; i < macroButtonProperties_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, macroButtonProperties_.get(i));
    }
    for (int i = 0; i < zones_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, zones_.get(i));
    }
    for (int i = 0; i < gmMacroButtonProperties_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, gmMacroButtonProperties_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof net.rptools.maptool.server.proto.CampaignDto)) {
      return super.equals(obj);
    }
    net.rptools.maptool.server.proto.CampaignDto other = (net.rptools.maptool.server.proto.CampaignDto) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (hasHasUsedFogToolbar() != other.hasHasUsedFogToolbar()) return false;
    if (hasHasUsedFogToolbar()) {
      if (!getHasUsedFogToolbar()
          .equals(other.getHasUsedFogToolbar())) return false;
    }
    if (hasProperties() != other.hasProperties()) return false;
    if (hasProperties()) {
      if (!getProperties()
          .equals(other.getProperties())) return false;
    }
    if (hasExportLocation() != other.hasExportLocation()) return false;
    if (hasExportLocation()) {
      if (!getExportLocation()
          .equals(other.getExportLocation())) return false;
    }
    if (!internalGetExportSettings().equals(
        other.internalGetExportSettings())) return false;
    if (getMacroButtonLastIndex()
        != other.getMacroButtonLastIndex()) return false;
    if (getGmMacroButtonLastIndex()
        != other.getGmMacroButtonLastIndex()) return false;
    if (!getMacroButtonPropertiesList()
        .equals(other.getMacroButtonPropertiesList())) return false;
    if (!getZonesList()
        .equals(other.getZonesList())) return false;
    if (!getGmMacroButtonPropertiesList()
        .equals(other.getGmMacroButtonPropertiesList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasHasUsedFogToolbar()) {
      hash = (37 * hash) + HAS_USED_FOG_TOOLBAR_FIELD_NUMBER;
      hash = (53 * hash) + getHasUsedFogToolbar().hashCode();
    }
    if (hasProperties()) {
      hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + getProperties().hashCode();
    }
    if (hasExportLocation()) {
      hash = (37 * hash) + EXPORT_LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getExportLocation().hashCode();
    }
    if (!internalGetExportSettings().getMap().isEmpty()) {
      hash = (37 * hash) + EXPORT_SETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetExportSettings().hashCode();
    }
    hash = (37 * hash) + MACRO_BUTTON_LAST_INDEX_FIELD_NUMBER;
    hash = (53 * hash) + getMacroButtonLastIndex();
    hash = (37 * hash) + GM_MACRO_BUTTON_LAST_INDEX_FIELD_NUMBER;
    hash = (53 * hash) + getGmMacroButtonLastIndex();
    if (getMacroButtonPropertiesCount() > 0) {
      hash = (37 * hash) + MACRO_BUTTON_PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + getMacroButtonPropertiesList().hashCode();
    }
    if (getZonesCount() > 0) {
      hash = (37 * hash) + ZONES_FIELD_NUMBER;
      hash = (53 * hash) + getZonesList().hashCode();
    }
    if (getGmMacroButtonPropertiesCount() > 0) {
      hash = (37 * hash) + GM_MACRO_BUTTON_PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + getGmMacroButtonPropertiesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static net.rptools.maptool.server.proto.CampaignDto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.CampaignDto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.CampaignDto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.CampaignDto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.CampaignDto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.CampaignDto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.CampaignDto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.CampaignDto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.CampaignDto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.CampaignDto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.CampaignDto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.CampaignDto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(net.rptools.maptool.server.proto.CampaignDto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code maptool.CampaignDto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maptool.CampaignDto)
      net.rptools.maptool.server.proto.CampaignDtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignDto_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetExportSettings();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetMutableExportSettings();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignDto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.rptools.maptool.server.proto.CampaignDto.class, net.rptools.maptool.server.proto.CampaignDto.Builder.class);
    }

    // Construct using net.rptools.maptool.server.proto.CampaignDto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getMacroButtonPropertiesFieldBuilder();
        getZonesFieldBuilder();
        getGmMacroButtonPropertiesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      id_ = "";

      name_ = "";

      if (hasUsedFogToolbarBuilder_ == null) {
        hasUsedFogToolbar_ = null;
      } else {
        hasUsedFogToolbar_ = null;
        hasUsedFogToolbarBuilder_ = null;
      }
      if (propertiesBuilder_ == null) {
        properties_ = null;
      } else {
        properties_ = null;
        propertiesBuilder_ = null;
      }
      if (exportLocationBuilder_ == null) {
        exportLocation_ = null;
      } else {
        exportLocation_ = null;
        exportLocationBuilder_ = null;
      }
      internalGetMutableExportSettings().clear();
      macroButtonLastIndex_ = 0;

      gmMacroButtonLastIndex_ = 0;

      if (macroButtonPropertiesBuilder_ == null) {
        macroButtonProperties_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        macroButtonPropertiesBuilder_.clear();
      }
      if (zonesBuilder_ == null) {
        zones_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        zonesBuilder_.clear();
      }
      if (gmMacroButtonPropertiesBuilder_ == null) {
        gmMacroButtonProperties_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        gmMacroButtonPropertiesBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_CampaignDto_descriptor;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.CampaignDto getDefaultInstanceForType() {
      return net.rptools.maptool.server.proto.CampaignDto.getDefaultInstance();
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.CampaignDto build() {
      net.rptools.maptool.server.proto.CampaignDto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.CampaignDto buildPartial() {
      net.rptools.maptool.server.proto.CampaignDto result = new net.rptools.maptool.server.proto.CampaignDto(this);
      int from_bitField0_ = bitField0_;
      result.id_ = id_;
      result.name_ = name_;
      if (hasUsedFogToolbarBuilder_ == null) {
        result.hasUsedFogToolbar_ = hasUsedFogToolbar_;
      } else {
        result.hasUsedFogToolbar_ = hasUsedFogToolbarBuilder_.build();
      }
      if (propertiesBuilder_ == null) {
        result.properties_ = properties_;
      } else {
        result.properties_ = propertiesBuilder_.build();
      }
      if (exportLocationBuilder_ == null) {
        result.exportLocation_ = exportLocation_;
      } else {
        result.exportLocation_ = exportLocationBuilder_.build();
      }
      result.exportSettings_ = internalGetExportSettings();
      result.exportSettings_.makeImmutable();
      result.macroButtonLastIndex_ = macroButtonLastIndex_;
      result.gmMacroButtonLastIndex_ = gmMacroButtonLastIndex_;
      if (macroButtonPropertiesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          macroButtonProperties_ = java.util.Collections.unmodifiableList(macroButtonProperties_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.macroButtonProperties_ = macroButtonProperties_;
      } else {
        result.macroButtonProperties_ = macroButtonPropertiesBuilder_.build();
      }
      if (zonesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          zones_ = java.util.Collections.unmodifiableList(zones_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.zones_ = zones_;
      } else {
        result.zones_ = zonesBuilder_.build();
      }
      if (gmMacroButtonPropertiesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          gmMacroButtonProperties_ = java.util.Collections.unmodifiableList(gmMacroButtonProperties_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.gmMacroButtonProperties_ = gmMacroButtonProperties_;
      } else {
        result.gmMacroButtonProperties_ = gmMacroButtonPropertiesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof net.rptools.maptool.server.proto.CampaignDto) {
        return mergeFrom((net.rptools.maptool.server.proto.CampaignDto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(net.rptools.maptool.server.proto.CampaignDto other) {
      if (other == net.rptools.maptool.server.proto.CampaignDto.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.hasHasUsedFogToolbar()) {
        mergeHasUsedFogToolbar(other.getHasUsedFogToolbar());
      }
      if (other.hasProperties()) {
        mergeProperties(other.getProperties());
      }
      if (other.hasExportLocation()) {
        mergeExportLocation(other.getExportLocation());
      }
      internalGetMutableExportSettings().mergeFrom(
          other.internalGetExportSettings());
      if (other.getMacroButtonLastIndex() != 0) {
        setMacroButtonLastIndex(other.getMacroButtonLastIndex());
      }
      if (other.getGmMacroButtonLastIndex() != 0) {
        setGmMacroButtonLastIndex(other.getGmMacroButtonLastIndex());
      }
      if (macroButtonPropertiesBuilder_ == null) {
        if (!other.macroButtonProperties_.isEmpty()) {
          if (macroButtonProperties_.isEmpty()) {
            macroButtonProperties_ = other.macroButtonProperties_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMacroButtonPropertiesIsMutable();
            macroButtonProperties_.addAll(other.macroButtonProperties_);
          }
          onChanged();
        }
      } else {
        if (!other.macroButtonProperties_.isEmpty()) {
          if (macroButtonPropertiesBuilder_.isEmpty()) {
            macroButtonPropertiesBuilder_.dispose();
            macroButtonPropertiesBuilder_ = null;
            macroButtonProperties_ = other.macroButtonProperties_;
            bitField0_ = (bitField0_ & ~0x00000002);
            macroButtonPropertiesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMacroButtonPropertiesFieldBuilder() : null;
          } else {
            macroButtonPropertiesBuilder_.addAllMessages(other.macroButtonProperties_);
          }
        }
      }
      if (zonesBuilder_ == null) {
        if (!other.zones_.isEmpty()) {
          if (zones_.isEmpty()) {
            zones_ = other.zones_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureZonesIsMutable();
            zones_.addAll(other.zones_);
          }
          onChanged();
        }
      } else {
        if (!other.zones_.isEmpty()) {
          if (zonesBuilder_.isEmpty()) {
            zonesBuilder_.dispose();
            zonesBuilder_ = null;
            zones_ = other.zones_;
            bitField0_ = (bitField0_ & ~0x00000004);
            zonesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getZonesFieldBuilder() : null;
          } else {
            zonesBuilder_.addAllMessages(other.zones_);
          }
        }
      }
      if (gmMacroButtonPropertiesBuilder_ == null) {
        if (!other.gmMacroButtonProperties_.isEmpty()) {
          if (gmMacroButtonProperties_.isEmpty()) {
            gmMacroButtonProperties_ = other.gmMacroButtonProperties_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureGmMacroButtonPropertiesIsMutable();
            gmMacroButtonProperties_.addAll(other.gmMacroButtonProperties_);
          }
          onChanged();
        }
      } else {
        if (!other.gmMacroButtonProperties_.isEmpty()) {
          if (gmMacroButtonPropertiesBuilder_.isEmpty()) {
            gmMacroButtonPropertiesBuilder_.dispose();
            gmMacroButtonPropertiesBuilder_ = null;
            gmMacroButtonProperties_ = other.gmMacroButtonProperties_;
            bitField0_ = (bitField0_ & ~0x00000008);
            gmMacroButtonPropertiesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGmMacroButtonPropertiesFieldBuilder() : null;
          } else {
            gmMacroButtonPropertiesBuilder_.addAllMessages(other.gmMacroButtonProperties_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      net.rptools.maptool.server.proto.CampaignDto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (net.rptools.maptool.server.proto.CampaignDto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string id = 1;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <code>string id = 1;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>string name = 2;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.BoolValue hasUsedFogToolbar_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> hasUsedFogToolbarBuilder_;
    /**
     * <code>.google.protobuf.BoolValue has_used_fog_toolbar = 3;</code>
     * @return Whether the hasUsedFogToolbar field is set.
     */
    public boolean hasHasUsedFogToolbar() {
      return hasUsedFogToolbarBuilder_ != null || hasUsedFogToolbar_ != null;
    }
    /**
     * <code>.google.protobuf.BoolValue has_used_fog_toolbar = 3;</code>
     * @return The hasUsedFogToolbar.
     */
    public com.google.protobuf.BoolValue getHasUsedFogToolbar() {
      if (hasUsedFogToolbarBuilder_ == null) {
        return hasUsedFogToolbar_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : hasUsedFogToolbar_;
      } else {
        return hasUsedFogToolbarBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.protobuf.BoolValue has_used_fog_toolbar = 3;</code>
     */
    public Builder setHasUsedFogToolbar(com.google.protobuf.BoolValue value) {
      if (hasUsedFogToolbarBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        hasUsedFogToolbar_ = value;
        onChanged();
      } else {
        hasUsedFogToolbarBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.BoolValue has_used_fog_toolbar = 3;</code>
     */
    public Builder setHasUsedFogToolbar(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (hasUsedFogToolbarBuilder_ == null) {
        hasUsedFogToolbar_ = builderForValue.build();
        onChanged();
      } else {
        hasUsedFogToolbarBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.google.protobuf.BoolValue has_used_fog_toolbar = 3;</code>
     */
    public Builder mergeHasUsedFogToolbar(com.google.protobuf.BoolValue value) {
      if (hasUsedFogToolbarBuilder_ == null) {
        if (hasUsedFogToolbar_ != null) {
          hasUsedFogToolbar_ =
            com.google.protobuf.BoolValue.newBuilder(hasUsedFogToolbar_).mergeFrom(value).buildPartial();
        } else {
          hasUsedFogToolbar_ = value;
        }
        onChanged();
      } else {
        hasUsedFogToolbarBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.BoolValue has_used_fog_toolbar = 3;</code>
     */
    public Builder clearHasUsedFogToolbar() {
      if (hasUsedFogToolbarBuilder_ == null) {
        hasUsedFogToolbar_ = null;
        onChanged();
      } else {
        hasUsedFogToolbar_ = null;
        hasUsedFogToolbarBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.google.protobuf.BoolValue has_used_fog_toolbar = 3;</code>
     */
    public com.google.protobuf.BoolValue.Builder getHasUsedFogToolbarBuilder() {
      
      onChanged();
      return getHasUsedFogToolbarFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.protobuf.BoolValue has_used_fog_toolbar = 3;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getHasUsedFogToolbarOrBuilder() {
      if (hasUsedFogToolbarBuilder_ != null) {
        return hasUsedFogToolbarBuilder_.getMessageOrBuilder();
      } else {
        return hasUsedFogToolbar_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : hasUsedFogToolbar_;
      }
    }
    /**
     * <code>.google.protobuf.BoolValue has_used_fog_toolbar = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getHasUsedFogToolbarFieldBuilder() {
      if (hasUsedFogToolbarBuilder_ == null) {
        hasUsedFogToolbarBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getHasUsedFogToolbar(),
                getParentForChildren(),
                isClean());
        hasUsedFogToolbar_ = null;
      }
      return hasUsedFogToolbarBuilder_;
    }

    private net.rptools.maptool.server.proto.CampaignPropertiesDto properties_;
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.CampaignPropertiesDto, net.rptools.maptool.server.proto.CampaignPropertiesDto.Builder, net.rptools.maptool.server.proto.CampaignPropertiesDtoOrBuilder> propertiesBuilder_;
    /**
     * <code>.maptool.CampaignPropertiesDto properties = 4;</code>
     * @return Whether the properties field is set.
     */
    public boolean hasProperties() {
      return propertiesBuilder_ != null || properties_ != null;
    }
    /**
     * <code>.maptool.CampaignPropertiesDto properties = 4;</code>
     * @return The properties.
     */
    public net.rptools.maptool.server.proto.CampaignPropertiesDto getProperties() {
      if (propertiesBuilder_ == null) {
        return properties_ == null ? net.rptools.maptool.server.proto.CampaignPropertiesDto.getDefaultInstance() : properties_;
      } else {
        return propertiesBuilder_.getMessage();
      }
    }
    /**
     * <code>.maptool.CampaignPropertiesDto properties = 4;</code>
     */
    public Builder setProperties(net.rptools.maptool.server.proto.CampaignPropertiesDto value) {
      if (propertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        properties_ = value;
        onChanged();
      } else {
        propertiesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.maptool.CampaignPropertiesDto properties = 4;</code>
     */
    public Builder setProperties(
        net.rptools.maptool.server.proto.CampaignPropertiesDto.Builder builderForValue) {
      if (propertiesBuilder_ == null) {
        properties_ = builderForValue.build();
        onChanged();
      } else {
        propertiesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.maptool.CampaignPropertiesDto properties = 4;</code>
     */
    public Builder mergeProperties(net.rptools.maptool.server.proto.CampaignPropertiesDto value) {
      if (propertiesBuilder_ == null) {
        if (properties_ != null) {
          properties_ =
            net.rptools.maptool.server.proto.CampaignPropertiesDto.newBuilder(properties_).mergeFrom(value).buildPartial();
        } else {
          properties_ = value;
        }
        onChanged();
      } else {
        propertiesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.maptool.CampaignPropertiesDto properties = 4;</code>
     */
    public Builder clearProperties() {
      if (propertiesBuilder_ == null) {
        properties_ = null;
        onChanged();
      } else {
        properties_ = null;
        propertiesBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.maptool.CampaignPropertiesDto properties = 4;</code>
     */
    public net.rptools.maptool.server.proto.CampaignPropertiesDto.Builder getPropertiesBuilder() {
      
      onChanged();
      return getPropertiesFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.CampaignPropertiesDto properties = 4;</code>
     */
    public net.rptools.maptool.server.proto.CampaignPropertiesDtoOrBuilder getPropertiesOrBuilder() {
      if (propertiesBuilder_ != null) {
        return propertiesBuilder_.getMessageOrBuilder();
      } else {
        return properties_ == null ?
            net.rptools.maptool.server.proto.CampaignPropertiesDto.getDefaultInstance() : properties_;
      }
    }
    /**
     * <code>.maptool.CampaignPropertiesDto properties = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.CampaignPropertiesDto, net.rptools.maptool.server.proto.CampaignPropertiesDto.Builder, net.rptools.maptool.server.proto.CampaignPropertiesDtoOrBuilder> 
        getPropertiesFieldBuilder() {
      if (propertiesBuilder_ == null) {
        propertiesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.CampaignPropertiesDto, net.rptools.maptool.server.proto.CampaignPropertiesDto.Builder, net.rptools.maptool.server.proto.CampaignPropertiesDtoOrBuilder>(
                getProperties(),
                getParentForChildren(),
                isClean());
        properties_ = null;
      }
      return propertiesBuilder_;
    }

    private net.rptools.maptool.server.proto.LocationDto exportLocation_;
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.LocationDto, net.rptools.maptool.server.proto.LocationDto.Builder, net.rptools.maptool.server.proto.LocationDtoOrBuilder> exportLocationBuilder_;
    /**
     * <code>.maptool.LocationDto export_location = 5;</code>
     * @return Whether the exportLocation field is set.
     */
    public boolean hasExportLocation() {
      return exportLocationBuilder_ != null || exportLocation_ != null;
    }
    /**
     * <code>.maptool.LocationDto export_location = 5;</code>
     * @return The exportLocation.
     */
    public net.rptools.maptool.server.proto.LocationDto getExportLocation() {
      if (exportLocationBuilder_ == null) {
        return exportLocation_ == null ? net.rptools.maptool.server.proto.LocationDto.getDefaultInstance() : exportLocation_;
      } else {
        return exportLocationBuilder_.getMessage();
      }
    }
    /**
     * <code>.maptool.LocationDto export_location = 5;</code>
     */
    public Builder setExportLocation(net.rptools.maptool.server.proto.LocationDto value) {
      if (exportLocationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exportLocation_ = value;
        onChanged();
      } else {
        exportLocationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.maptool.LocationDto export_location = 5;</code>
     */
    public Builder setExportLocation(
        net.rptools.maptool.server.proto.LocationDto.Builder builderForValue) {
      if (exportLocationBuilder_ == null) {
        exportLocation_ = builderForValue.build();
        onChanged();
      } else {
        exportLocationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.maptool.LocationDto export_location = 5;</code>
     */
    public Builder mergeExportLocation(net.rptools.maptool.server.proto.LocationDto value) {
      if (exportLocationBuilder_ == null) {
        if (exportLocation_ != null) {
          exportLocation_ =
            net.rptools.maptool.server.proto.LocationDto.newBuilder(exportLocation_).mergeFrom(value).buildPartial();
        } else {
          exportLocation_ = value;
        }
        onChanged();
      } else {
        exportLocationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.maptool.LocationDto export_location = 5;</code>
     */
    public Builder clearExportLocation() {
      if (exportLocationBuilder_ == null) {
        exportLocation_ = null;
        onChanged();
      } else {
        exportLocation_ = null;
        exportLocationBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.maptool.LocationDto export_location = 5;</code>
     */
    public net.rptools.maptool.server.proto.LocationDto.Builder getExportLocationBuilder() {
      
      onChanged();
      return getExportLocationFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.LocationDto export_location = 5;</code>
     */
    public net.rptools.maptool.server.proto.LocationDtoOrBuilder getExportLocationOrBuilder() {
      if (exportLocationBuilder_ != null) {
        return exportLocationBuilder_.getMessageOrBuilder();
      } else {
        return exportLocation_ == null ?
            net.rptools.maptool.server.proto.LocationDto.getDefaultInstance() : exportLocation_;
      }
    }
    /**
     * <code>.maptool.LocationDto export_location = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.LocationDto, net.rptools.maptool.server.proto.LocationDto.Builder, net.rptools.maptool.server.proto.LocationDtoOrBuilder> 
        getExportLocationFieldBuilder() {
      if (exportLocationBuilder_ == null) {
        exportLocationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.LocationDto, net.rptools.maptool.server.proto.LocationDto.Builder, net.rptools.maptool.server.proto.LocationDtoOrBuilder>(
                getExportLocation(),
                getParentForChildren(),
                isClean());
        exportLocation_ = null;
      }
      return exportLocationBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Boolean> exportSettings_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
    internalGetExportSettings() {
      if (exportSettings_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ExportSettingsDefaultEntryHolder.defaultEntry);
      }
      return exportSettings_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
    internalGetMutableExportSettings() {
      onChanged();;
      if (exportSettings_ == null) {
        exportSettings_ = com.google.protobuf.MapField.newMapField(
            ExportSettingsDefaultEntryHolder.defaultEntry);
      }
      if (!exportSettings_.isMutable()) {
        exportSettings_ = exportSettings_.copy();
      }
      return exportSettings_;
    }

    public int getExportSettingsCount() {
      return internalGetExportSettings().getMap().size();
    }
    /**
     * <code>map&lt;string, bool&gt; export_settings = 6;</code>
     */

    @java.lang.Override
    public boolean containsExportSettings(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetExportSettings().getMap().containsKey(key);
    }
    /**
     * Use {@link #getExportSettingsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Boolean> getExportSettings() {
      return getExportSettingsMap();
    }
    /**
     * <code>map&lt;string, bool&gt; export_settings = 6;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Boolean> getExportSettingsMap() {
      return internalGetExportSettings().getMap();
    }
    /**
     * <code>map&lt;string, bool&gt; export_settings = 6;</code>
     */
    @java.lang.Override

    public boolean getExportSettingsOrDefault(
        java.lang.String key,
        boolean defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Boolean> map =
          internalGetExportSettings().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bool&gt; export_settings = 6;</code>
     */
    @java.lang.Override

    public boolean getExportSettingsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Boolean> map =
          internalGetExportSettings().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearExportSettings() {
      internalGetMutableExportSettings().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, bool&gt; export_settings = 6;</code>
     */

    public Builder removeExportSettings(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableExportSettings().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Boolean>
    getMutableExportSettings() {
      return internalGetMutableExportSettings().getMutableMap();
    }
    /**
     * <code>map&lt;string, bool&gt; export_settings = 6;</code>
     */
    public Builder putExportSettings(
        java.lang.String key,
        boolean value) {
      if (key == null) { throw new NullPointerException("map key"); }
      
      internalGetMutableExportSettings().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, bool&gt; export_settings = 6;</code>
     */

    public Builder putAllExportSettings(
        java.util.Map<java.lang.String, java.lang.Boolean> values) {
      internalGetMutableExportSettings().getMutableMap()
          .putAll(values);
      return this;
    }

    private int macroButtonLastIndex_ ;
    /**
     * <code>int32 macro_button_last_index = 7;</code>
     * @return The macroButtonLastIndex.
     */
    @java.lang.Override
    public int getMacroButtonLastIndex() {
      return macroButtonLastIndex_;
    }
    /**
     * <code>int32 macro_button_last_index = 7;</code>
     * @param value The macroButtonLastIndex to set.
     * @return This builder for chaining.
     */
    public Builder setMacroButtonLastIndex(int value) {
      
      macroButtonLastIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 macro_button_last_index = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearMacroButtonLastIndex() {
      
      macroButtonLastIndex_ = 0;
      onChanged();
      return this;
    }

    private int gmMacroButtonLastIndex_ ;
    /**
     * <code>int32 gm_macro_button_last_index = 8;</code>
     * @return The gmMacroButtonLastIndex.
     */
    @java.lang.Override
    public int getGmMacroButtonLastIndex() {
      return gmMacroButtonLastIndex_;
    }
    /**
     * <code>int32 gm_macro_button_last_index = 8;</code>
     * @param value The gmMacroButtonLastIndex to set.
     * @return This builder for chaining.
     */
    public Builder setGmMacroButtonLastIndex(int value) {
      
      gmMacroButtonLastIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 gm_macro_button_last_index = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearGmMacroButtonLastIndex() {
      
      gmMacroButtonLastIndex_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<net.rptools.maptool.server.proto.MacroButtonPropertiesDto> macroButtonProperties_ =
      java.util.Collections.emptyList();
    private void ensureMacroButtonPropertiesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        macroButtonProperties_ = new java.util.ArrayList<net.rptools.maptool.server.proto.MacroButtonPropertiesDto>(macroButtonProperties_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.MacroButtonPropertiesDto, net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder, net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder> macroButtonPropertiesBuilder_;

    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.MacroButtonPropertiesDto> getMacroButtonPropertiesList() {
      if (macroButtonPropertiesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(macroButtonProperties_);
      } else {
        return macroButtonPropertiesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public int getMacroButtonPropertiesCount() {
      if (macroButtonPropertiesBuilder_ == null) {
        return macroButtonProperties_.size();
      } else {
        return macroButtonPropertiesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public net.rptools.maptool.server.proto.MacroButtonPropertiesDto getMacroButtonProperties(int index) {
      if (macroButtonPropertiesBuilder_ == null) {
        return macroButtonProperties_.get(index);
      } else {
        return macroButtonPropertiesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public Builder setMacroButtonProperties(
        int index, net.rptools.maptool.server.proto.MacroButtonPropertiesDto value) {
      if (macroButtonPropertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMacroButtonPropertiesIsMutable();
        macroButtonProperties_.set(index, value);
        onChanged();
      } else {
        macroButtonPropertiesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public Builder setMacroButtonProperties(
        int index, net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder builderForValue) {
      if (macroButtonPropertiesBuilder_ == null) {
        ensureMacroButtonPropertiesIsMutable();
        macroButtonProperties_.set(index, builderForValue.build());
        onChanged();
      } else {
        macroButtonPropertiesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public Builder addMacroButtonProperties(net.rptools.maptool.server.proto.MacroButtonPropertiesDto value) {
      if (macroButtonPropertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMacroButtonPropertiesIsMutable();
        macroButtonProperties_.add(value);
        onChanged();
      } else {
        macroButtonPropertiesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public Builder addMacroButtonProperties(
        int index, net.rptools.maptool.server.proto.MacroButtonPropertiesDto value) {
      if (macroButtonPropertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMacroButtonPropertiesIsMutable();
        macroButtonProperties_.add(index, value);
        onChanged();
      } else {
        macroButtonPropertiesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public Builder addMacroButtonProperties(
        net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder builderForValue) {
      if (macroButtonPropertiesBuilder_ == null) {
        ensureMacroButtonPropertiesIsMutable();
        macroButtonProperties_.add(builderForValue.build());
        onChanged();
      } else {
        macroButtonPropertiesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public Builder addMacroButtonProperties(
        int index, net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder builderForValue) {
      if (macroButtonPropertiesBuilder_ == null) {
        ensureMacroButtonPropertiesIsMutable();
        macroButtonProperties_.add(index, builderForValue.build());
        onChanged();
      } else {
        macroButtonPropertiesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public Builder addAllMacroButtonProperties(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.MacroButtonPropertiesDto> values) {
      if (macroButtonPropertiesBuilder_ == null) {
        ensureMacroButtonPropertiesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, macroButtonProperties_);
        onChanged();
      } else {
        macroButtonPropertiesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public Builder clearMacroButtonProperties() {
      if (macroButtonPropertiesBuilder_ == null) {
        macroButtonProperties_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        macroButtonPropertiesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public Builder removeMacroButtonProperties(int index) {
      if (macroButtonPropertiesBuilder_ == null) {
        ensureMacroButtonPropertiesIsMutable();
        macroButtonProperties_.remove(index);
        onChanged();
      } else {
        macroButtonPropertiesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder getMacroButtonPropertiesBuilder(
        int index) {
      return getMacroButtonPropertiesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder getMacroButtonPropertiesOrBuilder(
        int index) {
      if (macroButtonPropertiesBuilder_ == null) {
        return macroButtonProperties_.get(index);  } else {
        return macroButtonPropertiesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder> 
         getMacroButtonPropertiesOrBuilderList() {
      if (macroButtonPropertiesBuilder_ != null) {
        return macroButtonPropertiesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(macroButtonProperties_);
      }
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder addMacroButtonPropertiesBuilder() {
      return getMacroButtonPropertiesFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.MacroButtonPropertiesDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder addMacroButtonPropertiesBuilder(
        int index) {
      return getMacroButtonPropertiesFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.MacroButtonPropertiesDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto macro_button_properties = 9;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder> 
         getMacroButtonPropertiesBuilderList() {
      return getMacroButtonPropertiesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.MacroButtonPropertiesDto, net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder, net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder> 
        getMacroButtonPropertiesFieldBuilder() {
      if (macroButtonPropertiesBuilder_ == null) {
        macroButtonPropertiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.MacroButtonPropertiesDto, net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder, net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder>(
                macroButtonProperties_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        macroButtonProperties_ = null;
      }
      return macroButtonPropertiesBuilder_;
    }

    private java.util.List<net.rptools.maptool.server.proto.ZoneDto> zones_ =
      java.util.Collections.emptyList();
    private void ensureZonesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        zones_ = new java.util.ArrayList<net.rptools.maptool.server.proto.ZoneDto>(zones_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.ZoneDto, net.rptools.maptool.server.proto.ZoneDto.Builder, net.rptools.maptool.server.proto.ZoneDtoOrBuilder> zonesBuilder_;

    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.ZoneDto> getZonesList() {
      if (zonesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(zones_);
      } else {
        return zonesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public int getZonesCount() {
      if (zonesBuilder_ == null) {
        return zones_.size();
      } else {
        return zonesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public net.rptools.maptool.server.proto.ZoneDto getZones(int index) {
      if (zonesBuilder_ == null) {
        return zones_.get(index);
      } else {
        return zonesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public Builder setZones(
        int index, net.rptools.maptool.server.proto.ZoneDto value) {
      if (zonesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureZonesIsMutable();
        zones_.set(index, value);
        onChanged();
      } else {
        zonesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public Builder setZones(
        int index, net.rptools.maptool.server.proto.ZoneDto.Builder builderForValue) {
      if (zonesBuilder_ == null) {
        ensureZonesIsMutable();
        zones_.set(index, builderForValue.build());
        onChanged();
      } else {
        zonesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public Builder addZones(net.rptools.maptool.server.proto.ZoneDto value) {
      if (zonesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureZonesIsMutable();
        zones_.add(value);
        onChanged();
      } else {
        zonesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public Builder addZones(
        int index, net.rptools.maptool.server.proto.ZoneDto value) {
      if (zonesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureZonesIsMutable();
        zones_.add(index, value);
        onChanged();
      } else {
        zonesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public Builder addZones(
        net.rptools.maptool.server.proto.ZoneDto.Builder builderForValue) {
      if (zonesBuilder_ == null) {
        ensureZonesIsMutable();
        zones_.add(builderForValue.build());
        onChanged();
      } else {
        zonesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public Builder addZones(
        int index, net.rptools.maptool.server.proto.ZoneDto.Builder builderForValue) {
      if (zonesBuilder_ == null) {
        ensureZonesIsMutable();
        zones_.add(index, builderForValue.build());
        onChanged();
      } else {
        zonesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public Builder addAllZones(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.ZoneDto> values) {
      if (zonesBuilder_ == null) {
        ensureZonesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, zones_);
        onChanged();
      } else {
        zonesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public Builder clearZones() {
      if (zonesBuilder_ == null) {
        zones_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        zonesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public Builder removeZones(int index) {
      if (zonesBuilder_ == null) {
        ensureZonesIsMutable();
        zones_.remove(index);
        onChanged();
      } else {
        zonesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public net.rptools.maptool.server.proto.ZoneDto.Builder getZonesBuilder(
        int index) {
      return getZonesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public net.rptools.maptool.server.proto.ZoneDtoOrBuilder getZonesOrBuilder(
        int index) {
      if (zonesBuilder_ == null) {
        return zones_.get(index);  } else {
        return zonesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.ZoneDtoOrBuilder> 
         getZonesOrBuilderList() {
      if (zonesBuilder_ != null) {
        return zonesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(zones_);
      }
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public net.rptools.maptool.server.proto.ZoneDto.Builder addZonesBuilder() {
      return getZonesFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.ZoneDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public net.rptools.maptool.server.proto.ZoneDto.Builder addZonesBuilder(
        int index) {
      return getZonesFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.ZoneDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.ZoneDto zones = 10;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.ZoneDto.Builder> 
         getZonesBuilderList() {
      return getZonesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.ZoneDto, net.rptools.maptool.server.proto.ZoneDto.Builder, net.rptools.maptool.server.proto.ZoneDtoOrBuilder> 
        getZonesFieldBuilder() {
      if (zonesBuilder_ == null) {
        zonesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.ZoneDto, net.rptools.maptool.server.proto.ZoneDto.Builder, net.rptools.maptool.server.proto.ZoneDtoOrBuilder>(
                zones_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        zones_ = null;
      }
      return zonesBuilder_;
    }

    private java.util.List<net.rptools.maptool.server.proto.MacroButtonPropertiesDto> gmMacroButtonProperties_ =
      java.util.Collections.emptyList();
    private void ensureGmMacroButtonPropertiesIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        gmMacroButtonProperties_ = new java.util.ArrayList<net.rptools.maptool.server.proto.MacroButtonPropertiesDto>(gmMacroButtonProperties_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.MacroButtonPropertiesDto, net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder, net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder> gmMacroButtonPropertiesBuilder_;

    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.MacroButtonPropertiesDto> getGmMacroButtonPropertiesList() {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(gmMacroButtonProperties_);
      } else {
        return gmMacroButtonPropertiesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public int getGmMacroButtonPropertiesCount() {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        return gmMacroButtonProperties_.size();
      } else {
        return gmMacroButtonPropertiesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public net.rptools.maptool.server.proto.MacroButtonPropertiesDto getGmMacroButtonProperties(int index) {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        return gmMacroButtonProperties_.get(index);
      } else {
        return gmMacroButtonPropertiesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public Builder setGmMacroButtonProperties(
        int index, net.rptools.maptool.server.proto.MacroButtonPropertiesDto value) {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGmMacroButtonPropertiesIsMutable();
        gmMacroButtonProperties_.set(index, value);
        onChanged();
      } else {
        gmMacroButtonPropertiesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public Builder setGmMacroButtonProperties(
        int index, net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder builderForValue) {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        ensureGmMacroButtonPropertiesIsMutable();
        gmMacroButtonProperties_.set(index, builderForValue.build());
        onChanged();
      } else {
        gmMacroButtonPropertiesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public Builder addGmMacroButtonProperties(net.rptools.maptool.server.proto.MacroButtonPropertiesDto value) {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGmMacroButtonPropertiesIsMutable();
        gmMacroButtonProperties_.add(value);
        onChanged();
      } else {
        gmMacroButtonPropertiesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public Builder addGmMacroButtonProperties(
        int index, net.rptools.maptool.server.proto.MacroButtonPropertiesDto value) {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGmMacroButtonPropertiesIsMutable();
        gmMacroButtonProperties_.add(index, value);
        onChanged();
      } else {
        gmMacroButtonPropertiesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public Builder addGmMacroButtonProperties(
        net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder builderForValue) {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        ensureGmMacroButtonPropertiesIsMutable();
        gmMacroButtonProperties_.add(builderForValue.build());
        onChanged();
      } else {
        gmMacroButtonPropertiesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public Builder addGmMacroButtonProperties(
        int index, net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder builderForValue) {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        ensureGmMacroButtonPropertiesIsMutable();
        gmMacroButtonProperties_.add(index, builderForValue.build());
        onChanged();
      } else {
        gmMacroButtonPropertiesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public Builder addAllGmMacroButtonProperties(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.MacroButtonPropertiesDto> values) {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        ensureGmMacroButtonPropertiesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, gmMacroButtonProperties_);
        onChanged();
      } else {
        gmMacroButtonPropertiesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public Builder clearGmMacroButtonProperties() {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        gmMacroButtonProperties_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        gmMacroButtonPropertiesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public Builder removeGmMacroButtonProperties(int index) {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        ensureGmMacroButtonPropertiesIsMutable();
        gmMacroButtonProperties_.remove(index);
        onChanged();
      } else {
        gmMacroButtonPropertiesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder getGmMacroButtonPropertiesBuilder(
        int index) {
      return getGmMacroButtonPropertiesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder getGmMacroButtonPropertiesOrBuilder(
        int index) {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        return gmMacroButtonProperties_.get(index);  } else {
        return gmMacroButtonPropertiesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder> 
         getGmMacroButtonPropertiesOrBuilderList() {
      if (gmMacroButtonPropertiesBuilder_ != null) {
        return gmMacroButtonPropertiesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(gmMacroButtonProperties_);
      }
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder addGmMacroButtonPropertiesBuilder() {
      return getGmMacroButtonPropertiesFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.MacroButtonPropertiesDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder addGmMacroButtonPropertiesBuilder(
        int index) {
      return getGmMacroButtonPropertiesFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.MacroButtonPropertiesDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.MacroButtonPropertiesDto gm_macro_button_properties = 11;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder> 
         getGmMacroButtonPropertiesBuilderList() {
      return getGmMacroButtonPropertiesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.MacroButtonPropertiesDto, net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder, net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder> 
        getGmMacroButtonPropertiesFieldBuilder() {
      if (gmMacroButtonPropertiesBuilder_ == null) {
        gmMacroButtonPropertiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.MacroButtonPropertiesDto, net.rptools.maptool.server.proto.MacroButtonPropertiesDto.Builder, net.rptools.maptool.server.proto.MacroButtonPropertiesDtoOrBuilder>(
                gmMacroButtonProperties_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        gmMacroButtonProperties_ = null;
      }
      return gmMacroButtonPropertiesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maptool.CampaignDto)
  }

  // @@protoc_insertion_point(class_scope:maptool.CampaignDto)
  private static final net.rptools.maptool.server.proto.CampaignDto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new net.rptools.maptool.server.proto.CampaignDto();
  }

  public static net.rptools.maptool.server.proto.CampaignDto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CampaignDto>
      PARSER = new com.google.protobuf.AbstractParser<CampaignDto>() {
    @java.lang.Override
    public CampaignDto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CampaignDto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CampaignDto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CampaignDto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public net.rptools.maptool.server.proto.CampaignDto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

