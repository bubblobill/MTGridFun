// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: handshake.proto

package net.rptools.maptool.server.proto;

/**
 * Protobuf type {@code maptool.HandshakeMsg}
 */
public final class HandshakeMsg extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maptool.HandshakeMsg)
    HandshakeMsgOrBuilder {
private static final long serialVersionUID = 0L;
  // Use HandshakeMsg.newBuilder() to construct.
  private HandshakeMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HandshakeMsg() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new HandshakeMsg();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private HandshakeMsg(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            net.rptools.maptool.server.proto.ClientInitMsg.Builder subBuilder = null;
            if (messageTypeCase_ == 1) {
              subBuilder = ((net.rptools.maptool.server.proto.ClientInitMsg) messageType_).toBuilder();
            }
            messageType_ =
                input.readMessage(net.rptools.maptool.server.proto.ClientInitMsg.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.ClientInitMsg) messageType_);
              messageType_ = subBuilder.buildPartial();
            }
            messageTypeCase_ = 1;
            break;
          }
          case 18: {
            net.rptools.maptool.server.proto.UseAuthTypeMsg.Builder subBuilder = null;
            if (messageTypeCase_ == 2) {
              subBuilder = ((net.rptools.maptool.server.proto.UseAuthTypeMsg) messageType_).toBuilder();
            }
            messageType_ =
                input.readMessage(net.rptools.maptool.server.proto.UseAuthTypeMsg.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.UseAuthTypeMsg) messageType_);
              messageType_ = subBuilder.buildPartial();
            }
            messageTypeCase_ = 2;
            break;
          }
          case 26: {
            net.rptools.maptool.server.proto.ClientAuthMsg.Builder subBuilder = null;
            if (messageTypeCase_ == 3) {
              subBuilder = ((net.rptools.maptool.server.proto.ClientAuthMsg) messageType_).toBuilder();
            }
            messageType_ =
                input.readMessage(net.rptools.maptool.server.proto.ClientAuthMsg.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.ClientAuthMsg) messageType_);
              messageType_ = subBuilder.buildPartial();
            }
            messageTypeCase_ = 3;
            break;
          }
          case 32: {
            int rawValue = input.readEnum();
            messageTypeCase_ = 4;
            messageType_ = rawValue;
            break;
          }
          case 42: {
            net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.Builder subBuilder = null;
            if (messageTypeCase_ == 5) {
              subBuilder = ((net.rptools.maptool.server.proto.ConnectionSuccessfulMsg) messageType_).toBuilder();
            }
            messageType_ =
                input.readMessage(net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.ConnectionSuccessfulMsg) messageType_);
              messageType_ = subBuilder.buildPartial();
            }
            messageTypeCase_ = 5;
            break;
          }
          case 50: {
            net.rptools.maptool.server.proto.PlayerBlockedMsg.Builder subBuilder = null;
            if (messageTypeCase_ == 6) {
              subBuilder = ((net.rptools.maptool.server.proto.PlayerBlockedMsg) messageType_).toBuilder();
            }
            messageType_ =
                input.readMessage(net.rptools.maptool.server.proto.PlayerBlockedMsg.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.PlayerBlockedMsg) messageType_);
              messageType_ = subBuilder.buildPartial();
            }
            messageTypeCase_ = 6;
            break;
          }
          case 58: {
            net.rptools.maptool.server.proto.RequestPublicKeyMsg.Builder subBuilder = null;
            if (messageTypeCase_ == 7) {
              subBuilder = ((net.rptools.maptool.server.proto.RequestPublicKeyMsg) messageType_).toBuilder();
            }
            messageType_ =
                input.readMessage(net.rptools.maptool.server.proto.RequestPublicKeyMsg.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.RequestPublicKeyMsg) messageType_);
              messageType_ = subBuilder.buildPartial();
            }
            messageTypeCase_ = 7;
            break;
          }
          case 66: {
            net.rptools.maptool.server.proto.PublicKeyUploadMsg.Builder subBuilder = null;
            if (messageTypeCase_ == 8) {
              subBuilder = ((net.rptools.maptool.server.proto.PublicKeyUploadMsg) messageType_).toBuilder();
            }
            messageType_ =
                input.readMessage(net.rptools.maptool.server.proto.PublicKeyUploadMsg.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.PublicKeyUploadMsg) messageType_);
              messageType_ = subBuilder.buildPartial();
            }
            messageTypeCase_ = 8;
            break;
          }
          case 74: {
            net.rptools.maptool.server.proto.PublicKeyAddedMsg.Builder subBuilder = null;
            if (messageTypeCase_ == 9) {
              subBuilder = ((net.rptools.maptool.server.proto.PublicKeyAddedMsg) messageType_).toBuilder();
            }
            messageType_ =
                input.readMessage(net.rptools.maptool.server.proto.PublicKeyAddedMsg.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.PublicKeyAddedMsg) messageType_);
              messageType_ = subBuilder.buildPartial();
            }
            messageTypeCase_ = 9;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return net.rptools.maptool.server.proto.HandshakeProtos.internal_static_maptool_HandshakeMsg_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return net.rptools.maptool.server.proto.HandshakeProtos.internal_static_maptool_HandshakeMsg_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            net.rptools.maptool.server.proto.HandshakeMsg.class, net.rptools.maptool.server.proto.HandshakeMsg.Builder.class);
  }

  private int messageTypeCase_ = 0;
  private java.lang.Object messageType_;
  public enum MessageTypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    CLIENT_INIT_MSG(1),
    CLIENT_AUTH_MESSAGE(3),
    USE_AUTH_TYPE_MSG(2),
    HANDSHAKE_RESPONSE_CODE_MSG(4),
    CONNECTION_SUCCESSFUL_MSG(5),
    PLAYER_BLOCKED_MSG(6),
    REQUEST_PUBLIC_KEY_MSG(7),
    PUBLIC_KEY_UPLOAD_MSG(8),
    PUBLIC_KEY_ADDED_MSG(9),
    MESSAGETYPE_NOT_SET(0);
    private final int value;
    private MessageTypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static MessageTypeCase forNumber(int value) {
      switch (value) {
        case 1: return CLIENT_INIT_MSG;
        case 3: return CLIENT_AUTH_MESSAGE;
        case 2: return USE_AUTH_TYPE_MSG;
        case 4: return HANDSHAKE_RESPONSE_CODE_MSG;
        case 5: return CONNECTION_SUCCESSFUL_MSG;
        case 6: return PLAYER_BLOCKED_MSG;
        case 7: return REQUEST_PUBLIC_KEY_MSG;
        case 8: return PUBLIC_KEY_UPLOAD_MSG;
        case 9: return PUBLIC_KEY_ADDED_MSG;
        case 0: return MESSAGETYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MessageTypeCase
  getMessageTypeCase() {
    return MessageTypeCase.forNumber(
        messageTypeCase_);
  }

  public static final int CLIENT_INIT_MSG_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Client Initiated
   * </pre>
   *
   * <code>.maptool.ClientInitMsg client_init_msg = 1;</code>
   * @return Whether the clientInitMsg field is set.
   */
  @java.lang.Override
  public boolean hasClientInitMsg() {
    return messageTypeCase_ == 1;
  }
  /**
   * <pre>
   * Client Initiated
   * </pre>
   *
   * <code>.maptool.ClientInitMsg client_init_msg = 1;</code>
   * @return The clientInitMsg.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.ClientInitMsg getClientInitMsg() {
    if (messageTypeCase_ == 1) {
       return (net.rptools.maptool.server.proto.ClientInitMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.ClientInitMsg.getDefaultInstance();
  }
  /**
   * <pre>
   * Client Initiated
   * </pre>
   *
   * <code>.maptool.ClientInitMsg client_init_msg = 1;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.ClientInitMsgOrBuilder getClientInitMsgOrBuilder() {
    if (messageTypeCase_ == 1) {
       return (net.rptools.maptool.server.proto.ClientInitMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.ClientInitMsg.getDefaultInstance();
  }

  public static final int CLIENT_AUTH_MESSAGE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Client Initiated
   * </pre>
   *
   * <code>.maptool.ClientAuthMsg client_auth_message = 3;</code>
   * @return Whether the clientAuthMessage field is set.
   */
  @java.lang.Override
  public boolean hasClientAuthMessage() {
    return messageTypeCase_ == 3;
  }
  /**
   * <pre>
   * Client Initiated
   * </pre>
   *
   * <code>.maptool.ClientAuthMsg client_auth_message = 3;</code>
   * @return The clientAuthMessage.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.ClientAuthMsg getClientAuthMessage() {
    if (messageTypeCase_ == 3) {
       return (net.rptools.maptool.server.proto.ClientAuthMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.ClientAuthMsg.getDefaultInstance();
  }
  /**
   * <pre>
   * Client Initiated
   * </pre>
   *
   * <code>.maptool.ClientAuthMsg client_auth_message = 3;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.ClientAuthMsgOrBuilder getClientAuthMessageOrBuilder() {
    if (messageTypeCase_ == 3) {
       return (net.rptools.maptool.server.proto.ClientAuthMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.ClientAuthMsg.getDefaultInstance();
  }

  public static final int USE_AUTH_TYPE_MSG_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.UseAuthTypeMsg use_auth_type_msg = 2;</code>
   * @return Whether the useAuthTypeMsg field is set.
   */
  @java.lang.Override
  public boolean hasUseAuthTypeMsg() {
    return messageTypeCase_ == 2;
  }
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.UseAuthTypeMsg use_auth_type_msg = 2;</code>
   * @return The useAuthTypeMsg.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.UseAuthTypeMsg getUseAuthTypeMsg() {
    if (messageTypeCase_ == 2) {
       return (net.rptools.maptool.server.proto.UseAuthTypeMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.UseAuthTypeMsg.getDefaultInstance();
  }
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.UseAuthTypeMsg use_auth_type_msg = 2;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.UseAuthTypeMsgOrBuilder getUseAuthTypeMsgOrBuilder() {
    if (messageTypeCase_ == 2) {
       return (net.rptools.maptool.server.proto.UseAuthTypeMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.UseAuthTypeMsg.getDefaultInstance();
  }

  public static final int HANDSHAKE_RESPONSE_CODE_MSG_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Either
   * </pre>
   *
   * <code>.maptool.HandshakeResponseCodeMsg handshake_response_code_msg = 4;</code>
   * @return Whether the handshakeResponseCodeMsg field is set.
   */
  public boolean hasHandshakeResponseCodeMsg() {
    return messageTypeCase_ == 4;
  }
  /**
   * <pre>
   * Either
   * </pre>
   *
   * <code>.maptool.HandshakeResponseCodeMsg handshake_response_code_msg = 4;</code>
   * @return The enum numeric value on the wire for handshakeResponseCodeMsg.
   */
  public int getHandshakeResponseCodeMsgValue() {
    if (messageTypeCase_ == 4) {
      return (java.lang.Integer) messageType_;
    }
    return 0;
  }
  /**
   * <pre>
   * Either
   * </pre>
   *
   * <code>.maptool.HandshakeResponseCodeMsg handshake_response_code_msg = 4;</code>
   * @return The handshakeResponseCodeMsg.
   */
  public net.rptools.maptool.server.proto.HandshakeResponseCodeMsg getHandshakeResponseCodeMsg() {
    if (messageTypeCase_ == 4) {
      @SuppressWarnings("deprecation")
      net.rptools.maptool.server.proto.HandshakeResponseCodeMsg result = net.rptools.maptool.server.proto.HandshakeResponseCodeMsg.valueOf(
          (java.lang.Integer) messageType_);
      return result == null ? net.rptools.maptool.server.proto.HandshakeResponseCodeMsg.UNRECOGNIZED : result;
    }
    return net.rptools.maptool.server.proto.HandshakeResponseCodeMsg.UNKNOWN;
  }

  public static final int CONNECTION_SUCCESSFUL_MSG_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.ConnectionSuccessfulMsg connection_successful_msg = 5;</code>
   * @return Whether the connectionSuccessfulMsg field is set.
   */
  @java.lang.Override
  public boolean hasConnectionSuccessfulMsg() {
    return messageTypeCase_ == 5;
  }
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.ConnectionSuccessfulMsg connection_successful_msg = 5;</code>
   * @return The connectionSuccessfulMsg.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.ConnectionSuccessfulMsg getConnectionSuccessfulMsg() {
    if (messageTypeCase_ == 5) {
       return (net.rptools.maptool.server.proto.ConnectionSuccessfulMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.getDefaultInstance();
  }
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.ConnectionSuccessfulMsg connection_successful_msg = 5;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.ConnectionSuccessfulMsgOrBuilder getConnectionSuccessfulMsgOrBuilder() {
    if (messageTypeCase_ == 5) {
       return (net.rptools.maptool.server.proto.ConnectionSuccessfulMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.getDefaultInstance();
  }

  public static final int PLAYER_BLOCKED_MSG_FIELD_NUMBER = 6;
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.PlayerBlockedMsg player_blocked_msg = 6;</code>
   * @return Whether the playerBlockedMsg field is set.
   */
  @java.lang.Override
  public boolean hasPlayerBlockedMsg() {
    return messageTypeCase_ == 6;
  }
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.PlayerBlockedMsg player_blocked_msg = 6;</code>
   * @return The playerBlockedMsg.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.PlayerBlockedMsg getPlayerBlockedMsg() {
    if (messageTypeCase_ == 6) {
       return (net.rptools.maptool.server.proto.PlayerBlockedMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.PlayerBlockedMsg.getDefaultInstance();
  }
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.PlayerBlockedMsg player_blocked_msg = 6;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.PlayerBlockedMsgOrBuilder getPlayerBlockedMsgOrBuilder() {
    if (messageTypeCase_ == 6) {
       return (net.rptools.maptool.server.proto.PlayerBlockedMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.PlayerBlockedMsg.getDefaultInstance();
  }

  public static final int REQUEST_PUBLIC_KEY_MSG_FIELD_NUMBER = 7;
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.RequestPublicKeyMsg request_public_key_msg = 7;</code>
   * @return Whether the requestPublicKeyMsg field is set.
   */
  @java.lang.Override
  public boolean hasRequestPublicKeyMsg() {
    return messageTypeCase_ == 7;
  }
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.RequestPublicKeyMsg request_public_key_msg = 7;</code>
   * @return The requestPublicKeyMsg.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.RequestPublicKeyMsg getRequestPublicKeyMsg() {
    if (messageTypeCase_ == 7) {
       return (net.rptools.maptool.server.proto.RequestPublicKeyMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.RequestPublicKeyMsg.getDefaultInstance();
  }
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.RequestPublicKeyMsg request_public_key_msg = 7;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.RequestPublicKeyMsgOrBuilder getRequestPublicKeyMsgOrBuilder() {
    if (messageTypeCase_ == 7) {
       return (net.rptools.maptool.server.proto.RequestPublicKeyMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.RequestPublicKeyMsg.getDefaultInstance();
  }

  public static final int PUBLIC_KEY_UPLOAD_MSG_FIELD_NUMBER = 8;
  /**
   * <pre>
   * Client initiated
   * </pre>
   *
   * <code>.maptool.PublicKeyUploadMsg public_key_upload_msg = 8;</code>
   * @return Whether the publicKeyUploadMsg field is set.
   */
  @java.lang.Override
  public boolean hasPublicKeyUploadMsg() {
    return messageTypeCase_ == 8;
  }
  /**
   * <pre>
   * Client initiated
   * </pre>
   *
   * <code>.maptool.PublicKeyUploadMsg public_key_upload_msg = 8;</code>
   * @return The publicKeyUploadMsg.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.PublicKeyUploadMsg getPublicKeyUploadMsg() {
    if (messageTypeCase_ == 8) {
       return (net.rptools.maptool.server.proto.PublicKeyUploadMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.PublicKeyUploadMsg.getDefaultInstance();
  }
  /**
   * <pre>
   * Client initiated
   * </pre>
   *
   * <code>.maptool.PublicKeyUploadMsg public_key_upload_msg = 8;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.PublicKeyUploadMsgOrBuilder getPublicKeyUploadMsgOrBuilder() {
    if (messageTypeCase_ == 8) {
       return (net.rptools.maptool.server.proto.PublicKeyUploadMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.PublicKeyUploadMsg.getDefaultInstance();
  }

  public static final int PUBLIC_KEY_ADDED_MSG_FIELD_NUMBER = 9;
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.PublicKeyAddedMsg public_key_added_msg = 9;</code>
   * @return Whether the publicKeyAddedMsg field is set.
   */
  @java.lang.Override
  public boolean hasPublicKeyAddedMsg() {
    return messageTypeCase_ == 9;
  }
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.PublicKeyAddedMsg public_key_added_msg = 9;</code>
   * @return The publicKeyAddedMsg.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.PublicKeyAddedMsg getPublicKeyAddedMsg() {
    if (messageTypeCase_ == 9) {
       return (net.rptools.maptool.server.proto.PublicKeyAddedMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.PublicKeyAddedMsg.getDefaultInstance();
  }
  /**
   * <pre>
   * Server initiated
   * </pre>
   *
   * <code>.maptool.PublicKeyAddedMsg public_key_added_msg = 9;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.PublicKeyAddedMsgOrBuilder getPublicKeyAddedMsgOrBuilder() {
    if (messageTypeCase_ == 9) {
       return (net.rptools.maptool.server.proto.PublicKeyAddedMsg) messageType_;
    }
    return net.rptools.maptool.server.proto.PublicKeyAddedMsg.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (messageTypeCase_ == 1) {
      output.writeMessage(1, (net.rptools.maptool.server.proto.ClientInitMsg) messageType_);
    }
    if (messageTypeCase_ == 2) {
      output.writeMessage(2, (net.rptools.maptool.server.proto.UseAuthTypeMsg) messageType_);
    }
    if (messageTypeCase_ == 3) {
      output.writeMessage(3, (net.rptools.maptool.server.proto.ClientAuthMsg) messageType_);
    }
    if (messageTypeCase_ == 4) {
      output.writeEnum(4, ((java.lang.Integer) messageType_));
    }
    if (messageTypeCase_ == 5) {
      output.writeMessage(5, (net.rptools.maptool.server.proto.ConnectionSuccessfulMsg) messageType_);
    }
    if (messageTypeCase_ == 6) {
      output.writeMessage(6, (net.rptools.maptool.server.proto.PlayerBlockedMsg) messageType_);
    }
    if (messageTypeCase_ == 7) {
      output.writeMessage(7, (net.rptools.maptool.server.proto.RequestPublicKeyMsg) messageType_);
    }
    if (messageTypeCase_ == 8) {
      output.writeMessage(8, (net.rptools.maptool.server.proto.PublicKeyUploadMsg) messageType_);
    }
    if (messageTypeCase_ == 9) {
      output.writeMessage(9, (net.rptools.maptool.server.proto.PublicKeyAddedMsg) messageType_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (messageTypeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (net.rptools.maptool.server.proto.ClientInitMsg) messageType_);
    }
    if (messageTypeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (net.rptools.maptool.server.proto.UseAuthTypeMsg) messageType_);
    }
    if (messageTypeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (net.rptools.maptool.server.proto.ClientAuthMsg) messageType_);
    }
    if (messageTypeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, ((java.lang.Integer) messageType_));
    }
    if (messageTypeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (net.rptools.maptool.server.proto.ConnectionSuccessfulMsg) messageType_);
    }
    if (messageTypeCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (net.rptools.maptool.server.proto.PlayerBlockedMsg) messageType_);
    }
    if (messageTypeCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (net.rptools.maptool.server.proto.RequestPublicKeyMsg) messageType_);
    }
    if (messageTypeCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (net.rptools.maptool.server.proto.PublicKeyUploadMsg) messageType_);
    }
    if (messageTypeCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (net.rptools.maptool.server.proto.PublicKeyAddedMsg) messageType_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof net.rptools.maptool.server.proto.HandshakeMsg)) {
      return super.equals(obj);
    }
    net.rptools.maptool.server.proto.HandshakeMsg other = (net.rptools.maptool.server.proto.HandshakeMsg) obj;

    if (!getMessageTypeCase().equals(other.getMessageTypeCase())) return false;
    switch (messageTypeCase_) {
      case 1:
        if (!getClientInitMsg()
            .equals(other.getClientInitMsg())) return false;
        break;
      case 3:
        if (!getClientAuthMessage()
            .equals(other.getClientAuthMessage())) return false;
        break;
      case 2:
        if (!getUseAuthTypeMsg()
            .equals(other.getUseAuthTypeMsg())) return false;
        break;
      case 4:
        if (getHandshakeResponseCodeMsgValue()
            != other.getHandshakeResponseCodeMsgValue()) return false;
        break;
      case 5:
        if (!getConnectionSuccessfulMsg()
            .equals(other.getConnectionSuccessfulMsg())) return false;
        break;
      case 6:
        if (!getPlayerBlockedMsg()
            .equals(other.getPlayerBlockedMsg())) return false;
        break;
      case 7:
        if (!getRequestPublicKeyMsg()
            .equals(other.getRequestPublicKeyMsg())) return false;
        break;
      case 8:
        if (!getPublicKeyUploadMsg()
            .equals(other.getPublicKeyUploadMsg())) return false;
        break;
      case 9:
        if (!getPublicKeyAddedMsg()
            .equals(other.getPublicKeyAddedMsg())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (messageTypeCase_) {
      case 1:
        hash = (37 * hash) + CLIENT_INIT_MSG_FIELD_NUMBER;
        hash = (53 * hash) + getClientInitMsg().hashCode();
        break;
      case 3:
        hash = (37 * hash) + CLIENT_AUTH_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getClientAuthMessage().hashCode();
        break;
      case 2:
        hash = (37 * hash) + USE_AUTH_TYPE_MSG_FIELD_NUMBER;
        hash = (53 * hash) + getUseAuthTypeMsg().hashCode();
        break;
      case 4:
        hash = (37 * hash) + HANDSHAKE_RESPONSE_CODE_MSG_FIELD_NUMBER;
        hash = (53 * hash) + getHandshakeResponseCodeMsgValue();
        break;
      case 5:
        hash = (37 * hash) + CONNECTION_SUCCESSFUL_MSG_FIELD_NUMBER;
        hash = (53 * hash) + getConnectionSuccessfulMsg().hashCode();
        break;
      case 6:
        hash = (37 * hash) + PLAYER_BLOCKED_MSG_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerBlockedMsg().hashCode();
        break;
      case 7:
        hash = (37 * hash) + REQUEST_PUBLIC_KEY_MSG_FIELD_NUMBER;
        hash = (53 * hash) + getRequestPublicKeyMsg().hashCode();
        break;
      case 8:
        hash = (37 * hash) + PUBLIC_KEY_UPLOAD_MSG_FIELD_NUMBER;
        hash = (53 * hash) + getPublicKeyUploadMsg().hashCode();
        break;
      case 9:
        hash = (37 * hash) + PUBLIC_KEY_ADDED_MSG_FIELD_NUMBER;
        hash = (53 * hash) + getPublicKeyAddedMsg().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static net.rptools.maptool.server.proto.HandshakeMsg parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.HandshakeMsg parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.HandshakeMsg parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.HandshakeMsg parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.HandshakeMsg parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.HandshakeMsg parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.HandshakeMsg parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.HandshakeMsg parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.HandshakeMsg parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.HandshakeMsg parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.HandshakeMsg parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.HandshakeMsg parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(net.rptools.maptool.server.proto.HandshakeMsg prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code maptool.HandshakeMsg}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maptool.HandshakeMsg)
      net.rptools.maptool.server.proto.HandshakeMsgOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.HandshakeProtos.internal_static_maptool_HandshakeMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.rptools.maptool.server.proto.HandshakeProtos.internal_static_maptool_HandshakeMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.rptools.maptool.server.proto.HandshakeMsg.class, net.rptools.maptool.server.proto.HandshakeMsg.Builder.class);
    }

    // Construct using net.rptools.maptool.server.proto.HandshakeMsg.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      messageTypeCase_ = 0;
      messageType_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return net.rptools.maptool.server.proto.HandshakeProtos.internal_static_maptool_HandshakeMsg_descriptor;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.HandshakeMsg getDefaultInstanceForType() {
      return net.rptools.maptool.server.proto.HandshakeMsg.getDefaultInstance();
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.HandshakeMsg build() {
      net.rptools.maptool.server.proto.HandshakeMsg result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.HandshakeMsg buildPartial() {
      net.rptools.maptool.server.proto.HandshakeMsg result = new net.rptools.maptool.server.proto.HandshakeMsg(this);
      if (messageTypeCase_ == 1) {
        if (clientInitMsgBuilder_ == null) {
          result.messageType_ = messageType_;
        } else {
          result.messageType_ = clientInitMsgBuilder_.build();
        }
      }
      if (messageTypeCase_ == 3) {
        if (clientAuthMessageBuilder_ == null) {
          result.messageType_ = messageType_;
        } else {
          result.messageType_ = clientAuthMessageBuilder_.build();
        }
      }
      if (messageTypeCase_ == 2) {
        if (useAuthTypeMsgBuilder_ == null) {
          result.messageType_ = messageType_;
        } else {
          result.messageType_ = useAuthTypeMsgBuilder_.build();
        }
      }
      if (messageTypeCase_ == 4) {
        result.messageType_ = messageType_;
      }
      if (messageTypeCase_ == 5) {
        if (connectionSuccessfulMsgBuilder_ == null) {
          result.messageType_ = messageType_;
        } else {
          result.messageType_ = connectionSuccessfulMsgBuilder_.build();
        }
      }
      if (messageTypeCase_ == 6) {
        if (playerBlockedMsgBuilder_ == null) {
          result.messageType_ = messageType_;
        } else {
          result.messageType_ = playerBlockedMsgBuilder_.build();
        }
      }
      if (messageTypeCase_ == 7) {
        if (requestPublicKeyMsgBuilder_ == null) {
          result.messageType_ = messageType_;
        } else {
          result.messageType_ = requestPublicKeyMsgBuilder_.build();
        }
      }
      if (messageTypeCase_ == 8) {
        if (publicKeyUploadMsgBuilder_ == null) {
          result.messageType_ = messageType_;
        } else {
          result.messageType_ = publicKeyUploadMsgBuilder_.build();
        }
      }
      if (messageTypeCase_ == 9) {
        if (publicKeyAddedMsgBuilder_ == null) {
          result.messageType_ = messageType_;
        } else {
          result.messageType_ = publicKeyAddedMsgBuilder_.build();
        }
      }
      result.messageTypeCase_ = messageTypeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof net.rptools.maptool.server.proto.HandshakeMsg) {
        return mergeFrom((net.rptools.maptool.server.proto.HandshakeMsg)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(net.rptools.maptool.server.proto.HandshakeMsg other) {
      if (other == net.rptools.maptool.server.proto.HandshakeMsg.getDefaultInstance()) return this;
      switch (other.getMessageTypeCase()) {
        case CLIENT_INIT_MSG: {
          mergeClientInitMsg(other.getClientInitMsg());
          break;
        }
        case CLIENT_AUTH_MESSAGE: {
          mergeClientAuthMessage(other.getClientAuthMessage());
          break;
        }
        case USE_AUTH_TYPE_MSG: {
          mergeUseAuthTypeMsg(other.getUseAuthTypeMsg());
          break;
        }
        case HANDSHAKE_RESPONSE_CODE_MSG: {
          setHandshakeResponseCodeMsgValue(other.getHandshakeResponseCodeMsgValue());
          break;
        }
        case CONNECTION_SUCCESSFUL_MSG: {
          mergeConnectionSuccessfulMsg(other.getConnectionSuccessfulMsg());
          break;
        }
        case PLAYER_BLOCKED_MSG: {
          mergePlayerBlockedMsg(other.getPlayerBlockedMsg());
          break;
        }
        case REQUEST_PUBLIC_KEY_MSG: {
          mergeRequestPublicKeyMsg(other.getRequestPublicKeyMsg());
          break;
        }
        case PUBLIC_KEY_UPLOAD_MSG: {
          mergePublicKeyUploadMsg(other.getPublicKeyUploadMsg());
          break;
        }
        case PUBLIC_KEY_ADDED_MSG: {
          mergePublicKeyAddedMsg(other.getPublicKeyAddedMsg());
          break;
        }
        case MESSAGETYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      net.rptools.maptool.server.proto.HandshakeMsg parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (net.rptools.maptool.server.proto.HandshakeMsg) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int messageTypeCase_ = 0;
    private java.lang.Object messageType_;
    public MessageTypeCase
        getMessageTypeCase() {
      return MessageTypeCase.forNumber(
          messageTypeCase_);
    }

    public Builder clearMessageType() {
      messageTypeCase_ = 0;
      messageType_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.ClientInitMsg, net.rptools.maptool.server.proto.ClientInitMsg.Builder, net.rptools.maptool.server.proto.ClientInitMsgOrBuilder> clientInitMsgBuilder_;
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientInitMsg client_init_msg = 1;</code>
     * @return Whether the clientInitMsg field is set.
     */
    @java.lang.Override
    public boolean hasClientInitMsg() {
      return messageTypeCase_ == 1;
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientInitMsg client_init_msg = 1;</code>
     * @return The clientInitMsg.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.ClientInitMsg getClientInitMsg() {
      if (clientInitMsgBuilder_ == null) {
        if (messageTypeCase_ == 1) {
          return (net.rptools.maptool.server.proto.ClientInitMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.ClientInitMsg.getDefaultInstance();
      } else {
        if (messageTypeCase_ == 1) {
          return clientInitMsgBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.ClientInitMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientInitMsg client_init_msg = 1;</code>
     */
    public Builder setClientInitMsg(net.rptools.maptool.server.proto.ClientInitMsg value) {
      if (clientInitMsgBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        messageType_ = value;
        onChanged();
      } else {
        clientInitMsgBuilder_.setMessage(value);
      }
      messageTypeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientInitMsg client_init_msg = 1;</code>
     */
    public Builder setClientInitMsg(
        net.rptools.maptool.server.proto.ClientInitMsg.Builder builderForValue) {
      if (clientInitMsgBuilder_ == null) {
        messageType_ = builderForValue.build();
        onChanged();
      } else {
        clientInitMsgBuilder_.setMessage(builderForValue.build());
      }
      messageTypeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientInitMsg client_init_msg = 1;</code>
     */
    public Builder mergeClientInitMsg(net.rptools.maptool.server.proto.ClientInitMsg value) {
      if (clientInitMsgBuilder_ == null) {
        if (messageTypeCase_ == 1 &&
            messageType_ != net.rptools.maptool.server.proto.ClientInitMsg.getDefaultInstance()) {
          messageType_ = net.rptools.maptool.server.proto.ClientInitMsg.newBuilder((net.rptools.maptool.server.proto.ClientInitMsg) messageType_)
              .mergeFrom(value).buildPartial();
        } else {
          messageType_ = value;
        }
        onChanged();
      } else {
        if (messageTypeCase_ == 1) {
          clientInitMsgBuilder_.mergeFrom(value);
        } else {
          clientInitMsgBuilder_.setMessage(value);
        }
      }
      messageTypeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientInitMsg client_init_msg = 1;</code>
     */
    public Builder clearClientInitMsg() {
      if (clientInitMsgBuilder_ == null) {
        if (messageTypeCase_ == 1) {
          messageTypeCase_ = 0;
          messageType_ = null;
          onChanged();
        }
      } else {
        if (messageTypeCase_ == 1) {
          messageTypeCase_ = 0;
          messageType_ = null;
        }
        clientInitMsgBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientInitMsg client_init_msg = 1;</code>
     */
    public net.rptools.maptool.server.proto.ClientInitMsg.Builder getClientInitMsgBuilder() {
      return getClientInitMsgFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientInitMsg client_init_msg = 1;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.ClientInitMsgOrBuilder getClientInitMsgOrBuilder() {
      if ((messageTypeCase_ == 1) && (clientInitMsgBuilder_ != null)) {
        return clientInitMsgBuilder_.getMessageOrBuilder();
      } else {
        if (messageTypeCase_ == 1) {
          return (net.rptools.maptool.server.proto.ClientInitMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.ClientInitMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientInitMsg client_init_msg = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.ClientInitMsg, net.rptools.maptool.server.proto.ClientInitMsg.Builder, net.rptools.maptool.server.proto.ClientInitMsgOrBuilder> 
        getClientInitMsgFieldBuilder() {
      if (clientInitMsgBuilder_ == null) {
        if (!(messageTypeCase_ == 1)) {
          messageType_ = net.rptools.maptool.server.proto.ClientInitMsg.getDefaultInstance();
        }
        clientInitMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.ClientInitMsg, net.rptools.maptool.server.proto.ClientInitMsg.Builder, net.rptools.maptool.server.proto.ClientInitMsgOrBuilder>(
                (net.rptools.maptool.server.proto.ClientInitMsg) messageType_,
                getParentForChildren(),
                isClean());
        messageType_ = null;
      }
      messageTypeCase_ = 1;
      onChanged();;
      return clientInitMsgBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.ClientAuthMsg, net.rptools.maptool.server.proto.ClientAuthMsg.Builder, net.rptools.maptool.server.proto.ClientAuthMsgOrBuilder> clientAuthMessageBuilder_;
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientAuthMsg client_auth_message = 3;</code>
     * @return Whether the clientAuthMessage field is set.
     */
    @java.lang.Override
    public boolean hasClientAuthMessage() {
      return messageTypeCase_ == 3;
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientAuthMsg client_auth_message = 3;</code>
     * @return The clientAuthMessage.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.ClientAuthMsg getClientAuthMessage() {
      if (clientAuthMessageBuilder_ == null) {
        if (messageTypeCase_ == 3) {
          return (net.rptools.maptool.server.proto.ClientAuthMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.ClientAuthMsg.getDefaultInstance();
      } else {
        if (messageTypeCase_ == 3) {
          return clientAuthMessageBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.ClientAuthMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientAuthMsg client_auth_message = 3;</code>
     */
    public Builder setClientAuthMessage(net.rptools.maptool.server.proto.ClientAuthMsg value) {
      if (clientAuthMessageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        messageType_ = value;
        onChanged();
      } else {
        clientAuthMessageBuilder_.setMessage(value);
      }
      messageTypeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientAuthMsg client_auth_message = 3;</code>
     */
    public Builder setClientAuthMessage(
        net.rptools.maptool.server.proto.ClientAuthMsg.Builder builderForValue) {
      if (clientAuthMessageBuilder_ == null) {
        messageType_ = builderForValue.build();
        onChanged();
      } else {
        clientAuthMessageBuilder_.setMessage(builderForValue.build());
      }
      messageTypeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientAuthMsg client_auth_message = 3;</code>
     */
    public Builder mergeClientAuthMessage(net.rptools.maptool.server.proto.ClientAuthMsg value) {
      if (clientAuthMessageBuilder_ == null) {
        if (messageTypeCase_ == 3 &&
            messageType_ != net.rptools.maptool.server.proto.ClientAuthMsg.getDefaultInstance()) {
          messageType_ = net.rptools.maptool.server.proto.ClientAuthMsg.newBuilder((net.rptools.maptool.server.proto.ClientAuthMsg) messageType_)
              .mergeFrom(value).buildPartial();
        } else {
          messageType_ = value;
        }
        onChanged();
      } else {
        if (messageTypeCase_ == 3) {
          clientAuthMessageBuilder_.mergeFrom(value);
        } else {
          clientAuthMessageBuilder_.setMessage(value);
        }
      }
      messageTypeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientAuthMsg client_auth_message = 3;</code>
     */
    public Builder clearClientAuthMessage() {
      if (clientAuthMessageBuilder_ == null) {
        if (messageTypeCase_ == 3) {
          messageTypeCase_ = 0;
          messageType_ = null;
          onChanged();
        }
      } else {
        if (messageTypeCase_ == 3) {
          messageTypeCase_ = 0;
          messageType_ = null;
        }
        clientAuthMessageBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientAuthMsg client_auth_message = 3;</code>
     */
    public net.rptools.maptool.server.proto.ClientAuthMsg.Builder getClientAuthMessageBuilder() {
      return getClientAuthMessageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientAuthMsg client_auth_message = 3;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.ClientAuthMsgOrBuilder getClientAuthMessageOrBuilder() {
      if ((messageTypeCase_ == 3) && (clientAuthMessageBuilder_ != null)) {
        return clientAuthMessageBuilder_.getMessageOrBuilder();
      } else {
        if (messageTypeCase_ == 3) {
          return (net.rptools.maptool.server.proto.ClientAuthMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.ClientAuthMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Client Initiated
     * </pre>
     *
     * <code>.maptool.ClientAuthMsg client_auth_message = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.ClientAuthMsg, net.rptools.maptool.server.proto.ClientAuthMsg.Builder, net.rptools.maptool.server.proto.ClientAuthMsgOrBuilder> 
        getClientAuthMessageFieldBuilder() {
      if (clientAuthMessageBuilder_ == null) {
        if (!(messageTypeCase_ == 3)) {
          messageType_ = net.rptools.maptool.server.proto.ClientAuthMsg.getDefaultInstance();
        }
        clientAuthMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.ClientAuthMsg, net.rptools.maptool.server.proto.ClientAuthMsg.Builder, net.rptools.maptool.server.proto.ClientAuthMsgOrBuilder>(
                (net.rptools.maptool.server.proto.ClientAuthMsg) messageType_,
                getParentForChildren(),
                isClean());
        messageType_ = null;
      }
      messageTypeCase_ = 3;
      onChanged();;
      return clientAuthMessageBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.UseAuthTypeMsg, net.rptools.maptool.server.proto.UseAuthTypeMsg.Builder, net.rptools.maptool.server.proto.UseAuthTypeMsgOrBuilder> useAuthTypeMsgBuilder_;
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.UseAuthTypeMsg use_auth_type_msg = 2;</code>
     * @return Whether the useAuthTypeMsg field is set.
     */
    @java.lang.Override
    public boolean hasUseAuthTypeMsg() {
      return messageTypeCase_ == 2;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.UseAuthTypeMsg use_auth_type_msg = 2;</code>
     * @return The useAuthTypeMsg.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.UseAuthTypeMsg getUseAuthTypeMsg() {
      if (useAuthTypeMsgBuilder_ == null) {
        if (messageTypeCase_ == 2) {
          return (net.rptools.maptool.server.proto.UseAuthTypeMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.UseAuthTypeMsg.getDefaultInstance();
      } else {
        if (messageTypeCase_ == 2) {
          return useAuthTypeMsgBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.UseAuthTypeMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.UseAuthTypeMsg use_auth_type_msg = 2;</code>
     */
    public Builder setUseAuthTypeMsg(net.rptools.maptool.server.proto.UseAuthTypeMsg value) {
      if (useAuthTypeMsgBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        messageType_ = value;
        onChanged();
      } else {
        useAuthTypeMsgBuilder_.setMessage(value);
      }
      messageTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.UseAuthTypeMsg use_auth_type_msg = 2;</code>
     */
    public Builder setUseAuthTypeMsg(
        net.rptools.maptool.server.proto.UseAuthTypeMsg.Builder builderForValue) {
      if (useAuthTypeMsgBuilder_ == null) {
        messageType_ = builderForValue.build();
        onChanged();
      } else {
        useAuthTypeMsgBuilder_.setMessage(builderForValue.build());
      }
      messageTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.UseAuthTypeMsg use_auth_type_msg = 2;</code>
     */
    public Builder mergeUseAuthTypeMsg(net.rptools.maptool.server.proto.UseAuthTypeMsg value) {
      if (useAuthTypeMsgBuilder_ == null) {
        if (messageTypeCase_ == 2 &&
            messageType_ != net.rptools.maptool.server.proto.UseAuthTypeMsg.getDefaultInstance()) {
          messageType_ = net.rptools.maptool.server.proto.UseAuthTypeMsg.newBuilder((net.rptools.maptool.server.proto.UseAuthTypeMsg) messageType_)
              .mergeFrom(value).buildPartial();
        } else {
          messageType_ = value;
        }
        onChanged();
      } else {
        if (messageTypeCase_ == 2) {
          useAuthTypeMsgBuilder_.mergeFrom(value);
        } else {
          useAuthTypeMsgBuilder_.setMessage(value);
        }
      }
      messageTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.UseAuthTypeMsg use_auth_type_msg = 2;</code>
     */
    public Builder clearUseAuthTypeMsg() {
      if (useAuthTypeMsgBuilder_ == null) {
        if (messageTypeCase_ == 2) {
          messageTypeCase_ = 0;
          messageType_ = null;
          onChanged();
        }
      } else {
        if (messageTypeCase_ == 2) {
          messageTypeCase_ = 0;
          messageType_ = null;
        }
        useAuthTypeMsgBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.UseAuthTypeMsg use_auth_type_msg = 2;</code>
     */
    public net.rptools.maptool.server.proto.UseAuthTypeMsg.Builder getUseAuthTypeMsgBuilder() {
      return getUseAuthTypeMsgFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.UseAuthTypeMsg use_auth_type_msg = 2;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.UseAuthTypeMsgOrBuilder getUseAuthTypeMsgOrBuilder() {
      if ((messageTypeCase_ == 2) && (useAuthTypeMsgBuilder_ != null)) {
        return useAuthTypeMsgBuilder_.getMessageOrBuilder();
      } else {
        if (messageTypeCase_ == 2) {
          return (net.rptools.maptool.server.proto.UseAuthTypeMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.UseAuthTypeMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.UseAuthTypeMsg use_auth_type_msg = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.UseAuthTypeMsg, net.rptools.maptool.server.proto.UseAuthTypeMsg.Builder, net.rptools.maptool.server.proto.UseAuthTypeMsgOrBuilder> 
        getUseAuthTypeMsgFieldBuilder() {
      if (useAuthTypeMsgBuilder_ == null) {
        if (!(messageTypeCase_ == 2)) {
          messageType_ = net.rptools.maptool.server.proto.UseAuthTypeMsg.getDefaultInstance();
        }
        useAuthTypeMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.UseAuthTypeMsg, net.rptools.maptool.server.proto.UseAuthTypeMsg.Builder, net.rptools.maptool.server.proto.UseAuthTypeMsgOrBuilder>(
                (net.rptools.maptool.server.proto.UseAuthTypeMsg) messageType_,
                getParentForChildren(),
                isClean());
        messageType_ = null;
      }
      messageTypeCase_ = 2;
      onChanged();;
      return useAuthTypeMsgBuilder_;
    }

    /**
     * <pre>
     * Either
     * </pre>
     *
     * <code>.maptool.HandshakeResponseCodeMsg handshake_response_code_msg = 4;</code>
     * @return Whether the handshakeResponseCodeMsg field is set.
     */
    @java.lang.Override
    public boolean hasHandshakeResponseCodeMsg() {
      return messageTypeCase_ == 4;
    }
    /**
     * <pre>
     * Either
     * </pre>
     *
     * <code>.maptool.HandshakeResponseCodeMsg handshake_response_code_msg = 4;</code>
     * @return The enum numeric value on the wire for handshakeResponseCodeMsg.
     */
    @java.lang.Override
    public int getHandshakeResponseCodeMsgValue() {
      if (messageTypeCase_ == 4) {
        return ((java.lang.Integer) messageType_).intValue();
      }
      return 0;
    }
    /**
     * <pre>
     * Either
     * </pre>
     *
     * <code>.maptool.HandshakeResponseCodeMsg handshake_response_code_msg = 4;</code>
     * @param value The enum numeric value on the wire for handshakeResponseCodeMsg to set.
     * @return This builder for chaining.
     */
    public Builder setHandshakeResponseCodeMsgValue(int value) {
      messageTypeCase_ = 4;
      messageType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Either
     * </pre>
     *
     * <code>.maptool.HandshakeResponseCodeMsg handshake_response_code_msg = 4;</code>
     * @return The handshakeResponseCodeMsg.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.HandshakeResponseCodeMsg getHandshakeResponseCodeMsg() {
      if (messageTypeCase_ == 4) {
        @SuppressWarnings("deprecation")
        net.rptools.maptool.server.proto.HandshakeResponseCodeMsg result = net.rptools.maptool.server.proto.HandshakeResponseCodeMsg.valueOf(
            (java.lang.Integer) messageType_);
        return result == null ? net.rptools.maptool.server.proto.HandshakeResponseCodeMsg.UNRECOGNIZED : result;
      }
      return net.rptools.maptool.server.proto.HandshakeResponseCodeMsg.UNKNOWN;
    }
    /**
     * <pre>
     * Either
     * </pre>
     *
     * <code>.maptool.HandshakeResponseCodeMsg handshake_response_code_msg = 4;</code>
     * @param value The handshakeResponseCodeMsg to set.
     * @return This builder for chaining.
     */
    public Builder setHandshakeResponseCodeMsg(net.rptools.maptool.server.proto.HandshakeResponseCodeMsg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      messageTypeCase_ = 4;
      messageType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Either
     * </pre>
     *
     * <code>.maptool.HandshakeResponseCodeMsg handshake_response_code_msg = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearHandshakeResponseCodeMsg() {
      if (messageTypeCase_ == 4) {
        messageTypeCase_ = 0;
        messageType_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.ConnectionSuccessfulMsg, net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.Builder, net.rptools.maptool.server.proto.ConnectionSuccessfulMsgOrBuilder> connectionSuccessfulMsgBuilder_;
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.ConnectionSuccessfulMsg connection_successful_msg = 5;</code>
     * @return Whether the connectionSuccessfulMsg field is set.
     */
    @java.lang.Override
    public boolean hasConnectionSuccessfulMsg() {
      return messageTypeCase_ == 5;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.ConnectionSuccessfulMsg connection_successful_msg = 5;</code>
     * @return The connectionSuccessfulMsg.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.ConnectionSuccessfulMsg getConnectionSuccessfulMsg() {
      if (connectionSuccessfulMsgBuilder_ == null) {
        if (messageTypeCase_ == 5) {
          return (net.rptools.maptool.server.proto.ConnectionSuccessfulMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.getDefaultInstance();
      } else {
        if (messageTypeCase_ == 5) {
          return connectionSuccessfulMsgBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.ConnectionSuccessfulMsg connection_successful_msg = 5;</code>
     */
    public Builder setConnectionSuccessfulMsg(net.rptools.maptool.server.proto.ConnectionSuccessfulMsg value) {
      if (connectionSuccessfulMsgBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        messageType_ = value;
        onChanged();
      } else {
        connectionSuccessfulMsgBuilder_.setMessage(value);
      }
      messageTypeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.ConnectionSuccessfulMsg connection_successful_msg = 5;</code>
     */
    public Builder setConnectionSuccessfulMsg(
        net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.Builder builderForValue) {
      if (connectionSuccessfulMsgBuilder_ == null) {
        messageType_ = builderForValue.build();
        onChanged();
      } else {
        connectionSuccessfulMsgBuilder_.setMessage(builderForValue.build());
      }
      messageTypeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.ConnectionSuccessfulMsg connection_successful_msg = 5;</code>
     */
    public Builder mergeConnectionSuccessfulMsg(net.rptools.maptool.server.proto.ConnectionSuccessfulMsg value) {
      if (connectionSuccessfulMsgBuilder_ == null) {
        if (messageTypeCase_ == 5 &&
            messageType_ != net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.getDefaultInstance()) {
          messageType_ = net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.newBuilder((net.rptools.maptool.server.proto.ConnectionSuccessfulMsg) messageType_)
              .mergeFrom(value).buildPartial();
        } else {
          messageType_ = value;
        }
        onChanged();
      } else {
        if (messageTypeCase_ == 5) {
          connectionSuccessfulMsgBuilder_.mergeFrom(value);
        } else {
          connectionSuccessfulMsgBuilder_.setMessage(value);
        }
      }
      messageTypeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.ConnectionSuccessfulMsg connection_successful_msg = 5;</code>
     */
    public Builder clearConnectionSuccessfulMsg() {
      if (connectionSuccessfulMsgBuilder_ == null) {
        if (messageTypeCase_ == 5) {
          messageTypeCase_ = 0;
          messageType_ = null;
          onChanged();
        }
      } else {
        if (messageTypeCase_ == 5) {
          messageTypeCase_ = 0;
          messageType_ = null;
        }
        connectionSuccessfulMsgBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.ConnectionSuccessfulMsg connection_successful_msg = 5;</code>
     */
    public net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.Builder getConnectionSuccessfulMsgBuilder() {
      return getConnectionSuccessfulMsgFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.ConnectionSuccessfulMsg connection_successful_msg = 5;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.ConnectionSuccessfulMsgOrBuilder getConnectionSuccessfulMsgOrBuilder() {
      if ((messageTypeCase_ == 5) && (connectionSuccessfulMsgBuilder_ != null)) {
        return connectionSuccessfulMsgBuilder_.getMessageOrBuilder();
      } else {
        if (messageTypeCase_ == 5) {
          return (net.rptools.maptool.server.proto.ConnectionSuccessfulMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.ConnectionSuccessfulMsg connection_successful_msg = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.ConnectionSuccessfulMsg, net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.Builder, net.rptools.maptool.server.proto.ConnectionSuccessfulMsgOrBuilder> 
        getConnectionSuccessfulMsgFieldBuilder() {
      if (connectionSuccessfulMsgBuilder_ == null) {
        if (!(messageTypeCase_ == 5)) {
          messageType_ = net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.getDefaultInstance();
        }
        connectionSuccessfulMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.ConnectionSuccessfulMsg, net.rptools.maptool.server.proto.ConnectionSuccessfulMsg.Builder, net.rptools.maptool.server.proto.ConnectionSuccessfulMsgOrBuilder>(
                (net.rptools.maptool.server.proto.ConnectionSuccessfulMsg) messageType_,
                getParentForChildren(),
                isClean());
        messageType_ = null;
      }
      messageTypeCase_ = 5;
      onChanged();;
      return connectionSuccessfulMsgBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.PlayerBlockedMsg, net.rptools.maptool.server.proto.PlayerBlockedMsg.Builder, net.rptools.maptool.server.proto.PlayerBlockedMsgOrBuilder> playerBlockedMsgBuilder_;
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PlayerBlockedMsg player_blocked_msg = 6;</code>
     * @return Whether the playerBlockedMsg field is set.
     */
    @java.lang.Override
    public boolean hasPlayerBlockedMsg() {
      return messageTypeCase_ == 6;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PlayerBlockedMsg player_blocked_msg = 6;</code>
     * @return The playerBlockedMsg.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.PlayerBlockedMsg getPlayerBlockedMsg() {
      if (playerBlockedMsgBuilder_ == null) {
        if (messageTypeCase_ == 6) {
          return (net.rptools.maptool.server.proto.PlayerBlockedMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.PlayerBlockedMsg.getDefaultInstance();
      } else {
        if (messageTypeCase_ == 6) {
          return playerBlockedMsgBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.PlayerBlockedMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PlayerBlockedMsg player_blocked_msg = 6;</code>
     */
    public Builder setPlayerBlockedMsg(net.rptools.maptool.server.proto.PlayerBlockedMsg value) {
      if (playerBlockedMsgBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        messageType_ = value;
        onChanged();
      } else {
        playerBlockedMsgBuilder_.setMessage(value);
      }
      messageTypeCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PlayerBlockedMsg player_blocked_msg = 6;</code>
     */
    public Builder setPlayerBlockedMsg(
        net.rptools.maptool.server.proto.PlayerBlockedMsg.Builder builderForValue) {
      if (playerBlockedMsgBuilder_ == null) {
        messageType_ = builderForValue.build();
        onChanged();
      } else {
        playerBlockedMsgBuilder_.setMessage(builderForValue.build());
      }
      messageTypeCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PlayerBlockedMsg player_blocked_msg = 6;</code>
     */
    public Builder mergePlayerBlockedMsg(net.rptools.maptool.server.proto.PlayerBlockedMsg value) {
      if (playerBlockedMsgBuilder_ == null) {
        if (messageTypeCase_ == 6 &&
            messageType_ != net.rptools.maptool.server.proto.PlayerBlockedMsg.getDefaultInstance()) {
          messageType_ = net.rptools.maptool.server.proto.PlayerBlockedMsg.newBuilder((net.rptools.maptool.server.proto.PlayerBlockedMsg) messageType_)
              .mergeFrom(value).buildPartial();
        } else {
          messageType_ = value;
        }
        onChanged();
      } else {
        if (messageTypeCase_ == 6) {
          playerBlockedMsgBuilder_.mergeFrom(value);
        } else {
          playerBlockedMsgBuilder_.setMessage(value);
        }
      }
      messageTypeCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PlayerBlockedMsg player_blocked_msg = 6;</code>
     */
    public Builder clearPlayerBlockedMsg() {
      if (playerBlockedMsgBuilder_ == null) {
        if (messageTypeCase_ == 6) {
          messageTypeCase_ = 0;
          messageType_ = null;
          onChanged();
        }
      } else {
        if (messageTypeCase_ == 6) {
          messageTypeCase_ = 0;
          messageType_ = null;
        }
        playerBlockedMsgBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PlayerBlockedMsg player_blocked_msg = 6;</code>
     */
    public net.rptools.maptool.server.proto.PlayerBlockedMsg.Builder getPlayerBlockedMsgBuilder() {
      return getPlayerBlockedMsgFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PlayerBlockedMsg player_blocked_msg = 6;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.PlayerBlockedMsgOrBuilder getPlayerBlockedMsgOrBuilder() {
      if ((messageTypeCase_ == 6) && (playerBlockedMsgBuilder_ != null)) {
        return playerBlockedMsgBuilder_.getMessageOrBuilder();
      } else {
        if (messageTypeCase_ == 6) {
          return (net.rptools.maptool.server.proto.PlayerBlockedMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.PlayerBlockedMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PlayerBlockedMsg player_blocked_msg = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.PlayerBlockedMsg, net.rptools.maptool.server.proto.PlayerBlockedMsg.Builder, net.rptools.maptool.server.proto.PlayerBlockedMsgOrBuilder> 
        getPlayerBlockedMsgFieldBuilder() {
      if (playerBlockedMsgBuilder_ == null) {
        if (!(messageTypeCase_ == 6)) {
          messageType_ = net.rptools.maptool.server.proto.PlayerBlockedMsg.getDefaultInstance();
        }
        playerBlockedMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.PlayerBlockedMsg, net.rptools.maptool.server.proto.PlayerBlockedMsg.Builder, net.rptools.maptool.server.proto.PlayerBlockedMsgOrBuilder>(
                (net.rptools.maptool.server.proto.PlayerBlockedMsg) messageType_,
                getParentForChildren(),
                isClean());
        messageType_ = null;
      }
      messageTypeCase_ = 6;
      onChanged();;
      return playerBlockedMsgBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.RequestPublicKeyMsg, net.rptools.maptool.server.proto.RequestPublicKeyMsg.Builder, net.rptools.maptool.server.proto.RequestPublicKeyMsgOrBuilder> requestPublicKeyMsgBuilder_;
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.RequestPublicKeyMsg request_public_key_msg = 7;</code>
     * @return Whether the requestPublicKeyMsg field is set.
     */
    @java.lang.Override
    public boolean hasRequestPublicKeyMsg() {
      return messageTypeCase_ == 7;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.RequestPublicKeyMsg request_public_key_msg = 7;</code>
     * @return The requestPublicKeyMsg.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.RequestPublicKeyMsg getRequestPublicKeyMsg() {
      if (requestPublicKeyMsgBuilder_ == null) {
        if (messageTypeCase_ == 7) {
          return (net.rptools.maptool.server.proto.RequestPublicKeyMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.RequestPublicKeyMsg.getDefaultInstance();
      } else {
        if (messageTypeCase_ == 7) {
          return requestPublicKeyMsgBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.RequestPublicKeyMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.RequestPublicKeyMsg request_public_key_msg = 7;</code>
     */
    public Builder setRequestPublicKeyMsg(net.rptools.maptool.server.proto.RequestPublicKeyMsg value) {
      if (requestPublicKeyMsgBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        messageType_ = value;
        onChanged();
      } else {
        requestPublicKeyMsgBuilder_.setMessage(value);
      }
      messageTypeCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.RequestPublicKeyMsg request_public_key_msg = 7;</code>
     */
    public Builder setRequestPublicKeyMsg(
        net.rptools.maptool.server.proto.RequestPublicKeyMsg.Builder builderForValue) {
      if (requestPublicKeyMsgBuilder_ == null) {
        messageType_ = builderForValue.build();
        onChanged();
      } else {
        requestPublicKeyMsgBuilder_.setMessage(builderForValue.build());
      }
      messageTypeCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.RequestPublicKeyMsg request_public_key_msg = 7;</code>
     */
    public Builder mergeRequestPublicKeyMsg(net.rptools.maptool.server.proto.RequestPublicKeyMsg value) {
      if (requestPublicKeyMsgBuilder_ == null) {
        if (messageTypeCase_ == 7 &&
            messageType_ != net.rptools.maptool.server.proto.RequestPublicKeyMsg.getDefaultInstance()) {
          messageType_ = net.rptools.maptool.server.proto.RequestPublicKeyMsg.newBuilder((net.rptools.maptool.server.proto.RequestPublicKeyMsg) messageType_)
              .mergeFrom(value).buildPartial();
        } else {
          messageType_ = value;
        }
        onChanged();
      } else {
        if (messageTypeCase_ == 7) {
          requestPublicKeyMsgBuilder_.mergeFrom(value);
        } else {
          requestPublicKeyMsgBuilder_.setMessage(value);
        }
      }
      messageTypeCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.RequestPublicKeyMsg request_public_key_msg = 7;</code>
     */
    public Builder clearRequestPublicKeyMsg() {
      if (requestPublicKeyMsgBuilder_ == null) {
        if (messageTypeCase_ == 7) {
          messageTypeCase_ = 0;
          messageType_ = null;
          onChanged();
        }
      } else {
        if (messageTypeCase_ == 7) {
          messageTypeCase_ = 0;
          messageType_ = null;
        }
        requestPublicKeyMsgBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.RequestPublicKeyMsg request_public_key_msg = 7;</code>
     */
    public net.rptools.maptool.server.proto.RequestPublicKeyMsg.Builder getRequestPublicKeyMsgBuilder() {
      return getRequestPublicKeyMsgFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.RequestPublicKeyMsg request_public_key_msg = 7;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.RequestPublicKeyMsgOrBuilder getRequestPublicKeyMsgOrBuilder() {
      if ((messageTypeCase_ == 7) && (requestPublicKeyMsgBuilder_ != null)) {
        return requestPublicKeyMsgBuilder_.getMessageOrBuilder();
      } else {
        if (messageTypeCase_ == 7) {
          return (net.rptools.maptool.server.proto.RequestPublicKeyMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.RequestPublicKeyMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.RequestPublicKeyMsg request_public_key_msg = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.RequestPublicKeyMsg, net.rptools.maptool.server.proto.RequestPublicKeyMsg.Builder, net.rptools.maptool.server.proto.RequestPublicKeyMsgOrBuilder> 
        getRequestPublicKeyMsgFieldBuilder() {
      if (requestPublicKeyMsgBuilder_ == null) {
        if (!(messageTypeCase_ == 7)) {
          messageType_ = net.rptools.maptool.server.proto.RequestPublicKeyMsg.getDefaultInstance();
        }
        requestPublicKeyMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.RequestPublicKeyMsg, net.rptools.maptool.server.proto.RequestPublicKeyMsg.Builder, net.rptools.maptool.server.proto.RequestPublicKeyMsgOrBuilder>(
                (net.rptools.maptool.server.proto.RequestPublicKeyMsg) messageType_,
                getParentForChildren(),
                isClean());
        messageType_ = null;
      }
      messageTypeCase_ = 7;
      onChanged();;
      return requestPublicKeyMsgBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.PublicKeyUploadMsg, net.rptools.maptool.server.proto.PublicKeyUploadMsg.Builder, net.rptools.maptool.server.proto.PublicKeyUploadMsgOrBuilder> publicKeyUploadMsgBuilder_;
    /**
     * <pre>
     * Client initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyUploadMsg public_key_upload_msg = 8;</code>
     * @return Whether the publicKeyUploadMsg field is set.
     */
    @java.lang.Override
    public boolean hasPublicKeyUploadMsg() {
      return messageTypeCase_ == 8;
    }
    /**
     * <pre>
     * Client initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyUploadMsg public_key_upload_msg = 8;</code>
     * @return The publicKeyUploadMsg.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.PublicKeyUploadMsg getPublicKeyUploadMsg() {
      if (publicKeyUploadMsgBuilder_ == null) {
        if (messageTypeCase_ == 8) {
          return (net.rptools.maptool.server.proto.PublicKeyUploadMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.PublicKeyUploadMsg.getDefaultInstance();
      } else {
        if (messageTypeCase_ == 8) {
          return publicKeyUploadMsgBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.PublicKeyUploadMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Client initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyUploadMsg public_key_upload_msg = 8;</code>
     */
    public Builder setPublicKeyUploadMsg(net.rptools.maptool.server.proto.PublicKeyUploadMsg value) {
      if (publicKeyUploadMsgBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        messageType_ = value;
        onChanged();
      } else {
        publicKeyUploadMsgBuilder_.setMessage(value);
      }
      messageTypeCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * Client initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyUploadMsg public_key_upload_msg = 8;</code>
     */
    public Builder setPublicKeyUploadMsg(
        net.rptools.maptool.server.proto.PublicKeyUploadMsg.Builder builderForValue) {
      if (publicKeyUploadMsgBuilder_ == null) {
        messageType_ = builderForValue.build();
        onChanged();
      } else {
        publicKeyUploadMsgBuilder_.setMessage(builderForValue.build());
      }
      messageTypeCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * Client initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyUploadMsg public_key_upload_msg = 8;</code>
     */
    public Builder mergePublicKeyUploadMsg(net.rptools.maptool.server.proto.PublicKeyUploadMsg value) {
      if (publicKeyUploadMsgBuilder_ == null) {
        if (messageTypeCase_ == 8 &&
            messageType_ != net.rptools.maptool.server.proto.PublicKeyUploadMsg.getDefaultInstance()) {
          messageType_ = net.rptools.maptool.server.proto.PublicKeyUploadMsg.newBuilder((net.rptools.maptool.server.proto.PublicKeyUploadMsg) messageType_)
              .mergeFrom(value).buildPartial();
        } else {
          messageType_ = value;
        }
        onChanged();
      } else {
        if (messageTypeCase_ == 8) {
          publicKeyUploadMsgBuilder_.mergeFrom(value);
        } else {
          publicKeyUploadMsgBuilder_.setMessage(value);
        }
      }
      messageTypeCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * Client initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyUploadMsg public_key_upload_msg = 8;</code>
     */
    public Builder clearPublicKeyUploadMsg() {
      if (publicKeyUploadMsgBuilder_ == null) {
        if (messageTypeCase_ == 8) {
          messageTypeCase_ = 0;
          messageType_ = null;
          onChanged();
        }
      } else {
        if (messageTypeCase_ == 8) {
          messageTypeCase_ = 0;
          messageType_ = null;
        }
        publicKeyUploadMsgBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Client initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyUploadMsg public_key_upload_msg = 8;</code>
     */
    public net.rptools.maptool.server.proto.PublicKeyUploadMsg.Builder getPublicKeyUploadMsgBuilder() {
      return getPublicKeyUploadMsgFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Client initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyUploadMsg public_key_upload_msg = 8;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.PublicKeyUploadMsgOrBuilder getPublicKeyUploadMsgOrBuilder() {
      if ((messageTypeCase_ == 8) && (publicKeyUploadMsgBuilder_ != null)) {
        return publicKeyUploadMsgBuilder_.getMessageOrBuilder();
      } else {
        if (messageTypeCase_ == 8) {
          return (net.rptools.maptool.server.proto.PublicKeyUploadMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.PublicKeyUploadMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Client initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyUploadMsg public_key_upload_msg = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.PublicKeyUploadMsg, net.rptools.maptool.server.proto.PublicKeyUploadMsg.Builder, net.rptools.maptool.server.proto.PublicKeyUploadMsgOrBuilder> 
        getPublicKeyUploadMsgFieldBuilder() {
      if (publicKeyUploadMsgBuilder_ == null) {
        if (!(messageTypeCase_ == 8)) {
          messageType_ = net.rptools.maptool.server.proto.PublicKeyUploadMsg.getDefaultInstance();
        }
        publicKeyUploadMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.PublicKeyUploadMsg, net.rptools.maptool.server.proto.PublicKeyUploadMsg.Builder, net.rptools.maptool.server.proto.PublicKeyUploadMsgOrBuilder>(
                (net.rptools.maptool.server.proto.PublicKeyUploadMsg) messageType_,
                getParentForChildren(),
                isClean());
        messageType_ = null;
      }
      messageTypeCase_ = 8;
      onChanged();;
      return publicKeyUploadMsgBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.PublicKeyAddedMsg, net.rptools.maptool.server.proto.PublicKeyAddedMsg.Builder, net.rptools.maptool.server.proto.PublicKeyAddedMsgOrBuilder> publicKeyAddedMsgBuilder_;
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyAddedMsg public_key_added_msg = 9;</code>
     * @return Whether the publicKeyAddedMsg field is set.
     */
    @java.lang.Override
    public boolean hasPublicKeyAddedMsg() {
      return messageTypeCase_ == 9;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyAddedMsg public_key_added_msg = 9;</code>
     * @return The publicKeyAddedMsg.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.PublicKeyAddedMsg getPublicKeyAddedMsg() {
      if (publicKeyAddedMsgBuilder_ == null) {
        if (messageTypeCase_ == 9) {
          return (net.rptools.maptool.server.proto.PublicKeyAddedMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.PublicKeyAddedMsg.getDefaultInstance();
      } else {
        if (messageTypeCase_ == 9) {
          return publicKeyAddedMsgBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.PublicKeyAddedMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyAddedMsg public_key_added_msg = 9;</code>
     */
    public Builder setPublicKeyAddedMsg(net.rptools.maptool.server.proto.PublicKeyAddedMsg value) {
      if (publicKeyAddedMsgBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        messageType_ = value;
        onChanged();
      } else {
        publicKeyAddedMsgBuilder_.setMessage(value);
      }
      messageTypeCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyAddedMsg public_key_added_msg = 9;</code>
     */
    public Builder setPublicKeyAddedMsg(
        net.rptools.maptool.server.proto.PublicKeyAddedMsg.Builder builderForValue) {
      if (publicKeyAddedMsgBuilder_ == null) {
        messageType_ = builderForValue.build();
        onChanged();
      } else {
        publicKeyAddedMsgBuilder_.setMessage(builderForValue.build());
      }
      messageTypeCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyAddedMsg public_key_added_msg = 9;</code>
     */
    public Builder mergePublicKeyAddedMsg(net.rptools.maptool.server.proto.PublicKeyAddedMsg value) {
      if (publicKeyAddedMsgBuilder_ == null) {
        if (messageTypeCase_ == 9 &&
            messageType_ != net.rptools.maptool.server.proto.PublicKeyAddedMsg.getDefaultInstance()) {
          messageType_ = net.rptools.maptool.server.proto.PublicKeyAddedMsg.newBuilder((net.rptools.maptool.server.proto.PublicKeyAddedMsg) messageType_)
              .mergeFrom(value).buildPartial();
        } else {
          messageType_ = value;
        }
        onChanged();
      } else {
        if (messageTypeCase_ == 9) {
          publicKeyAddedMsgBuilder_.mergeFrom(value);
        } else {
          publicKeyAddedMsgBuilder_.setMessage(value);
        }
      }
      messageTypeCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyAddedMsg public_key_added_msg = 9;</code>
     */
    public Builder clearPublicKeyAddedMsg() {
      if (publicKeyAddedMsgBuilder_ == null) {
        if (messageTypeCase_ == 9) {
          messageTypeCase_ = 0;
          messageType_ = null;
          onChanged();
        }
      } else {
        if (messageTypeCase_ == 9) {
          messageTypeCase_ = 0;
          messageType_ = null;
        }
        publicKeyAddedMsgBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyAddedMsg public_key_added_msg = 9;</code>
     */
    public net.rptools.maptool.server.proto.PublicKeyAddedMsg.Builder getPublicKeyAddedMsgBuilder() {
      return getPublicKeyAddedMsgFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyAddedMsg public_key_added_msg = 9;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.PublicKeyAddedMsgOrBuilder getPublicKeyAddedMsgOrBuilder() {
      if ((messageTypeCase_ == 9) && (publicKeyAddedMsgBuilder_ != null)) {
        return publicKeyAddedMsgBuilder_.getMessageOrBuilder();
      } else {
        if (messageTypeCase_ == 9) {
          return (net.rptools.maptool.server.proto.PublicKeyAddedMsg) messageType_;
        }
        return net.rptools.maptool.server.proto.PublicKeyAddedMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Server initiated
     * </pre>
     *
     * <code>.maptool.PublicKeyAddedMsg public_key_added_msg = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.PublicKeyAddedMsg, net.rptools.maptool.server.proto.PublicKeyAddedMsg.Builder, net.rptools.maptool.server.proto.PublicKeyAddedMsgOrBuilder> 
        getPublicKeyAddedMsgFieldBuilder() {
      if (publicKeyAddedMsgBuilder_ == null) {
        if (!(messageTypeCase_ == 9)) {
          messageType_ = net.rptools.maptool.server.proto.PublicKeyAddedMsg.getDefaultInstance();
        }
        publicKeyAddedMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.PublicKeyAddedMsg, net.rptools.maptool.server.proto.PublicKeyAddedMsg.Builder, net.rptools.maptool.server.proto.PublicKeyAddedMsgOrBuilder>(
                (net.rptools.maptool.server.proto.PublicKeyAddedMsg) messageType_,
                getParentForChildren(),
                isClean());
        messageType_ = null;
      }
      messageTypeCase_ = 9;
      onChanged();;
      return publicKeyAddedMsgBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maptool.HandshakeMsg)
  }

  // @@protoc_insertion_point(class_scope:maptool.HandshakeMsg)
  private static final net.rptools.maptool.server.proto.HandshakeMsg DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new net.rptools.maptool.server.proto.HandshakeMsg();
  }

  public static net.rptools.maptool.server.proto.HandshakeMsg getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HandshakeMsg>
      PARSER = new com.google.protobuf.AbstractParser<HandshakeMsg>() {
    @java.lang.Override
    public HandshakeMsg parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new HandshakeMsg(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<HandshakeMsg> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HandshakeMsg> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public net.rptools.maptool.server.proto.HandshakeMsg getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

