// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_transfer_objects.proto

package net.rptools.maptool.server.proto;

public interface InitiativeListDtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:maptool.InitiativeListDto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
   */
  java.util.List<net.rptools.maptool.server.proto.TokenInitiativeDto> 
      getTokensList();
  /**
   * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
   */
  net.rptools.maptool.server.proto.TokenInitiativeDto getTokens(int index);
  /**
   * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
   */
  int getTokensCount();
  /**
   * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
   */
  java.util.List<? extends net.rptools.maptool.server.proto.TokenInitiativeDtoOrBuilder> 
      getTokensOrBuilderList();
  /**
   * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
   */
  net.rptools.maptool.server.proto.TokenInitiativeDtoOrBuilder getTokensOrBuilder(
      int index);

  /**
   * <code>int32 current = 2;</code>
   * @return The current.
   */
  int getCurrent();

  /**
   * <code>int32 round = 3;</code>
   * @return The round.
   */
  int getRound();

  /**
   * <code>string zone_id = 4;</code>
   * @return The zoneId.
   */
  java.lang.String getZoneId();
  /**
   * <code>string zone_id = 4;</code>
   * @return The bytes for zoneId.
   */
  com.google.protobuf.ByteString
      getZoneIdBytes();

  /**
   * <code>bool hide_npc = 5;</code>
   * @return The hideNpc.
   */
  boolean getHideNpc();
}
