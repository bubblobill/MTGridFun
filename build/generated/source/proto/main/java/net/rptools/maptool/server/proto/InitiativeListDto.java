// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_transfer_objects.proto

package net.rptools.maptool.server.proto;

/**
 * Protobuf type {@code maptool.InitiativeListDto}
 */
public final class InitiativeListDto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maptool.InitiativeListDto)
    InitiativeListDtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use InitiativeListDto.newBuilder() to construct.
  private InitiativeListDto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private InitiativeListDto() {
    tokens_ = java.util.Collections.emptyList();
    zoneId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new InitiativeListDto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private InitiativeListDto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              tokens_ = new java.util.ArrayList<net.rptools.maptool.server.proto.TokenInitiativeDto>();
              mutable_bitField0_ |= 0x00000001;
            }
            tokens_.add(
                input.readMessage(net.rptools.maptool.server.proto.TokenInitiativeDto.parser(), extensionRegistry));
            break;
          }
          case 16: {

            current_ = input.readInt32();
            break;
          }
          case 24: {

            round_ = input.readInt32();
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            zoneId_ = s;
            break;
          }
          case 40: {

            hideNpc_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        tokens_ = java.util.Collections.unmodifiableList(tokens_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_InitiativeListDto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_InitiativeListDto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            net.rptools.maptool.server.proto.InitiativeListDto.class, net.rptools.maptool.server.proto.InitiativeListDto.Builder.class);
  }

  public static final int TOKENS_FIELD_NUMBER = 1;
  private java.util.List<net.rptools.maptool.server.proto.TokenInitiativeDto> tokens_;
  /**
   * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.TokenInitiativeDto> getTokensList() {
    return tokens_;
  }
  /**
   * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.TokenInitiativeDtoOrBuilder> 
      getTokensOrBuilderList() {
    return tokens_;
  }
  /**
   * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
   */
  @java.lang.Override
  public int getTokensCount() {
    return tokens_.size();
  }
  /**
   * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.TokenInitiativeDto getTokens(int index) {
    return tokens_.get(index);
  }
  /**
   * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.TokenInitiativeDtoOrBuilder getTokensOrBuilder(
      int index) {
    return tokens_.get(index);
  }

  public static final int CURRENT_FIELD_NUMBER = 2;
  private int current_;
  /**
   * <code>int32 current = 2;</code>
   * @return The current.
   */
  @java.lang.Override
  public int getCurrent() {
    return current_;
  }

  public static final int ROUND_FIELD_NUMBER = 3;
  private int round_;
  /**
   * <code>int32 round = 3;</code>
   * @return The round.
   */
  @java.lang.Override
  public int getRound() {
    return round_;
  }

  public static final int ZONE_ID_FIELD_NUMBER = 4;
  private volatile java.lang.Object zoneId_;
  /**
   * <code>string zone_id = 4;</code>
   * @return The zoneId.
   */
  @java.lang.Override
  public java.lang.String getZoneId() {
    java.lang.Object ref = zoneId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      zoneId_ = s;
      return s;
    }
  }
  /**
   * <code>string zone_id = 4;</code>
   * @return The bytes for zoneId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getZoneIdBytes() {
    java.lang.Object ref = zoneId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      zoneId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HIDE_NPC_FIELD_NUMBER = 5;
  private boolean hideNpc_;
  /**
   * <code>bool hide_npc = 5;</code>
   * @return The hideNpc.
   */
  @java.lang.Override
  public boolean getHideNpc() {
    return hideNpc_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < tokens_.size(); i++) {
      output.writeMessage(1, tokens_.get(i));
    }
    if (current_ != 0) {
      output.writeInt32(2, current_);
    }
    if (round_ != 0) {
      output.writeInt32(3, round_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(zoneId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, zoneId_);
    }
    if (hideNpc_ != false) {
      output.writeBool(5, hideNpc_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < tokens_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, tokens_.get(i));
    }
    if (current_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, current_);
    }
    if (round_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, round_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(zoneId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, zoneId_);
    }
    if (hideNpc_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, hideNpc_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof net.rptools.maptool.server.proto.InitiativeListDto)) {
      return super.equals(obj);
    }
    net.rptools.maptool.server.proto.InitiativeListDto other = (net.rptools.maptool.server.proto.InitiativeListDto) obj;

    if (!getTokensList()
        .equals(other.getTokensList())) return false;
    if (getCurrent()
        != other.getCurrent()) return false;
    if (getRound()
        != other.getRound()) return false;
    if (!getZoneId()
        .equals(other.getZoneId())) return false;
    if (getHideNpc()
        != other.getHideNpc()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getTokensCount() > 0) {
      hash = (37 * hash) + TOKENS_FIELD_NUMBER;
      hash = (53 * hash) + getTokensList().hashCode();
    }
    hash = (37 * hash) + CURRENT_FIELD_NUMBER;
    hash = (53 * hash) + getCurrent();
    hash = (37 * hash) + ROUND_FIELD_NUMBER;
    hash = (53 * hash) + getRound();
    hash = (37 * hash) + ZONE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getZoneId().hashCode();
    hash = (37 * hash) + HIDE_NPC_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getHideNpc());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static net.rptools.maptool.server.proto.InitiativeListDto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.InitiativeListDto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.InitiativeListDto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.InitiativeListDto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.InitiativeListDto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.InitiativeListDto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.InitiativeListDto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.InitiativeListDto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.InitiativeListDto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.InitiativeListDto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.InitiativeListDto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.InitiativeListDto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(net.rptools.maptool.server.proto.InitiativeListDto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code maptool.InitiativeListDto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maptool.InitiativeListDto)
      net.rptools.maptool.server.proto.InitiativeListDtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_InitiativeListDto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_InitiativeListDto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.rptools.maptool.server.proto.InitiativeListDto.class, net.rptools.maptool.server.proto.InitiativeListDto.Builder.class);
    }

    // Construct using net.rptools.maptool.server.proto.InitiativeListDto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTokensFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (tokensBuilder_ == null) {
        tokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        tokensBuilder_.clear();
      }
      current_ = 0;

      round_ = 0;

      zoneId_ = "";

      hideNpc_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_InitiativeListDto_descriptor;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.InitiativeListDto getDefaultInstanceForType() {
      return net.rptools.maptool.server.proto.InitiativeListDto.getDefaultInstance();
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.InitiativeListDto build() {
      net.rptools.maptool.server.proto.InitiativeListDto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.InitiativeListDto buildPartial() {
      net.rptools.maptool.server.proto.InitiativeListDto result = new net.rptools.maptool.server.proto.InitiativeListDto(this);
      int from_bitField0_ = bitField0_;
      if (tokensBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          tokens_ = java.util.Collections.unmodifiableList(tokens_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tokens_ = tokens_;
      } else {
        result.tokens_ = tokensBuilder_.build();
      }
      result.current_ = current_;
      result.round_ = round_;
      result.zoneId_ = zoneId_;
      result.hideNpc_ = hideNpc_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof net.rptools.maptool.server.proto.InitiativeListDto) {
        return mergeFrom((net.rptools.maptool.server.proto.InitiativeListDto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(net.rptools.maptool.server.proto.InitiativeListDto other) {
      if (other == net.rptools.maptool.server.proto.InitiativeListDto.getDefaultInstance()) return this;
      if (tokensBuilder_ == null) {
        if (!other.tokens_.isEmpty()) {
          if (tokens_.isEmpty()) {
            tokens_ = other.tokens_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTokensIsMutable();
            tokens_.addAll(other.tokens_);
          }
          onChanged();
        }
      } else {
        if (!other.tokens_.isEmpty()) {
          if (tokensBuilder_.isEmpty()) {
            tokensBuilder_.dispose();
            tokensBuilder_ = null;
            tokens_ = other.tokens_;
            bitField0_ = (bitField0_ & ~0x00000001);
            tokensBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTokensFieldBuilder() : null;
          } else {
            tokensBuilder_.addAllMessages(other.tokens_);
          }
        }
      }
      if (other.getCurrent() != 0) {
        setCurrent(other.getCurrent());
      }
      if (other.getRound() != 0) {
        setRound(other.getRound());
      }
      if (!other.getZoneId().isEmpty()) {
        zoneId_ = other.zoneId_;
        onChanged();
      }
      if (other.getHideNpc() != false) {
        setHideNpc(other.getHideNpc());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      net.rptools.maptool.server.proto.InitiativeListDto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (net.rptools.maptool.server.proto.InitiativeListDto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<net.rptools.maptool.server.proto.TokenInitiativeDto> tokens_ =
      java.util.Collections.emptyList();
    private void ensureTokensIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        tokens_ = new java.util.ArrayList<net.rptools.maptool.server.proto.TokenInitiativeDto>(tokens_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.TokenInitiativeDto, net.rptools.maptool.server.proto.TokenInitiativeDto.Builder, net.rptools.maptool.server.proto.TokenInitiativeDtoOrBuilder> tokensBuilder_;

    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.TokenInitiativeDto> getTokensList() {
      if (tokensBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tokens_);
      } else {
        return tokensBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public int getTokensCount() {
      if (tokensBuilder_ == null) {
        return tokens_.size();
      } else {
        return tokensBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public net.rptools.maptool.server.proto.TokenInitiativeDto getTokens(int index) {
      if (tokensBuilder_ == null) {
        return tokens_.get(index);
      } else {
        return tokensBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public Builder setTokens(
        int index, net.rptools.maptool.server.proto.TokenInitiativeDto value) {
      if (tokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokensIsMutable();
        tokens_.set(index, value);
        onChanged();
      } else {
        tokensBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public Builder setTokens(
        int index, net.rptools.maptool.server.proto.TokenInitiativeDto.Builder builderForValue) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        tokens_.set(index, builderForValue.build());
        onChanged();
      } else {
        tokensBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public Builder addTokens(net.rptools.maptool.server.proto.TokenInitiativeDto value) {
      if (tokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokensIsMutable();
        tokens_.add(value);
        onChanged();
      } else {
        tokensBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public Builder addTokens(
        int index, net.rptools.maptool.server.proto.TokenInitiativeDto value) {
      if (tokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTokensIsMutable();
        tokens_.add(index, value);
        onChanged();
      } else {
        tokensBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public Builder addTokens(
        net.rptools.maptool.server.proto.TokenInitiativeDto.Builder builderForValue) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        tokens_.add(builderForValue.build());
        onChanged();
      } else {
        tokensBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public Builder addTokens(
        int index, net.rptools.maptool.server.proto.TokenInitiativeDto.Builder builderForValue) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        tokens_.add(index, builderForValue.build());
        onChanged();
      } else {
        tokensBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public Builder addAllTokens(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.TokenInitiativeDto> values) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tokens_);
        onChanged();
      } else {
        tokensBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public Builder clearTokens() {
      if (tokensBuilder_ == null) {
        tokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        tokensBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public Builder removeTokens(int index) {
      if (tokensBuilder_ == null) {
        ensureTokensIsMutable();
        tokens_.remove(index);
        onChanged();
      } else {
        tokensBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public net.rptools.maptool.server.proto.TokenInitiativeDto.Builder getTokensBuilder(
        int index) {
      return getTokensFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public net.rptools.maptool.server.proto.TokenInitiativeDtoOrBuilder getTokensOrBuilder(
        int index) {
      if (tokensBuilder_ == null) {
        return tokens_.get(index);  } else {
        return tokensBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.TokenInitiativeDtoOrBuilder> 
         getTokensOrBuilderList() {
      if (tokensBuilder_ != null) {
        return tokensBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tokens_);
      }
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public net.rptools.maptool.server.proto.TokenInitiativeDto.Builder addTokensBuilder() {
      return getTokensFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.TokenInitiativeDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public net.rptools.maptool.server.proto.TokenInitiativeDto.Builder addTokensBuilder(
        int index) {
      return getTokensFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.TokenInitiativeDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.TokenInitiativeDto tokens = 1;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.TokenInitiativeDto.Builder> 
         getTokensBuilderList() {
      return getTokensFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.TokenInitiativeDto, net.rptools.maptool.server.proto.TokenInitiativeDto.Builder, net.rptools.maptool.server.proto.TokenInitiativeDtoOrBuilder> 
        getTokensFieldBuilder() {
      if (tokensBuilder_ == null) {
        tokensBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.TokenInitiativeDto, net.rptools.maptool.server.proto.TokenInitiativeDto.Builder, net.rptools.maptool.server.proto.TokenInitiativeDtoOrBuilder>(
                tokens_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        tokens_ = null;
      }
      return tokensBuilder_;
    }

    private int current_ ;
    /**
     * <code>int32 current = 2;</code>
     * @return The current.
     */
    @java.lang.Override
    public int getCurrent() {
      return current_;
    }
    /**
     * <code>int32 current = 2;</code>
     * @param value The current to set.
     * @return This builder for chaining.
     */
    public Builder setCurrent(int value) {
      
      current_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 current = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCurrent() {
      
      current_ = 0;
      onChanged();
      return this;
    }

    private int round_ ;
    /**
     * <code>int32 round = 3;</code>
     * @return The round.
     */
    @java.lang.Override
    public int getRound() {
      return round_;
    }
    /**
     * <code>int32 round = 3;</code>
     * @param value The round to set.
     * @return This builder for chaining.
     */
    public Builder setRound(int value) {
      
      round_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 round = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRound() {
      
      round_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object zoneId_ = "";
    /**
     * <code>string zone_id = 4;</code>
     * @return The zoneId.
     */
    public java.lang.String getZoneId() {
      java.lang.Object ref = zoneId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        zoneId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string zone_id = 4;</code>
     * @return The bytes for zoneId.
     */
    public com.google.protobuf.ByteString
        getZoneIdBytes() {
      java.lang.Object ref = zoneId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        zoneId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string zone_id = 4;</code>
     * @param value The zoneId to set.
     * @return This builder for chaining.
     */
    public Builder setZoneId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      zoneId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string zone_id = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearZoneId() {
      
      zoneId_ = getDefaultInstance().getZoneId();
      onChanged();
      return this;
    }
    /**
     * <code>string zone_id = 4;</code>
     * @param value The bytes for zoneId to set.
     * @return This builder for chaining.
     */
    public Builder setZoneIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      zoneId_ = value;
      onChanged();
      return this;
    }

    private boolean hideNpc_ ;
    /**
     * <code>bool hide_npc = 5;</code>
     * @return The hideNpc.
     */
    @java.lang.Override
    public boolean getHideNpc() {
      return hideNpc_;
    }
    /**
     * <code>bool hide_npc = 5;</code>
     * @param value The hideNpc to set.
     * @return This builder for chaining.
     */
    public Builder setHideNpc(boolean value) {
      
      hideNpc_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool hide_npc = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearHideNpc() {
      
      hideNpc_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maptool.InitiativeListDto)
  }

  // @@protoc_insertion_point(class_scope:maptool.InitiativeListDto)
  private static final net.rptools.maptool.server.proto.InitiativeListDto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new net.rptools.maptool.server.proto.InitiativeListDto();
  }

  public static net.rptools.maptool.server.proto.InitiativeListDto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<InitiativeListDto>
      PARSER = new com.google.protobuf.AbstractParser<InitiativeListDto>() {
    @java.lang.Override
    public InitiativeListDto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new InitiativeListDto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<InitiativeListDto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<InitiativeListDto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public net.rptools.maptool.server.proto.InitiativeListDto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

