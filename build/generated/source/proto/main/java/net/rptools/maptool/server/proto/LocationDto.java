// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_transfer_objects.proto

package net.rptools.maptool.server.proto;

/**
 * Protobuf type {@code maptool.LocationDto}
 */
public final class LocationDto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maptool.LocationDto)
    LocationDtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LocationDto.newBuilder() to construct.
  private LocationDto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LocationDto() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LocationDto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private LocationDto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            net.rptools.maptool.server.proto.LocalLocationDto.Builder subBuilder = null;
            if (locationTypCase_ == 1) {
              subBuilder = ((net.rptools.maptool.server.proto.LocalLocationDto) locationTyp_).toBuilder();
            }
            locationTyp_ =
                input.readMessage(net.rptools.maptool.server.proto.LocalLocationDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.LocalLocationDto) locationTyp_);
              locationTyp_ = subBuilder.buildPartial();
            }
            locationTypCase_ = 1;
            break;
          }
          case 18: {
            net.rptools.maptool.server.proto.FtpLocationDto.Builder subBuilder = null;
            if (locationTypCase_ == 2) {
              subBuilder = ((net.rptools.maptool.server.proto.FtpLocationDto) locationTyp_).toBuilder();
            }
            locationTyp_ =
                input.readMessage(net.rptools.maptool.server.proto.FtpLocationDto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((net.rptools.maptool.server.proto.FtpLocationDto) locationTyp_);
              locationTyp_ = subBuilder.buildPartial();
            }
            locationTypCase_ = 2;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_LocationDto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_LocationDto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            net.rptools.maptool.server.proto.LocationDto.class, net.rptools.maptool.server.proto.LocationDto.Builder.class);
  }

  private int locationTypCase_ = 0;
  private java.lang.Object locationTyp_;
  public enum LocationTypCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    LOCAL_LOCATION(1),
    FTP_LOCATION(2),
    LOCATIONTYP_NOT_SET(0);
    private final int value;
    private LocationTypCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LocationTypCase valueOf(int value) {
      return forNumber(value);
    }

    public static LocationTypCase forNumber(int value) {
      switch (value) {
        case 1: return LOCAL_LOCATION;
        case 2: return FTP_LOCATION;
        case 0: return LOCATIONTYP_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public LocationTypCase
  getLocationTypCase() {
    return LocationTypCase.forNumber(
        locationTypCase_);
  }

  public static final int LOCAL_LOCATION_FIELD_NUMBER = 1;
  /**
   * <code>.maptool.LocalLocationDto local_location = 1;</code>
   * @return Whether the localLocation field is set.
   */
  @java.lang.Override
  public boolean hasLocalLocation() {
    return locationTypCase_ == 1;
  }
  /**
   * <code>.maptool.LocalLocationDto local_location = 1;</code>
   * @return The localLocation.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.LocalLocationDto getLocalLocation() {
    if (locationTypCase_ == 1) {
       return (net.rptools.maptool.server.proto.LocalLocationDto) locationTyp_;
    }
    return net.rptools.maptool.server.proto.LocalLocationDto.getDefaultInstance();
  }
  /**
   * <code>.maptool.LocalLocationDto local_location = 1;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.LocalLocationDtoOrBuilder getLocalLocationOrBuilder() {
    if (locationTypCase_ == 1) {
       return (net.rptools.maptool.server.proto.LocalLocationDto) locationTyp_;
    }
    return net.rptools.maptool.server.proto.LocalLocationDto.getDefaultInstance();
  }

  public static final int FTP_LOCATION_FIELD_NUMBER = 2;
  /**
   * <code>.maptool.FtpLocationDto ftp_location = 2;</code>
   * @return Whether the ftpLocation field is set.
   */
  @java.lang.Override
  public boolean hasFtpLocation() {
    return locationTypCase_ == 2;
  }
  /**
   * <code>.maptool.FtpLocationDto ftp_location = 2;</code>
   * @return The ftpLocation.
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.FtpLocationDto getFtpLocation() {
    if (locationTypCase_ == 2) {
       return (net.rptools.maptool.server.proto.FtpLocationDto) locationTyp_;
    }
    return net.rptools.maptool.server.proto.FtpLocationDto.getDefaultInstance();
  }
  /**
   * <code>.maptool.FtpLocationDto ftp_location = 2;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.FtpLocationDtoOrBuilder getFtpLocationOrBuilder() {
    if (locationTypCase_ == 2) {
       return (net.rptools.maptool.server.proto.FtpLocationDto) locationTyp_;
    }
    return net.rptools.maptool.server.proto.FtpLocationDto.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (locationTypCase_ == 1) {
      output.writeMessage(1, (net.rptools.maptool.server.proto.LocalLocationDto) locationTyp_);
    }
    if (locationTypCase_ == 2) {
      output.writeMessage(2, (net.rptools.maptool.server.proto.FtpLocationDto) locationTyp_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (locationTypCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (net.rptools.maptool.server.proto.LocalLocationDto) locationTyp_);
    }
    if (locationTypCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (net.rptools.maptool.server.proto.FtpLocationDto) locationTyp_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof net.rptools.maptool.server.proto.LocationDto)) {
      return super.equals(obj);
    }
    net.rptools.maptool.server.proto.LocationDto other = (net.rptools.maptool.server.proto.LocationDto) obj;

    if (!getLocationTypCase().equals(other.getLocationTypCase())) return false;
    switch (locationTypCase_) {
      case 1:
        if (!getLocalLocation()
            .equals(other.getLocalLocation())) return false;
        break;
      case 2:
        if (!getFtpLocation()
            .equals(other.getFtpLocation())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (locationTypCase_) {
      case 1:
        hash = (37 * hash) + LOCAL_LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getLocalLocation().hashCode();
        break;
      case 2:
        hash = (37 * hash) + FTP_LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getFtpLocation().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static net.rptools.maptool.server.proto.LocationDto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.LocationDto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.LocationDto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.LocationDto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.LocationDto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.LocationDto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.LocationDto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.LocationDto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.LocationDto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.LocationDto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.LocationDto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.LocationDto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(net.rptools.maptool.server.proto.LocationDto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code maptool.LocationDto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maptool.LocationDto)
      net.rptools.maptool.server.proto.LocationDtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_LocationDto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_LocationDto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.rptools.maptool.server.proto.LocationDto.class, net.rptools.maptool.server.proto.LocationDto.Builder.class);
    }

    // Construct using net.rptools.maptool.server.proto.LocationDto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      locationTypCase_ = 0;
      locationTyp_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_LocationDto_descriptor;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.LocationDto getDefaultInstanceForType() {
      return net.rptools.maptool.server.proto.LocationDto.getDefaultInstance();
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.LocationDto build() {
      net.rptools.maptool.server.proto.LocationDto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.LocationDto buildPartial() {
      net.rptools.maptool.server.proto.LocationDto result = new net.rptools.maptool.server.proto.LocationDto(this);
      if (locationTypCase_ == 1) {
        if (localLocationBuilder_ == null) {
          result.locationTyp_ = locationTyp_;
        } else {
          result.locationTyp_ = localLocationBuilder_.build();
        }
      }
      if (locationTypCase_ == 2) {
        if (ftpLocationBuilder_ == null) {
          result.locationTyp_ = locationTyp_;
        } else {
          result.locationTyp_ = ftpLocationBuilder_.build();
        }
      }
      result.locationTypCase_ = locationTypCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof net.rptools.maptool.server.proto.LocationDto) {
        return mergeFrom((net.rptools.maptool.server.proto.LocationDto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(net.rptools.maptool.server.proto.LocationDto other) {
      if (other == net.rptools.maptool.server.proto.LocationDto.getDefaultInstance()) return this;
      switch (other.getLocationTypCase()) {
        case LOCAL_LOCATION: {
          mergeLocalLocation(other.getLocalLocation());
          break;
        }
        case FTP_LOCATION: {
          mergeFtpLocation(other.getFtpLocation());
          break;
        }
        case LOCATIONTYP_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      net.rptools.maptool.server.proto.LocationDto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (net.rptools.maptool.server.proto.LocationDto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int locationTypCase_ = 0;
    private java.lang.Object locationTyp_;
    public LocationTypCase
        getLocationTypCase() {
      return LocationTypCase.forNumber(
          locationTypCase_);
    }

    public Builder clearLocationTyp() {
      locationTypCase_ = 0;
      locationTyp_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.LocalLocationDto, net.rptools.maptool.server.proto.LocalLocationDto.Builder, net.rptools.maptool.server.proto.LocalLocationDtoOrBuilder> localLocationBuilder_;
    /**
     * <code>.maptool.LocalLocationDto local_location = 1;</code>
     * @return Whether the localLocation field is set.
     */
    @java.lang.Override
    public boolean hasLocalLocation() {
      return locationTypCase_ == 1;
    }
    /**
     * <code>.maptool.LocalLocationDto local_location = 1;</code>
     * @return The localLocation.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.LocalLocationDto getLocalLocation() {
      if (localLocationBuilder_ == null) {
        if (locationTypCase_ == 1) {
          return (net.rptools.maptool.server.proto.LocalLocationDto) locationTyp_;
        }
        return net.rptools.maptool.server.proto.LocalLocationDto.getDefaultInstance();
      } else {
        if (locationTypCase_ == 1) {
          return localLocationBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.LocalLocationDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.LocalLocationDto local_location = 1;</code>
     */
    public Builder setLocalLocation(net.rptools.maptool.server.proto.LocalLocationDto value) {
      if (localLocationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        locationTyp_ = value;
        onChanged();
      } else {
        localLocationBuilder_.setMessage(value);
      }
      locationTypCase_ = 1;
      return this;
    }
    /**
     * <code>.maptool.LocalLocationDto local_location = 1;</code>
     */
    public Builder setLocalLocation(
        net.rptools.maptool.server.proto.LocalLocationDto.Builder builderForValue) {
      if (localLocationBuilder_ == null) {
        locationTyp_ = builderForValue.build();
        onChanged();
      } else {
        localLocationBuilder_.setMessage(builderForValue.build());
      }
      locationTypCase_ = 1;
      return this;
    }
    /**
     * <code>.maptool.LocalLocationDto local_location = 1;</code>
     */
    public Builder mergeLocalLocation(net.rptools.maptool.server.proto.LocalLocationDto value) {
      if (localLocationBuilder_ == null) {
        if (locationTypCase_ == 1 &&
            locationTyp_ != net.rptools.maptool.server.proto.LocalLocationDto.getDefaultInstance()) {
          locationTyp_ = net.rptools.maptool.server.proto.LocalLocationDto.newBuilder((net.rptools.maptool.server.proto.LocalLocationDto) locationTyp_)
              .mergeFrom(value).buildPartial();
        } else {
          locationTyp_ = value;
        }
        onChanged();
      } else {
        if (locationTypCase_ == 1) {
          localLocationBuilder_.mergeFrom(value);
        } else {
          localLocationBuilder_.setMessage(value);
        }
      }
      locationTypCase_ = 1;
      return this;
    }
    /**
     * <code>.maptool.LocalLocationDto local_location = 1;</code>
     */
    public Builder clearLocalLocation() {
      if (localLocationBuilder_ == null) {
        if (locationTypCase_ == 1) {
          locationTypCase_ = 0;
          locationTyp_ = null;
          onChanged();
        }
      } else {
        if (locationTypCase_ == 1) {
          locationTypCase_ = 0;
          locationTyp_ = null;
        }
        localLocationBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.maptool.LocalLocationDto local_location = 1;</code>
     */
    public net.rptools.maptool.server.proto.LocalLocationDto.Builder getLocalLocationBuilder() {
      return getLocalLocationFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.LocalLocationDto local_location = 1;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.LocalLocationDtoOrBuilder getLocalLocationOrBuilder() {
      if ((locationTypCase_ == 1) && (localLocationBuilder_ != null)) {
        return localLocationBuilder_.getMessageOrBuilder();
      } else {
        if (locationTypCase_ == 1) {
          return (net.rptools.maptool.server.proto.LocalLocationDto) locationTyp_;
        }
        return net.rptools.maptool.server.proto.LocalLocationDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.LocalLocationDto local_location = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.LocalLocationDto, net.rptools.maptool.server.proto.LocalLocationDto.Builder, net.rptools.maptool.server.proto.LocalLocationDtoOrBuilder> 
        getLocalLocationFieldBuilder() {
      if (localLocationBuilder_ == null) {
        if (!(locationTypCase_ == 1)) {
          locationTyp_ = net.rptools.maptool.server.proto.LocalLocationDto.getDefaultInstance();
        }
        localLocationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.LocalLocationDto, net.rptools.maptool.server.proto.LocalLocationDto.Builder, net.rptools.maptool.server.proto.LocalLocationDtoOrBuilder>(
                (net.rptools.maptool.server.proto.LocalLocationDto) locationTyp_,
                getParentForChildren(),
                isClean());
        locationTyp_ = null;
      }
      locationTypCase_ = 1;
      onChanged();;
      return localLocationBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.FtpLocationDto, net.rptools.maptool.server.proto.FtpLocationDto.Builder, net.rptools.maptool.server.proto.FtpLocationDtoOrBuilder> ftpLocationBuilder_;
    /**
     * <code>.maptool.FtpLocationDto ftp_location = 2;</code>
     * @return Whether the ftpLocation field is set.
     */
    @java.lang.Override
    public boolean hasFtpLocation() {
      return locationTypCase_ == 2;
    }
    /**
     * <code>.maptool.FtpLocationDto ftp_location = 2;</code>
     * @return The ftpLocation.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.FtpLocationDto getFtpLocation() {
      if (ftpLocationBuilder_ == null) {
        if (locationTypCase_ == 2) {
          return (net.rptools.maptool.server.proto.FtpLocationDto) locationTyp_;
        }
        return net.rptools.maptool.server.proto.FtpLocationDto.getDefaultInstance();
      } else {
        if (locationTypCase_ == 2) {
          return ftpLocationBuilder_.getMessage();
        }
        return net.rptools.maptool.server.proto.FtpLocationDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.FtpLocationDto ftp_location = 2;</code>
     */
    public Builder setFtpLocation(net.rptools.maptool.server.proto.FtpLocationDto value) {
      if (ftpLocationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        locationTyp_ = value;
        onChanged();
      } else {
        ftpLocationBuilder_.setMessage(value);
      }
      locationTypCase_ = 2;
      return this;
    }
    /**
     * <code>.maptool.FtpLocationDto ftp_location = 2;</code>
     */
    public Builder setFtpLocation(
        net.rptools.maptool.server.proto.FtpLocationDto.Builder builderForValue) {
      if (ftpLocationBuilder_ == null) {
        locationTyp_ = builderForValue.build();
        onChanged();
      } else {
        ftpLocationBuilder_.setMessage(builderForValue.build());
      }
      locationTypCase_ = 2;
      return this;
    }
    /**
     * <code>.maptool.FtpLocationDto ftp_location = 2;</code>
     */
    public Builder mergeFtpLocation(net.rptools.maptool.server.proto.FtpLocationDto value) {
      if (ftpLocationBuilder_ == null) {
        if (locationTypCase_ == 2 &&
            locationTyp_ != net.rptools.maptool.server.proto.FtpLocationDto.getDefaultInstance()) {
          locationTyp_ = net.rptools.maptool.server.proto.FtpLocationDto.newBuilder((net.rptools.maptool.server.proto.FtpLocationDto) locationTyp_)
              .mergeFrom(value).buildPartial();
        } else {
          locationTyp_ = value;
        }
        onChanged();
      } else {
        if (locationTypCase_ == 2) {
          ftpLocationBuilder_.mergeFrom(value);
        } else {
          ftpLocationBuilder_.setMessage(value);
        }
      }
      locationTypCase_ = 2;
      return this;
    }
    /**
     * <code>.maptool.FtpLocationDto ftp_location = 2;</code>
     */
    public Builder clearFtpLocation() {
      if (ftpLocationBuilder_ == null) {
        if (locationTypCase_ == 2) {
          locationTypCase_ = 0;
          locationTyp_ = null;
          onChanged();
        }
      } else {
        if (locationTypCase_ == 2) {
          locationTypCase_ = 0;
          locationTyp_ = null;
        }
        ftpLocationBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.maptool.FtpLocationDto ftp_location = 2;</code>
     */
    public net.rptools.maptool.server.proto.FtpLocationDto.Builder getFtpLocationBuilder() {
      return getFtpLocationFieldBuilder().getBuilder();
    }
    /**
     * <code>.maptool.FtpLocationDto ftp_location = 2;</code>
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.FtpLocationDtoOrBuilder getFtpLocationOrBuilder() {
      if ((locationTypCase_ == 2) && (ftpLocationBuilder_ != null)) {
        return ftpLocationBuilder_.getMessageOrBuilder();
      } else {
        if (locationTypCase_ == 2) {
          return (net.rptools.maptool.server.proto.FtpLocationDto) locationTyp_;
        }
        return net.rptools.maptool.server.proto.FtpLocationDto.getDefaultInstance();
      }
    }
    /**
     * <code>.maptool.FtpLocationDto ftp_location = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        net.rptools.maptool.server.proto.FtpLocationDto, net.rptools.maptool.server.proto.FtpLocationDto.Builder, net.rptools.maptool.server.proto.FtpLocationDtoOrBuilder> 
        getFtpLocationFieldBuilder() {
      if (ftpLocationBuilder_ == null) {
        if (!(locationTypCase_ == 2)) {
          locationTyp_ = net.rptools.maptool.server.proto.FtpLocationDto.getDefaultInstance();
        }
        ftpLocationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            net.rptools.maptool.server.proto.FtpLocationDto, net.rptools.maptool.server.proto.FtpLocationDto.Builder, net.rptools.maptool.server.proto.FtpLocationDtoOrBuilder>(
                (net.rptools.maptool.server.proto.FtpLocationDto) locationTyp_,
                getParentForChildren(),
                isClean());
        locationTyp_ = null;
      }
      locationTypCase_ = 2;
      onChanged();;
      return ftpLocationBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maptool.LocationDto)
  }

  // @@protoc_insertion_point(class_scope:maptool.LocationDto)
  private static final net.rptools.maptool.server.proto.LocationDto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new net.rptools.maptool.server.proto.LocationDto();
  }

  public static net.rptools.maptool.server.proto.LocationDto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LocationDto>
      PARSER = new com.google.protobuf.AbstractParser<LocationDto>() {
    @java.lang.Override
    public LocationDto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new LocationDto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<LocationDto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LocationDto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public net.rptools.maptool.server.proto.LocationDto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

