// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_transfer_objects.proto

package net.rptools.maptool.server.proto;

/**
 * Protobuf type {@code maptool.PathDto}
 */
public final class PathDto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maptool.PathDto)
    PathDtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PathDto.newBuilder() to construct.
  private PathDto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PathDto() {
    pointType_ = 0;
    cells_ = java.util.Collections.emptyList();
    waypoints_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PathDto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PathDto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            pointType_ = rawValue;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              cells_ = new java.util.ArrayList<net.rptools.maptool.server.proto.drawing.IntPointDto>();
              mutable_bitField0_ |= 0x00000001;
            }
            cells_.add(
                input.readMessage(net.rptools.maptool.server.proto.drawing.IntPointDto.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              waypoints_ = new java.util.ArrayList<net.rptools.maptool.server.proto.drawing.IntPointDto>();
              mutable_bitField0_ |= 0x00000002;
            }
            waypoints_.add(
                input.readMessage(net.rptools.maptool.server.proto.drawing.IntPointDto.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        cells_ = java.util.Collections.unmodifiableList(cells_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        waypoints_ = java.util.Collections.unmodifiableList(waypoints_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_PathDto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_PathDto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            net.rptools.maptool.server.proto.PathDto.class, net.rptools.maptool.server.proto.PathDto.Builder.class);
  }

  /**
   * Protobuf enum {@code maptool.PathDto.PointType}
   */
  public enum PointType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CELL_POINT = 0;</code>
     */
    CELL_POINT(0),
    /**
     * <code>ZONE_POINT = 1;</code>
     */
    ZONE_POINT(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CELL_POINT = 0;</code>
     */
    public static final int CELL_POINT_VALUE = 0;
    /**
     * <code>ZONE_POINT = 1;</code>
     */
    public static final int ZONE_POINT_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PointType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PointType forNumber(int value) {
      switch (value) {
        case 0: return CELL_POINT;
        case 1: return ZONE_POINT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PointType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PointType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PointType>() {
            public PointType findValueByNumber(int number) {
              return PointType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.PathDto.getDescriptor().getEnumTypes().get(0);
    }

    private static final PointType[] VALUES = values();

    public static PointType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PointType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maptool.PathDto.PointType)
  }

  public static final int POINT_TYPE_FIELD_NUMBER = 1;
  private int pointType_;
  /**
   * <code>.maptool.PathDto.PointType point_type = 1;</code>
   * @return The enum numeric value on the wire for pointType.
   */
  @java.lang.Override public int getPointTypeValue() {
    return pointType_;
  }
  /**
   * <code>.maptool.PathDto.PointType point_type = 1;</code>
   * @return The pointType.
   */
  @java.lang.Override public net.rptools.maptool.server.proto.PathDto.PointType getPointType() {
    @SuppressWarnings("deprecation")
    net.rptools.maptool.server.proto.PathDto.PointType result = net.rptools.maptool.server.proto.PathDto.PointType.valueOf(pointType_);
    return result == null ? net.rptools.maptool.server.proto.PathDto.PointType.UNRECOGNIZED : result;
  }

  public static final int CELLS_FIELD_NUMBER = 2;
  private java.util.List<net.rptools.maptool.server.proto.drawing.IntPointDto> cells_;
  /**
   * <code>repeated .maptool.IntPointDto cells = 2;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.drawing.IntPointDto> getCellsList() {
    return cells_;
  }
  /**
   * <code>repeated .maptool.IntPointDto cells = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder> 
      getCellsOrBuilderList() {
    return cells_;
  }
  /**
   * <code>repeated .maptool.IntPointDto cells = 2;</code>
   */
  @java.lang.Override
  public int getCellsCount() {
    return cells_.size();
  }
  /**
   * <code>repeated .maptool.IntPointDto cells = 2;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.IntPointDto getCells(int index) {
    return cells_.get(index);
  }
  /**
   * <code>repeated .maptool.IntPointDto cells = 2;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder getCellsOrBuilder(
      int index) {
    return cells_.get(index);
  }

  public static final int WAYPOINTS_FIELD_NUMBER = 3;
  private java.util.List<net.rptools.maptool.server.proto.drawing.IntPointDto> waypoints_;
  /**
   * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
   */
  @java.lang.Override
  public java.util.List<net.rptools.maptool.server.proto.drawing.IntPointDto> getWaypointsList() {
    return waypoints_;
  }
  /**
   * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder> 
      getWaypointsOrBuilderList() {
    return waypoints_;
  }
  /**
   * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
   */
  @java.lang.Override
  public int getWaypointsCount() {
    return waypoints_.size();
  }
  /**
   * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.IntPointDto getWaypoints(int index) {
    return waypoints_.get(index);
  }
  /**
   * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
   */
  @java.lang.Override
  public net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder getWaypointsOrBuilder(
      int index) {
    return waypoints_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (pointType_ != net.rptools.maptool.server.proto.PathDto.PointType.CELL_POINT.getNumber()) {
      output.writeEnum(1, pointType_);
    }
    for (int i = 0; i < cells_.size(); i++) {
      output.writeMessage(2, cells_.get(i));
    }
    for (int i = 0; i < waypoints_.size(); i++) {
      output.writeMessage(3, waypoints_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (pointType_ != net.rptools.maptool.server.proto.PathDto.PointType.CELL_POINT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, pointType_);
    }
    for (int i = 0; i < cells_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, cells_.get(i));
    }
    for (int i = 0; i < waypoints_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, waypoints_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof net.rptools.maptool.server.proto.PathDto)) {
      return super.equals(obj);
    }
    net.rptools.maptool.server.proto.PathDto other = (net.rptools.maptool.server.proto.PathDto) obj;

    if (pointType_ != other.pointType_) return false;
    if (!getCellsList()
        .equals(other.getCellsList())) return false;
    if (!getWaypointsList()
        .equals(other.getWaypointsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + POINT_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + pointType_;
    if (getCellsCount() > 0) {
      hash = (37 * hash) + CELLS_FIELD_NUMBER;
      hash = (53 * hash) + getCellsList().hashCode();
    }
    if (getWaypointsCount() > 0) {
      hash = (37 * hash) + WAYPOINTS_FIELD_NUMBER;
      hash = (53 * hash) + getWaypointsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static net.rptools.maptool.server.proto.PathDto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.PathDto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.PathDto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.PathDto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.PathDto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.rptools.maptool.server.proto.PathDto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.PathDto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.PathDto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.PathDto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.PathDto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.rptools.maptool.server.proto.PathDto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static net.rptools.maptool.server.proto.PathDto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(net.rptools.maptool.server.proto.PathDto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code maptool.PathDto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maptool.PathDto)
      net.rptools.maptool.server.proto.PathDtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_PathDto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_PathDto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.rptools.maptool.server.proto.PathDto.class, net.rptools.maptool.server.proto.PathDto.Builder.class);
    }

    // Construct using net.rptools.maptool.server.proto.PathDto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getCellsFieldBuilder();
        getWaypointsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      pointType_ = 0;

      if (cellsBuilder_ == null) {
        cells_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        cellsBuilder_.clear();
      }
      if (waypointsBuilder_ == null) {
        waypoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        waypointsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return net.rptools.maptool.server.proto.DataTranferObjectProtos.internal_static_maptool_PathDto_descriptor;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.PathDto getDefaultInstanceForType() {
      return net.rptools.maptool.server.proto.PathDto.getDefaultInstance();
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.PathDto build() {
      net.rptools.maptool.server.proto.PathDto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public net.rptools.maptool.server.proto.PathDto buildPartial() {
      net.rptools.maptool.server.proto.PathDto result = new net.rptools.maptool.server.proto.PathDto(this);
      int from_bitField0_ = bitField0_;
      result.pointType_ = pointType_;
      if (cellsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          cells_ = java.util.Collections.unmodifiableList(cells_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cells_ = cells_;
      } else {
        result.cells_ = cellsBuilder_.build();
      }
      if (waypointsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          waypoints_ = java.util.Collections.unmodifiableList(waypoints_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.waypoints_ = waypoints_;
      } else {
        result.waypoints_ = waypointsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof net.rptools.maptool.server.proto.PathDto) {
        return mergeFrom((net.rptools.maptool.server.proto.PathDto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(net.rptools.maptool.server.proto.PathDto other) {
      if (other == net.rptools.maptool.server.proto.PathDto.getDefaultInstance()) return this;
      if (other.pointType_ != 0) {
        setPointTypeValue(other.getPointTypeValue());
      }
      if (cellsBuilder_ == null) {
        if (!other.cells_.isEmpty()) {
          if (cells_.isEmpty()) {
            cells_ = other.cells_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCellsIsMutable();
            cells_.addAll(other.cells_);
          }
          onChanged();
        }
      } else {
        if (!other.cells_.isEmpty()) {
          if (cellsBuilder_.isEmpty()) {
            cellsBuilder_.dispose();
            cellsBuilder_ = null;
            cells_ = other.cells_;
            bitField0_ = (bitField0_ & ~0x00000001);
            cellsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCellsFieldBuilder() : null;
          } else {
            cellsBuilder_.addAllMessages(other.cells_);
          }
        }
      }
      if (waypointsBuilder_ == null) {
        if (!other.waypoints_.isEmpty()) {
          if (waypoints_.isEmpty()) {
            waypoints_ = other.waypoints_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureWaypointsIsMutable();
            waypoints_.addAll(other.waypoints_);
          }
          onChanged();
        }
      } else {
        if (!other.waypoints_.isEmpty()) {
          if (waypointsBuilder_.isEmpty()) {
            waypointsBuilder_.dispose();
            waypointsBuilder_ = null;
            waypoints_ = other.waypoints_;
            bitField0_ = (bitField0_ & ~0x00000002);
            waypointsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getWaypointsFieldBuilder() : null;
          } else {
            waypointsBuilder_.addAllMessages(other.waypoints_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      net.rptools.maptool.server.proto.PathDto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (net.rptools.maptool.server.proto.PathDto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int pointType_ = 0;
    /**
     * <code>.maptool.PathDto.PointType point_type = 1;</code>
     * @return The enum numeric value on the wire for pointType.
     */
    @java.lang.Override public int getPointTypeValue() {
      return pointType_;
    }
    /**
     * <code>.maptool.PathDto.PointType point_type = 1;</code>
     * @param value The enum numeric value on the wire for pointType to set.
     * @return This builder for chaining.
     */
    public Builder setPointTypeValue(int value) {
      
      pointType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.PathDto.PointType point_type = 1;</code>
     * @return The pointType.
     */
    @java.lang.Override
    public net.rptools.maptool.server.proto.PathDto.PointType getPointType() {
      @SuppressWarnings("deprecation")
      net.rptools.maptool.server.proto.PathDto.PointType result = net.rptools.maptool.server.proto.PathDto.PointType.valueOf(pointType_);
      return result == null ? net.rptools.maptool.server.proto.PathDto.PointType.UNRECOGNIZED : result;
    }
    /**
     * <code>.maptool.PathDto.PointType point_type = 1;</code>
     * @param value The pointType to set.
     * @return This builder for chaining.
     */
    public Builder setPointType(net.rptools.maptool.server.proto.PathDto.PointType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      pointType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.maptool.PathDto.PointType point_type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearPointType() {
      
      pointType_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<net.rptools.maptool.server.proto.drawing.IntPointDto> cells_ =
      java.util.Collections.emptyList();
    private void ensureCellsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        cells_ = new java.util.ArrayList<net.rptools.maptool.server.proto.drawing.IntPointDto>(cells_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.IntPointDto, net.rptools.maptool.server.proto.drawing.IntPointDto.Builder, net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder> cellsBuilder_;

    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.drawing.IntPointDto> getCellsList() {
      if (cellsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(cells_);
      } else {
        return cellsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public int getCellsCount() {
      if (cellsBuilder_ == null) {
        return cells_.size();
      } else {
        return cellsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public net.rptools.maptool.server.proto.drawing.IntPointDto getCells(int index) {
      if (cellsBuilder_ == null) {
        return cells_.get(index);
      } else {
        return cellsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public Builder setCells(
        int index, net.rptools.maptool.server.proto.drawing.IntPointDto value) {
      if (cellsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCellsIsMutable();
        cells_.set(index, value);
        onChanged();
      } else {
        cellsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public Builder setCells(
        int index, net.rptools.maptool.server.proto.drawing.IntPointDto.Builder builderForValue) {
      if (cellsBuilder_ == null) {
        ensureCellsIsMutable();
        cells_.set(index, builderForValue.build());
        onChanged();
      } else {
        cellsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public Builder addCells(net.rptools.maptool.server.proto.drawing.IntPointDto value) {
      if (cellsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCellsIsMutable();
        cells_.add(value);
        onChanged();
      } else {
        cellsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public Builder addCells(
        int index, net.rptools.maptool.server.proto.drawing.IntPointDto value) {
      if (cellsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCellsIsMutable();
        cells_.add(index, value);
        onChanged();
      } else {
        cellsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public Builder addCells(
        net.rptools.maptool.server.proto.drawing.IntPointDto.Builder builderForValue) {
      if (cellsBuilder_ == null) {
        ensureCellsIsMutable();
        cells_.add(builderForValue.build());
        onChanged();
      } else {
        cellsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public Builder addCells(
        int index, net.rptools.maptool.server.proto.drawing.IntPointDto.Builder builderForValue) {
      if (cellsBuilder_ == null) {
        ensureCellsIsMutable();
        cells_.add(index, builderForValue.build());
        onChanged();
      } else {
        cellsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public Builder addAllCells(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.drawing.IntPointDto> values) {
      if (cellsBuilder_ == null) {
        ensureCellsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cells_);
        onChanged();
      } else {
        cellsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public Builder clearCells() {
      if (cellsBuilder_ == null) {
        cells_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        cellsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public Builder removeCells(int index) {
      if (cellsBuilder_ == null) {
        ensureCellsIsMutable();
        cells_.remove(index);
        onChanged();
      } else {
        cellsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public net.rptools.maptool.server.proto.drawing.IntPointDto.Builder getCellsBuilder(
        int index) {
      return getCellsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder getCellsOrBuilder(
        int index) {
      if (cellsBuilder_ == null) {
        return cells_.get(index);  } else {
        return cellsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder> 
         getCellsOrBuilderList() {
      if (cellsBuilder_ != null) {
        return cellsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(cells_);
      }
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public net.rptools.maptool.server.proto.drawing.IntPointDto.Builder addCellsBuilder() {
      return getCellsFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.drawing.IntPointDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public net.rptools.maptool.server.proto.drawing.IntPointDto.Builder addCellsBuilder(
        int index) {
      return getCellsFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.drawing.IntPointDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.IntPointDto cells = 2;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.drawing.IntPointDto.Builder> 
         getCellsBuilderList() {
      return getCellsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.IntPointDto, net.rptools.maptool.server.proto.drawing.IntPointDto.Builder, net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder> 
        getCellsFieldBuilder() {
      if (cellsBuilder_ == null) {
        cellsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.IntPointDto, net.rptools.maptool.server.proto.drawing.IntPointDto.Builder, net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder>(
                cells_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        cells_ = null;
      }
      return cellsBuilder_;
    }

    private java.util.List<net.rptools.maptool.server.proto.drawing.IntPointDto> waypoints_ =
      java.util.Collections.emptyList();
    private void ensureWaypointsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        waypoints_ = new java.util.ArrayList<net.rptools.maptool.server.proto.drawing.IntPointDto>(waypoints_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.IntPointDto, net.rptools.maptool.server.proto.drawing.IntPointDto.Builder, net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder> waypointsBuilder_;

    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.drawing.IntPointDto> getWaypointsList() {
      if (waypointsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(waypoints_);
      } else {
        return waypointsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public int getWaypointsCount() {
      if (waypointsBuilder_ == null) {
        return waypoints_.size();
      } else {
        return waypointsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public net.rptools.maptool.server.proto.drawing.IntPointDto getWaypoints(int index) {
      if (waypointsBuilder_ == null) {
        return waypoints_.get(index);
      } else {
        return waypointsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public Builder setWaypoints(
        int index, net.rptools.maptool.server.proto.drawing.IntPointDto value) {
      if (waypointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWaypointsIsMutable();
        waypoints_.set(index, value);
        onChanged();
      } else {
        waypointsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public Builder setWaypoints(
        int index, net.rptools.maptool.server.proto.drawing.IntPointDto.Builder builderForValue) {
      if (waypointsBuilder_ == null) {
        ensureWaypointsIsMutable();
        waypoints_.set(index, builderForValue.build());
        onChanged();
      } else {
        waypointsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public Builder addWaypoints(net.rptools.maptool.server.proto.drawing.IntPointDto value) {
      if (waypointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWaypointsIsMutable();
        waypoints_.add(value);
        onChanged();
      } else {
        waypointsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public Builder addWaypoints(
        int index, net.rptools.maptool.server.proto.drawing.IntPointDto value) {
      if (waypointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWaypointsIsMutable();
        waypoints_.add(index, value);
        onChanged();
      } else {
        waypointsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public Builder addWaypoints(
        net.rptools.maptool.server.proto.drawing.IntPointDto.Builder builderForValue) {
      if (waypointsBuilder_ == null) {
        ensureWaypointsIsMutable();
        waypoints_.add(builderForValue.build());
        onChanged();
      } else {
        waypointsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public Builder addWaypoints(
        int index, net.rptools.maptool.server.proto.drawing.IntPointDto.Builder builderForValue) {
      if (waypointsBuilder_ == null) {
        ensureWaypointsIsMutable();
        waypoints_.add(index, builderForValue.build());
        onChanged();
      } else {
        waypointsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public Builder addAllWaypoints(
        java.lang.Iterable<? extends net.rptools.maptool.server.proto.drawing.IntPointDto> values) {
      if (waypointsBuilder_ == null) {
        ensureWaypointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, waypoints_);
        onChanged();
      } else {
        waypointsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public Builder clearWaypoints() {
      if (waypointsBuilder_ == null) {
        waypoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        waypointsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public Builder removeWaypoints(int index) {
      if (waypointsBuilder_ == null) {
        ensureWaypointsIsMutable();
        waypoints_.remove(index);
        onChanged();
      } else {
        waypointsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public net.rptools.maptool.server.proto.drawing.IntPointDto.Builder getWaypointsBuilder(
        int index) {
      return getWaypointsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder getWaypointsOrBuilder(
        int index) {
      if (waypointsBuilder_ == null) {
        return waypoints_.get(index);  } else {
        return waypointsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public java.util.List<? extends net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder> 
         getWaypointsOrBuilderList() {
      if (waypointsBuilder_ != null) {
        return waypointsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(waypoints_);
      }
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public net.rptools.maptool.server.proto.drawing.IntPointDto.Builder addWaypointsBuilder() {
      return getWaypointsFieldBuilder().addBuilder(
          net.rptools.maptool.server.proto.drawing.IntPointDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public net.rptools.maptool.server.proto.drawing.IntPointDto.Builder addWaypointsBuilder(
        int index) {
      return getWaypointsFieldBuilder().addBuilder(
          index, net.rptools.maptool.server.proto.drawing.IntPointDto.getDefaultInstance());
    }
    /**
     * <code>repeated .maptool.IntPointDto waypoints = 3;</code>
     */
    public java.util.List<net.rptools.maptool.server.proto.drawing.IntPointDto.Builder> 
         getWaypointsBuilderList() {
      return getWaypointsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        net.rptools.maptool.server.proto.drawing.IntPointDto, net.rptools.maptool.server.proto.drawing.IntPointDto.Builder, net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder> 
        getWaypointsFieldBuilder() {
      if (waypointsBuilder_ == null) {
        waypointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            net.rptools.maptool.server.proto.drawing.IntPointDto, net.rptools.maptool.server.proto.drawing.IntPointDto.Builder, net.rptools.maptool.server.proto.drawing.IntPointDtoOrBuilder>(
                waypoints_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        waypoints_ = null;
      }
      return waypointsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maptool.PathDto)
  }

  // @@protoc_insertion_point(class_scope:maptool.PathDto)
  private static final net.rptools.maptool.server.proto.PathDto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new net.rptools.maptool.server.proto.PathDto();
  }

  public static net.rptools.maptool.server.proto.PathDto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PathDto>
      PARSER = new com.google.protobuf.AbstractParser<PathDto>() {
    @java.lang.Override
    public PathDto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PathDto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PathDto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PathDto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public net.rptools.maptool.server.proto.PathDto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

